[{"path":"https://tianxia-jia.github.io/mcgf/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mcgf authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Steps for fitting an `mcgf` object","text":"mcgf package contains useful functions simulate Markov chain Gaussian fields (MCGF) regime-switching Markov chain Gaussian fields (RS-MCGF) covariance structures Gneiting class (Gneiting 2002). also provides useful tools estimate parameters weighted least squares (WLS) maximum likelihood estimation (MLE). mcgf function can used fit covariance models obtain Kriging forecasts. typical workflow fitting non-regime-switching mcgf given . Create mcgf object providing dataset corresponding locations/distances Calculate auto- cross-correlations. Fit base covariance model fully symmetric model. Fit Lagrangian model account asymmetry, necessary. Obtain Kriging forecasts. Obtain Kriging forecasts new locations given coordinates. demonstrate use mcgf example .","code":""},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"irish-wind","dir":"Articles","previous_headings":"","what":"Irish Wind","title":"Steps for fitting an `mcgf` object","text":"Ireland wind data contains daily wind speeds 1961-1978 11 synoptic meteorological stations Republic Ireland. available gstat package also imported mcgf. view details dataset, run help(wind). object wind contains wind speeds data well locations stations.","code":"library(mcgf) data(wind) head(wind$data) #>         time      VAL      BEL       CLA      SHA      ROC      BIR      MUL #> 1 1961-01-01 7.696089 9.517222 5.2730556 7.181644 7.737244 5.077567 5.571433 #> 2 1961-01-02 8.683822 9.023356 5.1650222 6.492289 7.567478 3.945789 5.036411 #> 3 1961-01-03 8.683822 6.559167 4.1361333 5.746344 9.517222 3.174122 4.372778 #> 4 1961-01-04 3.410767 2.808867 0.9208556 2.335578 5.442822 1.481600 2.999211 #> 5 1961-01-05 6.816389 6.646622 3.3644667 5.509700 6.857544 4.223589 5.617733 #> 6 1961-01-06 4.177289 4.177289 2.2738444 2.762567 6.795811 2.315000 3.688567 #>        MAL      KIL      CLO      DUB #> 1 7.737244 4.779189 6.471711 7.032456 #> 2 7.114767 3.343889 4.974678 5.916111 #> 3 6.538589 5.211322 3.945789 5.787500 #> 4 5.597156 2.356156 3.024933 4.439656 #> 5 6.085878 3.174122 5.319356 6.132178 #> 6 6.775233 3.431344 3.858333 5.489122 wind$locations #>            lon      lat #> VAL -10.250000 51.93333 #> BEL -10.000000 54.23333 #> CLA  -8.983333 53.71667 #> SHA  -8.916667 52.70000 #> ROC  -8.250000 51.80000 #> BIR  -7.883333 53.08333 #> MUL  -7.366667 53.53333 #> MAL  -7.333333 55.36667 #> KIL  -7.266667 52.66667 #> CLO  -7.233333 54.18333 #> DUB  -6.250000 53.43333"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"data-de-treding","dir":"Articles","previous_headings":"Irish Wind","what":"Data De-treding","title":"Steps for fitting an `mcgf` object","text":"fit covariance models wind, first step load data set de-trend data mean-zero time series. follow data de-trending procedure Gneiting, Genton, Guttorp (2006). start removing leap day take square-root transformation. need use lubridate package. Next, split data training test datasets, training contains data 1961-1970 test spans 1971-1978. estimate remove annual trend training dataset. annual trend daily averages across training years. use dplyr package task. obtain mean-zero time series, subtract station-wise mean station. Finally, subtract annual trend station-wise mean test dataset.","code":"# install.packages(\"lubridate\") library(lubridate) ind_leap <- month(wind$data$time) == 2 & day(wind$data$time) == 29 wind_de <- wind$data[!ind_leap, ] wind_de[, -1] <- sqrt(wind_de[, -1]) is_train <- year(wind_de$time) <= 1970 wind_train <- wind_de[is_train, ] wind_test <- wind_de[!is_train, ] # install.packages(\"dplyr\") library(dplyr) # Estimate annual trend avg_train <- tibble(     month = month(wind_train$time),     day = day(wind_train$time),     ws = rowMeans(wind_train[, -1]) ) trend_train <- avg_train %>%     group_by(month, day) %>%     summarise(trend = mean(ws))  # Subtract annual trend trend_train2 <- left_join(avg_train, trend_train, by = c(\"month\", \"day\"))$trend wind_train[, -1] <- wind_train[, -1] - trend_train2 # Subtract station-wise mean mean_train <- colMeans(wind_train[, -1]) wind_train[, -1] <- sweep(wind_train[, -1], 2, mean_train) wind_trend <- list(     annual = as.data.frame(trend_train),     mean = mean_train ) avg_test <- tibble(     month = month(wind_test$time),     day = day(wind_test$time) ) trend_train3 <-     left_join(avg_test, trend_train, by = c(\"month\", \"day\"))$trend wind_test[, -1] <- wind_test[, -1] - trend_train3 wind_test[, -1] <- sweep(wind_test[, -1], 2, mean_train)"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"fitting-covariance-models","dir":"Articles","previous_headings":"Irish Wind","what":"Fitting Covariance Models","title":"Steps for fitting an `mcgf` object","text":"first fit pure spatial temporal models, fully symmetric model, finally general stationary model. First, create mcgf object calculate auto- cross- correlations. acfs actually refers mean auto-correlations across stations time lag. view calculated acfs, can run: Similarly, can view ccfs :","code":"wind_mcgf <- mcgf(wind_train[, -1], locations = wind$locations, longlat = TRUE) #> `time` is not provided, assuming rows are equally spaced temporally. wind_mcgf <- add_acfs(wind_mcgf, lag_max = 3) wind_mcgf <- add_ccfs(wind_mcgf, lag_max = 3) acfs(wind_mcgf) #>      lag0      lag1      lag2      lag3  #> 1.0000000 0.5072739 0.2382621 0.1643998 ccfs(wind_mcgf) #> , , lag0 #>  #>           VAL       BEL       CLA       SHA       ROC       BIR       MUL #> VAL 1.0000000 0.7076428 0.7588797 0.8299603 0.7962082 0.7719814 0.6688609 #> BEL 0.7076428 1.0000000 0.8471918 0.7432194 0.5795413 0.7650007 0.7371354 #> CLA 0.7588797 0.8471918 1.0000000 0.8520358 0.6994680 0.8777462 0.8410719 #> SHA 0.8299603 0.7432194 0.8520358 1.0000000 0.7960579 0.8865147 0.8239009 #> ROC 0.7962082 0.5795413 0.6994680 0.7960579 1.0000000 0.7592625 0.7305102 #> BIR 0.7719814 0.7650007 0.8777462 0.8865147 0.7592625 1.0000000 0.8841425 #> MUL 0.6688609 0.7371354 0.8410719 0.8239009 0.7305102 0.8841425 1.0000000 #> MAL 0.5153690 0.7087588 0.6818106 0.6121929 0.5357199 0.6411302 0.7375539 #> KIL 0.7333467 0.6487696 0.7772730 0.8236153 0.8338255 0.8406781 0.8414494 #> CLO 0.6718720 0.7697673 0.8511102 0.7759129 0.6876764 0.8436560 0.8699373 #> DUB 0.5967529 0.6498491 0.7420593 0.7361857 0.6862624 0.7812147 0.8609285 #>           MAL       KIL       CLO       DUB #> VAL 0.5153690 0.7333467 0.6718720 0.5967529 #> BEL 0.7087588 0.6487696 0.7697673 0.6498491 #> CLA 0.6818106 0.7772730 0.8511102 0.7420593 #> SHA 0.6121929 0.8236153 0.7759129 0.7361857 #> ROC 0.5357199 0.8338255 0.6876764 0.6862624 #> BIR 0.6411302 0.8406781 0.8436560 0.7812147 #> MUL 0.7375539 0.8414494 0.8699373 0.8609285 #> MAL 1.0000000 0.5892218 0.7568132 0.7145366 #> KIL 0.5892218 1.0000000 0.7934818 0.7770512 #> CLO 0.7568132 0.7934818 1.0000000 0.8161496 #> DUB 0.7145366 0.7770512 0.8161496 1.0000000 #>  #> , , lag1 #>  #>           VAL       BEL       CLA       SHA       ROC       BIR       MUL #> VAL 0.4739681 0.4078097 0.3734029 0.4028977 0.3406302 0.3871317 0.3171416 #> BEL 0.3843919 0.5310138 0.4208376 0.3899411 0.2819817 0.4000168 0.3695143 #> CLA 0.4164508 0.4814516 0.4993218 0.4450647 0.3244728 0.4521809 0.4020938 #> SHA 0.4719522 0.4646048 0.4689832 0.5137855 0.3883962 0.4677375 0.4100365 #> ROC 0.4706594 0.3793417 0.3852120 0.4285917 0.4442973 0.4113073 0.3590478 #> BIR 0.4725125 0.4964189 0.4986726 0.4927316 0.3919890 0.5409202 0.4557624 #> MUL 0.4438395 0.5082231 0.5039360 0.4898975 0.4056061 0.5097809 0.5228395 #> MAL 0.3550724 0.4616666 0.4118390 0.3918386 0.3360198 0.3792364 0.4182625 #> KIL 0.4867586 0.4607927 0.4866086 0.4964729 0.4299541 0.4930438 0.4430179 #> CLO 0.4390459 0.5117641 0.5057839 0.4686427 0.3853159 0.4904330 0.4549374 #> DUB 0.4333070 0.4698080 0.4829445 0.4819004 0.4349093 0.4860929 0.4858079 #>           MAL       KIL       CLO       DUB #> VAL 0.2712570 0.2917876 0.3248601 0.2900024 #> BEL 0.3554572 0.3012227 0.3806926 0.3179568 #> CLA 0.3289562 0.3458138 0.4112028 0.3569920 #> SHA 0.3203410 0.3834180 0.4088611 0.3736715 #> ROC 0.2950458 0.3540329 0.3479210 0.3484134 #> BIR 0.3408605 0.3973215 0.4505508 0.3984836 #> MUL 0.4151149 0.4232129 0.4664284 0.4434980 #> MAL 0.5296408 0.3105146 0.4036000 0.4002747 #> KIL 0.3227371 0.4642266 0.4387080 0.3981810 #> CLO 0.4032414 0.4076724 0.5190745 0.4289406 #> DUB 0.4428008 0.4300411 0.4765407 0.5409250 #>  #> , , lag2 #>  #>           VAL       BEL       CLA       SHA       ROC       BIR       MUL #> VAL 0.2011319 0.1973159 0.1630851 0.1871285 0.1489858 0.1943355 0.1492425 #> BEL 0.1713197 0.2588323 0.1891480 0.1936055 0.1240906 0.2020276 0.1806373 #> CLA 0.1585236 0.2132206 0.2247423 0.2000905 0.1184259 0.2115274 0.1763905 #> SHA 0.1938118 0.2298367 0.2157028 0.2391773 0.1589136 0.2265611 0.1844087 #> ROC 0.1765714 0.1716184 0.1421018 0.1764547 0.1696931 0.1742268 0.1451217 #> BIR 0.2020194 0.2401048 0.2278565 0.2262318 0.1628422 0.2765692 0.2136481 #> MUL 0.1862142 0.2487854 0.2182151 0.2159567 0.1694341 0.2448788 0.2510983 #> MAL 0.1555252 0.2110852 0.1623937 0.1691266 0.1462008 0.1585537 0.1853651 #> KIL 0.1743715 0.2068322 0.1970328 0.2091868 0.1495429 0.2192173 0.1882474 #> CLO 0.1835787 0.2349159 0.2190671 0.2138391 0.1511675 0.2355708 0.2042911 #> DUB 0.1856084 0.2176080 0.2022041 0.2148639 0.1950841 0.2234817 0.2150465 #>           MAL       KIL       CLO       DUB #> VAL 0.1427551 0.1382869 0.1666310 0.1535865 #> BEL 0.1754907 0.1388237 0.1941650 0.1629718 #> CLA 0.1419690 0.1537041 0.1979937 0.1674888 #> SHA 0.1503395 0.1803397 0.2022438 0.1764521 #> ROC 0.1458883 0.1373046 0.1488279 0.1654739 #> BIR 0.1438303 0.1844782 0.2197392 0.1920556 #> MUL 0.1950942 0.1905402 0.2183714 0.2084112 #> MAL 0.2636079 0.1107242 0.1729375 0.1921164 #> KIL 0.1334084 0.1931797 0.1982144 0.1790683 #> CLO 0.1715671 0.1793731 0.2624348 0.2135477 #> DUB 0.2180694 0.1899728 0.2270066 0.2804169 #>  #> , , lag3 #>  #>            VAL       BEL        CLA        SHA        ROC        BIR        MUL #> VAL 0.15186704 0.1424697 0.12263507 0.12486035 0.11217575 0.14386635 0.09991865 #> BEL 0.12223738 0.1854410 0.13490665 0.13169403 0.08728794 0.14207057 0.12397596 #> CLA 0.10549441 0.1408343 0.16084299 0.13066846 0.07914442 0.13859706 0.10865229 #> SHA 0.12004043 0.1511578 0.14232764 0.14961877 0.09888111 0.14670946 0.11247087 #> ROC 0.11051322 0.1022188 0.08007433 0.09282562 0.10856180 0.10063755 0.07957425 #> BIR 0.13309457 0.1594322 0.15267585 0.13773090 0.10595023 0.19194636 0.13771463 #> MUL 0.11364183 0.1682815 0.14195183 0.12747872 0.10407473 0.15372629 0.16630054 #> MAL 0.09065312 0.1431289 0.10244646 0.10197080 0.09770836 0.08625211 0.11386343 #> KIL 0.09511038 0.1179299 0.11535092 0.11479319 0.07924395 0.12369722 0.10034132 #> CLO 0.12004487 0.1584521 0.15581710 0.13825387 0.10650927 0.15601087 0.13152273 #> DUB 0.10526163 0.1331954 0.11965370 0.11622550 0.11602725 0.12380225 0.11590933 #>            MAL        KIL        CLO       DUB #> VAL 0.11038186 0.09840820 0.12881956 0.1131093 #> BEL 0.11895940 0.09539470 0.13930407 0.1065024 #> CLA 0.08566429 0.10250903 0.13807158 0.1059626 #> SHA 0.10015324 0.11889068 0.14364630 0.1110210 #> ROC 0.10700118 0.08017778 0.09975703 0.1043980 #> BIR 0.09283539 0.12122167 0.15906405 0.1304590 #> MUL 0.13033344 0.11347989 0.14872192 0.1286318 #> MAL 0.19778972 0.05899522 0.10990283 0.1253038 #> KIL 0.07627083 0.11333371 0.12609113 0.1024267 #> CLO 0.10926382 0.12014806 0.20136056 0.1459052 #> DUB 0.14141118 0.10085759 0.14688397 0.1813353"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"pure-spatial-model","dir":"Articles","previous_headings":"Irish Wind > Fitting Covariance Models","what":"Pure Spatial Model","title":"Steps for fitting an `mcgf` object","text":"pure spatial model can fitted using fit_base function. results actually obtained optimization function nlminb. set gamma 0.5 estimated along c nugget. default mcgf provides two optimization functions: nlminb optim. optimization functions also supported long first two arguments initial values parameters function minimized respectively (optim nlminb). Also, argument names upper lower bounds upper lower, can create simple wrapper “change” .","code":"fit_spatial <- fit_base(     wind_mcgf,     model = \"spatial\",     lag = 3,     par_init = c(nugget = 0.1, c = 0.001),     par_fixed = c(gamma = 0.5) ) fit_spatial$fit #> $par #>           c      nugget  #> 0.001326192 0.049136042  #>  #> $objective #> [1] 1.742162 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 9 #>  #> $evaluations #> function gradient  #>       23       24  #>  #> $message #> [1] \"relative convergence (4)\" library(Rsolnp) solnp2 <- function(pars, fun, lower, upper, ...) {     solnp(pars, fun, LB = lower, UB = upper, ...) } fit_spatial2 <- fit_base(     wind_mcgf,     model = \"spatial\",     lag = 3,     par_init = c(nugget = 0.1, c = 0.001),     par_fixed = c(gamma = 0.5),     optim_fn = \"other\",     other_optim_fn = \"solnp2\" ) #>  #> Iter: 1 fn: 1.7422    Pars:  0.001326 0.049164 #> Iter: 2 fn: 1.7422    Pars:  0.001326 0.049164 #> solnp--> Completed in 2 iterations fit_spatial2$fit #> $pars #>           c      nugget  #> 0.001325958 0.049163635  #>  #> $convergence #> [1] 0 #>  #> $values #> [1] 2.539010 1.742162 1.742162 #>  #> $lagrange #> [1] 0 #>  #> $hessian #>            [,1]       [,2] #> [1,] 58504276.4 391217.107 #> [2,]   391217.1   3319.562 #>  #> $ineqx0 #> NULL #>  #> $nfuneval #> [1] 79 #>  #> $outer.iter #> [1] 2 #>  #> $elapsed #> Time difference of 0.009627342 secs #>  #> $vscale #> [1] 1 1 1"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"pure-temporal-model","dir":"Articles","previous_headings":"Irish Wind > Fitting Covariance Models","what":"Pure Temporal Model","title":"Steps for fitting an `mcgf` object","text":"pure temporal can also fitted fit_base: fitting fully symmetric model, need store fitted spatial temporal models wind_mcgf using add_base:","code":"fit_temporal <- fit_base(     wind_mcgf,     model = \"temporal\",     lag = 3,     par_init = c(a = 0.5, alpha = 0.5) ) fit_temporal$fit #> $par #>         a     alpha  #> 0.9774157 0.8053363  #>  #> $objective #> [1] 0.0006466064 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 12 #>  #> $evaluations #> function gradient  #>       15       31  #>  #> $message #> [1] \"both X-convergence and relative convergence (5)\" wind_mcgf <- add_base(wind_mcgf,     fit_s = fit_spatial,     fit_t = fit_temporal,     sep = T )"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"separable-model","dir":"Articles","previous_headings":"Irish Wind > Fitting Covariance Models","what":"Separable Model","title":"Steps for fitting an `mcgf` object","text":"can also fit pure spatial temporal models fitting separable model: can also store model wind_mcgf, consistent Gneiting, Genton, Guttorp (2006), just use estimates pure spatial temporal models estimate interaction parameter beta.","code":"fit_sep <- fit_base(     wind_mcgf,     model = \"sep\",     lag = 3,     par_init = c(nugget = 0.1, c = 0.001, a = 0.5, alpha = 0.5),     par_fixed = c(gamma = 0.5) ) fit_sep$fit #> $par #>           c      nugget           a       alpha  #> 0.001309486 0.050562930 0.877171418 0.869117992  #>  #> $objective #> [1] 2.838695 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 25 #>  #> $evaluations #> function gradient  #>       54      121  #>  #> $message #> [1] \"relative convergence (4)\""},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"fully-symmetric-model","dir":"Articles","previous_headings":"Irish Wind > Fitting Covariance Models","what":"Fully Symmetric Model","title":"Steps for fitting an `mcgf` object","text":"holding parameters constant, parameter beta can estimated : stage, fitted base model, store fully symmetric model base model print base model: old = TRUE add_base keeps fitted pure spatial temporal models records, used steps. recommended keep old model reproducibility, keep history fitted models.","code":"par_sep <- c(fit_spatial$fit$par, fit_temporal$fit$par, gamma = 0.5) fit_fs <-     fit_base(         wind_mcgf,         model = \"fs\",         lag = 3,         par_init = c(beta = 0),         par_fixed = par_sep     ) fit_fs$fit #> $par #>      beta  #> 0.6232458  #>  #> $objective #> [1] 2.858384 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 5 #>  #> $evaluations #> function gradient  #>        6        7  #>  #> $message #> [1] \"relative convergence (4)\" wind_mcgf <- add_base(wind_mcgf, fit_base = fit_fs, old = TRUE) model(wind_mcgf, model = \"base\", old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 3  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Base-old model: sep  #> - Parameters: #>           c      nugget       gamma           a       alpha  #> 0.001326192 0.049136042 0.500000000 0.977415717 0.805336266  #>  #> - Fixed parameters: #> gamma  #>   0.5  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Base model: fs  #> - Parameters: #>        beta           c      nugget           a       alpha       gamma  #> 0.623245823 0.001326192 0.049136042 0.977415717 0.805336266 0.500000000  #>  #> - Fixed parameters: #>           c      nugget           a       alpha       gamma  #> 0.001326192 0.049136042 0.977415717 0.805336266 0.500000000  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"lagrangian-model","dir":"Articles","previous_headings":"Irish Wind > Fitting Covariance Models","what":"Lagrangian Model","title":"Steps for fitting an `mcgf` object","text":"fit Lagrangian correlation function model westerly wind: Finally store model wind_mcgf using add_lagr print final model:","code":"fit_lagr <- fit_lagr(wind_mcgf,     model = \"lagr_tri\",     par_init = c(v1 = 200, lambda = 0.1),     par_fixed = c(v2 = 0, k = 2) ) fit_lagr$fit #> $par #>       lambda           v1  #>   0.05595016 212.29485854  #>  #> $objective #> [1] 2.662327 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 18 #>  #> $evaluations #> function gradient  #>       21       54  #>  #> $message #> [1] \"relative convergence (4)\" wind_mcgf <- add_lagr(wind_mcgf, fit_lagr = fit_lagr) model(wind_mcgf, old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 3  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Base-old model: sep  #> - Parameters: #>           c      nugget       gamma           a       alpha  #> 0.001326192 0.049136042 0.500000000 0.977415717 0.805336266  #>  #> - Fixed parameters: #> gamma  #>   0.5  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Base model: fs  #> - Parameters: #>        beta           c      nugget           a       alpha       gamma  #> 0.623245823 0.001326192 0.049136042 0.977415717 0.805336266 0.500000000  #>  #> - Fixed parameters: #>           c      nugget           a       alpha       gamma  #> 0.001326192 0.049136042 0.977415717 0.805336266 0.500000000  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> ---------------------------------------- #>               Lagrangian #> ---------------------------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>       lambda           v1           v2            k  #>   0.05595016 212.29485854   0.00000000   2.00000000  #>  #> - Fixed parameters: #> v2  k  #>  0  2  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"simple-kriging","dir":"Articles","previous_headings":"Irish Wind","what":"Simple Kriging","title":"Steps for fitting an `mcgf` object","text":"test dataset, can obtain simple kriging forecasts intervals empirical model, base model, general stationary model using krige function: Next, can compute root mean square error (RMSE), mean absolute error (MAE), realized percentage observations falling outside 95% PI (POPI) models test dataset.","code":"krige_emp <- krige(     x = wind_mcgf,     newdata = wind_test[, -1],     model = \"empirical\",     interval = TRUE ) krige_base <- krige(     x = wind_mcgf,     newdata = wind_test[, -1],     model = \"base\",     interval = TRUE ) krige_stat <- krige(     x = wind_mcgf,     newdata = wind_test[, -1],     model = \"all\",     interval = TRUE )"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"rmse","dir":"Articles","previous_headings":"Irish Wind > Simple Kriging","what":"RMSE","title":"Steps for fitting an `mcgf` object","text":"","code":"# RMSE rmse_emp <- sqrt(colMeans((wind_test[, -1] - krige_emp$fit)^2, na.rm = T)) rmse_base <- sqrt(colMeans((wind_test[, -1] - krige_base$fit)^2, na.rm = T)) rmse_stat <- sqrt(colMeans((wind_test[, -1] - krige_stat$fit)^2, na.rm = T)) rmse <- c(     \"Empirical\" = mean(rmse_emp),     \"Base\" = mean(rmse_base),     \"STAT\" = mean(rmse_stat) ) rmse #> Empirical      Base      STAT  #> 0.4778542 0.4890462 0.4852207"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"mae","dir":"Articles","previous_headings":"Irish Wind > Simple Kriging","what":"MAE","title":"Steps for fitting an `mcgf` object","text":"","code":"mae_emp <- colMeans(abs(wind_test[, -1] - krige_emp$fit), na.rm = T) mae_base <- colMeans(abs(wind_test[, -1] - krige_base$fit), na.rm = T) mae_stat <- colMeans(abs(wind_test[, -1] - krige_stat$fit), na.rm = T) mae <- c(     \"Empirical\" = mean(mae_emp),     \"Base\" = mean(mae_base),     \"STAT\" = mean(mae_stat) ) mae #> Empirical      Base      STAT  #> 0.3776108 0.3890038 0.3851617"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"popi","dir":"Articles","previous_headings":"Irish Wind > Simple Kriging","what":"POPI","title":"Steps for fitting an `mcgf` object","text":"","code":"# POPI popi_emp <- colMeans(     wind_test[, -1] < krige_emp$lower | wind_test[, -1] > krige_emp$upper,     na.rm = T ) popi_base <- colMeans(     wind_test[, -1] < krige_base$lower | wind_test[, -1] > krige_base$upper,     na.rm = T ) popi_stat <- colMeans(     wind_test[, -1] < krige_stat$lower | wind_test[, -1] > krige_stat$upper,     na.rm = T ) popi <- c(     \"Empirical\" = mean(popi_emp),     \"Base\" = mean(popi_base),     \"STAT\" = mean(popi_stat) ) popi #>  Empirical       Base       STAT  #> 0.06962321 0.06473026 0.06326550"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf.html","id":"simple-kriging-for-new-locations","dir":"Articles","previous_headings":"Irish Wind","what":"Simple Kriging for new locations","title":"Steps for fitting an `mcgf` object","text":"provide functionalists computing simple Kriging forecasts new locations. associated function krige_new, users can either supply coordinates new locations distance matrices locations. Hypotheticaly, suppose new location (\\(9^\\circ\\)W, \\(52^\\circ\\)N), kriging forecasts along forecasts rest stations general stationary model can obtained follows. time-series plot first 100 forecasts New_1:","code":"krige_stat_new <- krige_new(     x = wind_mcgf,     newdata = wind_test[, -1],     locations_new = c(-9, 52),     model = \"all\",     interval = TRUE ) head(krige_stat_new$fit) #>             VAL        BEL        CLA        SHA        ROC        BIR #> 3653         NA         NA         NA         NA         NA         NA #> 3654         NA         NA         NA         NA         NA         NA #> 3655         NA         NA         NA         NA         NA         NA #> 3656 -0.1447040 -0.3018214 -0.5758966 -0.4693314 -0.1046231 -0.5499500 #> 3657  0.5307650  0.1531176  0.2150980  0.3479844  0.4910715  0.3157901 #> 3658  0.1632995  0.1648983  0.1734723  0.1751080  0.1567910  0.3091076 #>             MUL        MAL        KIL        CLO        DUB      New_1 #> 3653         NA         NA         NA         NA         NA         NA #> 3654         NA         NA         NA         NA         NA         NA #> 3655         NA         NA         NA         NA         NA         NA #> 3656 -0.5196208 -0.2799845 -0.4627520 -0.7397430 -0.4240240 -0.4152704 #> 3657  0.2576929  0.1404444  0.1013024  0.1157068  0.2114298  0.8410688 #> 3658  0.3274626  0.3504309  0.1426461  0.1006568  0.4521153  0.2792891 plot.ts(krige_stat_new$fit[1:100, 12], ylab = \"Wind Speed for New_1\")"},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Steps for fitting an `mcgf_rs` object","text":"mcgf package contains useful functions simulate Markov chain Gaussian fields (MCGF) regime-switching Markov chain Gaussian fields (RS-MCGF) covariance structures Gneiting class (Gneiting 2002). also provides useful tools estimate parameters weighted least squares (WLS) maximum likelihood estimation (MLE). mcgf_rs function can used fit covariance models obtain Kriging forecasts. typical workflow fitting regime-switching mcgf given . Create mcgf_rs object providing dataset corresponding locations/distances Calculate auto- cross-correlations. Fit base covariance model fully symmetric model. Fit Lagrangian model account asymmetry, necessary. Obtain Kriging forecasts. Obtain Kriging forecasts new locations given coordinates. demonstrate use mcgf_rs example .","code":""},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"simulated-example","dir":"Articles","previous_headings":"","what":"Simulated Example","title":"Steps for fitting an `mcgf_rs` object","text":"generate regime-switching MCGF process size 5,000 general stationary covariance structure. specifically, suppose two regimes different prevailing winds fully symmetric model. begin simulating regime process first.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"regime-process","dir":"Articles","previous_headings":"Simulated Example","what":"Regime process","title":"Steps for fitting an `mcgf_rs` object","text":"start simulating transition matrix two-stage Markov chain high probabilities staying current regime. simulated transition matrix regime process given .","code":"library(mcgf) K <- 2 N <- 5000 lag <- 5  set.seed(123) tran_mat <- matrix(rnorm(K^2, mean = 0.06 / (K - 1), sd = 0.01), nrow = K) diag(tran_mat) <- rnorm(K, mean = 0.94, sd = 0.1) tran_mat <- sweep(abs(tran_mat), 1, rowSums(tran_mat), `/`) tran_mat #>            [,1]       [,2] #> [1,] 0.92650859 0.07349141 #> [2,] 0.04934827 0.95065173  regime <- rep(NA, N) regime[1] <- 1  for (n in 2:(N)) {     regime[n] <- sample(1:K, 1, prob = tran_mat[regime[n - 1], ]) } table(regime) #> regime #>    1    2  #> 1993 3007"},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"locations","dir":"Articles","previous_headings":"Simulated Example > Data Simulation","what":"Locations","title":"Steps for fitting an `mcgf_rs` object","text":"generate coordinates 25 locations treat last 5 locations unobserved locations.","code":"set.seed(123) x <- stats::rnorm(25, -110) y <- stats::rnorm(25, 50) locations_all <- cbind(lon = x, lat = y) locations <- locations_all[1:20, ] locations_new <- locations_all[-c(1:20), ] locations_all #>             lon      lat #>  [1,] -110.5605 48.31331 #>  [2,] -110.2302 50.83779 #>  [3,] -108.4413 50.15337 #>  [4,] -109.9295 48.86186 #>  [5,] -109.8707 51.25381 #>  [6,] -108.2849 50.42646 #>  [7,] -109.5391 49.70493 #>  [8,] -111.2651 50.89513 #>  [9,] -110.6869 50.87813 #> [10,] -110.4457 50.82158 #> [11,] -108.7759 50.68864 #> [12,] -109.6402 50.55392 #> [13,] -109.5992 49.93809 #> [14,] -109.8893 49.69404 #> [15,] -110.5558 49.61953 #> [16,] -108.2131 49.30529 #> [17,] -109.5021 49.79208 #> [18,] -111.9666 48.73460 #> [19,] -109.2986 52.16896 #> [20,] -110.4728 51.20796 #> [21,] -111.0678 48.87689 #> [22,] -110.2180 49.59712 #> [23,] -111.0260 49.53334 #> [24,] -110.7289 50.77997 #> [25,] -110.6250 49.91663"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"data-simulation-1","dir":"Articles","previous_headings":"Simulated Example > Data Simulation","what":"Data simulation","title":"Steps for fitting an `mcgf_rs` object","text":"simulate 5-th order RS-MCGF process, calculate distance matrices locations first use mcgf_rs_sim simulate process. holdout new locations parameter estimation.","code":"# simulate RS MCGF par_base <- list(     par_s = list(nugget = 0, c = 0.005, gamma = 0.5),     par_t = list(a = 0.5, alpha = 0.2) ) par_lagr1 <- list(v1 = 100, v2 = 100, k = 2) par_lagr2 <- list(v1 = 50, v2 = 100, k = 2)  h <- find_dists_new(locations, locations_new)  set.seed(123) data_all <- mcgf_rs_sim(     N = N, label = regime,     base_ls = list(\"sep\"),     lagrangian_ls = list(\"lagr_tri\"),     par_base_ls = list(par_base),     par_lagr_ls = list(par_lagr1, par_lagr2),     lambda_ls = list(0.3, 0.3),     lag_ls = list(lag, lag),     dists_ls = list(h, h) ) data_all <- data_all[-c(1:(lag + 1)), ] rownames(data_all) <- 1:nrow(data_all) head(data_all) #>   regime          1           2          3           4           5          6 #> 1      1 -0.4131534 -0.21405685  0.7229975 -0.08322733  0.07023563  1.1604699 #> 2      1 -1.7574429 -0.06411826  0.3964733 -1.75421279  0.80900801  0.9012895 #> 3      1 -0.8264216 -1.02490415 -0.4809606 -0.52653010 -0.49018553  0.4388830 #> 4      1  0.4089212 -0.72910670 -1.6972114 -0.01897436 -1.38506809 -1.1222586 #> 5      1 -0.4281591  0.03573133 -0.4868917 -0.58029926 -0.71498960 -0.5022470 #> 6      1 -0.9151832 -0.15757508  0.1973134 -1.31430392  0.24629283  0.9822986 #>            7          8           9           10         11         12 #> 1  0.3711177 -0.7330453 -0.63540128 -0.505026336  1.1774047  0.4296625 #> 2 -0.8354430 -0.2938705  0.03111661  0.085975510  1.1477487  0.4023173 #> 3 -1.6674136 -1.0990787 -1.00007998 -0.947069513  0.3588851 -0.8873257 #> 4 -0.9068406 -0.8932880 -0.58649863 -0.683863298 -0.9053647 -0.4603737 #> 5 -0.6486205 -0.9952912 -0.44048783 -0.006790727 -0.5014230  0.1964397 #> 6 -0.5239507 -0.6489432 -0.53016266 -0.683924188  1.2357249 -0.2040576 #>           13         14         15         16         17          18         19 #> 1  0.4330098  0.2688759 -0.2456852  1.1310980  0.5107434 -1.49171524  0.5461195 #> 2 -0.4543559 -0.9603846 -1.4064577 -0.4327531 -0.6527845 -2.36113493  2.0883711 #> 3 -1.4776433 -1.7967629 -1.9298573 -0.7471992 -1.4625251 -1.10579922  1.4295638 #> 4 -0.6764329 -0.9565217 -0.3102249 -0.1738450 -0.6722008 -0.01761965 -0.3733054 #> 5 -0.8742965 -0.6689574 -0.3878315  0.1411472 -0.6709104 -1.22389933 -0.7333397 #> 6 -0.4211337 -0.1178140 -1.2466737  0.1826659 -0.4473040 -2.16117290 -0.1881705 #>            20      New_1       New_2      New_3       New_4      New_5 #> 1 -0.44740467 -1.1643327 -0.06426498 -1.0297345 -0.77352947 -0.5462547 #> 2  0.79348781 -2.5153602 -1.36237046 -2.0750023 -0.01391596 -1.2526368 #> 3  0.01670341 -1.5287918 -2.41782779 -1.2808399 -1.23474600 -2.2184071 #> 4 -0.31026289 -0.3648568 -0.20992439  0.1999604 -0.81191510 -0.8132315 #> 5 -0.38518119 -0.9982079 -0.59390388 -0.8748418 -0.61917135 -0.1031998 #> 6 -0.48971901 -1.9617002 -1.33014481 -1.4159325 -0.20824058 -1.3501761 data_old <- data_all[, 1:21] data_new <- data_all[, -c(1:21)]"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"fitting-covariance-models","dir":"Articles","previous_headings":"Simulated Example","what":"Fitting Covariance Models","title":"Steps for fitting an `mcgf_rs` object","text":"first fit pure spatial temporal models, fully symmetric model, finally general stationary model. First, create mcgf_rs object calculate auto- cross- correlations. acfs actually refers mean auto-correlations across stations time lag. view calculated acfs, can run: Similarly, can view ccfs ccfs function. present lag 1 regime-switching ccfs first 6 locations two regimes.","code":"data_mcgf <- mcgf_rs(data_old[, -1],     locations = locations, longlat = TRUE,     label = data_old[, 1] ) #> `time` is not provided, assuming rows are equally spaced temporally. data_mcgf <- add_acfs(data_mcgf, lag_max = lag) data_mcgf <- add_ccfs(data_mcgf, lag_max = lag)  # If multiple cores are available # data_mcgf <- add_ccfs(data_mcgf, lag_max = lag, ncores = 8) acfs(data_mcgf) #> $acfs #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.6075506 0.4076272 0.3805953 0.3702800 0.3586723  #>  #> $acfs_rs #> $acfs_rs$`Regime 1` #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.5953378 0.3991894 0.3814418 0.3714696 0.3639292  #>  #> $acfs_rs$`Regime 2` #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.6149751 0.4125410 0.3797082 0.3691936 0.3550066 # Regime 1 ccfs(data_mcgf)$ccfs_rs$`Regime 1`[1:6, 1:6, 2] #>           1         2          3         4         5          6 #> 1 0.6047946 0.1236369 0.05451172 0.3713023 0.1363766 0.07120106 #> 2 0.3027375 0.6174314 0.25427725 0.4220703 0.4477891 0.23134358 #> 3 0.2293202 0.3347340 0.58222643 0.3837498 0.2952973 0.46537082 #> 4 0.5256692 0.1564803 0.12938351 0.6003370 0.1701296 0.11145141 #> 5 0.2602507 0.5444454 0.32282783 0.3751226 0.6132754 0.30494395 #> 6 0.1959693 0.3710529 0.53421219 0.3193299 0.3348082 0.56379838  # Regime 2 ccfs(data_mcgf)$ccfs_rs$`Regime 2`[1:6, 1:6, 2] #>           1         2         3         4         5         6 #> 1 0.6172964 0.1575309 0.1723283 0.3893590 0.1096808 0.1688383 #> 2 0.2620954 0.6289374 0.3280881 0.3878912 0.4234188 0.3004865 #> 3 0.2811509 0.3158273 0.6163612 0.4355238 0.2379046 0.4932367 #> 4 0.5759686 0.1825519 0.2120796 0.6293679 0.1514506 0.1733759 #> 5 0.1509059 0.5799483 0.4202242 0.2930347 0.6249524 0.4089683 #> 6 0.2351466 0.3713949 0.5875119 0.3502719 0.3122138 0.6069874"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"pure-spatial-model","dir":"Articles","previous_headings":"Simulated Example > Fitting Covariance Models","what":"Pure Spatial Model","title":"Steps for fitting an `mcgf_rs` object","text":"pure spatial model can fitted using fit_base function. results actually obtained optimization function nlminb. Since base model two regimes, set rs = FALSE indicate .","code":"fit_spatial <- fit_base(     data_mcgf,     model_ls = \"spatial\",     lag_ls = lag,     par_init_ls = list(c(c = 0.000001, gamma = 0.5)),     par_fixed_ls = list(c(nugget = 0)),     rs = FALSE ) fit_spatial[[1]]$fit #> $par #>          c      gamma  #> 0.00390725 0.50000000  #>  #> $objective #> [1] 13.20815 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 2 #>  #> $evaluations #> function gradient  #>       11        7  #>  #> $message #> [1] \"both X-convergence and relative convergence (5)\""},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"pure-temporal-model","dir":"Articles","previous_headings":"Simulated Example > Fitting Covariance Models","what":"Pure Temporal Model","title":"Steps for fitting an `mcgf_rs` object","text":"pure temporal can also fitted fit_base: can store fitted spatial temporal models data_mcgf using add_base:","code":"fit_temporal <- fit_base(     data_mcgf,     model = \"temporal\",     lag_ls = lag,     par_init_ls = list(c(a = 1, alpha = 0.5)),     rs = FALSE ) fit_temporal[[1]]$fit #> $par #>         a     alpha  #> 0.7137588 0.3484975  #>  #> $objective #> [1] 0.0202941 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 9 #>  #> $evaluations #> function gradient  #>       11       26  #>  #> $message #> [1] \"relative convergence (4)\" data_mcgf <- add_base(data_mcgf,     fit_s = fit_spatial,     fit_t = fit_temporal,     sep = T )"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"separable-model","dir":"Articles","previous_headings":"Simulated Example > Fitting Covariance Models","what":"Separable Model","title":"Steps for fitting an `mcgf_rs` object","text":"can also calculate WLS estimates fitting separable model: store fully symmetric model base model print base model: old = TRUE add_base keeps fitted pure spatial temporal models records, used steps. recommended keep old model reproducibility, keep history fitted models.","code":"fit_sep <- fit_base(     data_mcgf,     model_ls = \"sep\",     lag_ls = lag,     par_init_ls = list(c(c = 0.000001, gamma = 0.5, a = 1, alpha = 0.5)),     par_fixed_ls = list(c(nugget = 0)),     control = list(list(iter.max = 10000, eval.max = 10000)),     rs = FALSE ) fit_sep[[1]]$fit #> $par #>          c      gamma          a      alpha  #> 0.00390725 0.50000000 0.72365072 0.39736171  #>  #> $objective #> [1] 29.16779 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 11 #>  #> $evaluations #> function gradient  #>       27       64  #>  #> $message #> [1] \"relative convergence (4)\" data_mcgf <- add_base(data_mcgf, fit_base = fit_sep, old = TRUE) model(data_mcgf, model = \"base\", old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Regime switching: FALSE #> - Base model: sep  #> - Parameters: #>          c      gamma     nugget          a      alpha  #> 0.00390725 0.50000000 0.00000000 0.71375884 0.34849745  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Regime switching: FALSE #> - Base model: sep  #> - Parameters: #>          c      gamma          a      alpha     nugget  #> 0.00390725 0.50000000 0.72365072 0.39736171 0.00000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"lagrangian-model","dir":"Articles","previous_headings":"Simulated Example > Fitting Covariance Models","what":"Lagrangian Model","title":"Steps for fitting an `mcgf_rs` object","text":"fit Lagrangian correlation functions model regime-dependent prevailing winds: Finally store model data_mcgf using add_lagr print final model:","code":"fit_lagr_rs <- fit_lagr(data_mcgf,     model_ls = list(\"lagr_tri\"),     par_init_ls = list(list(lambda = 0.1, v1 = 100, v2 = 100, k = 2)) ) lapply(fit_lagr_rs[1:2], function(x) x$fit) #> $`Regime 1` #> $`Regime 1`$par #>     lambda         v1         v2          k  #>  0.1703142 74.4859663 65.8446145  1.3401565  #>  #> $`Regime 1`$objective #> [1] 12.76542 #>  #> $`Regime 1`$convergence #> [1] 0 #>  #> $`Regime 1`$iterations #> [1] 31 #>  #> $`Regime 1`$evaluations #> function gradient  #>       38      147  #>  #> $`Regime 1`$message #> [1] \"relative convergence (4)\" #>  #>  #> $`Regime 2` #> $`Regime 2`$par #>     lambda         v1         v2          k  #>  0.2167212 43.9009790 78.2938279  1.7852123  #>  #> $`Regime 2`$objective #> [1] 15.68579 #>  #> $`Regime 2`$convergence #> [1] 0 #>  #> $`Regime 2`$iterations #> [1] 27 #>  #> $`Regime 2`$evaluations #> function gradient  #>       35      128  #>  #> $`Regime 2`$message #> [1] \"relative convergence (4)\" data_mcgf <- add_lagr(data_mcgf, fit_lagr = fit_lagr_rs) model(data_mcgf, old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5, 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Regime switching: FALSE #> - Base model: sep  #> - Parameters: #>          c      gamma     nugget          a      alpha  #> 0.00390725 0.50000000 0.00000000 0.71375884 0.34849745  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Regime switching: FALSE #> - Base model: sep  #> - Parameters: #>          c      gamma          a      alpha     nugget  #> 0.00390725 0.50000000 0.72365072 0.39736171 0.00000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> ---------------------------------------- #>               Lagrangian #> ---------------------------------------- #> - Regime switching: TRUE  #> -------------------- #>       Regime 1  #> -------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>     lambda         v1         v2          k  #>  0.1703142 74.4859663 65.8446145  1.3401565  #>  #> - Fixed parameters: #> NULL #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> -------------------- #>       Regime 2  #> -------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>     lambda         v1         v2          k  #>  0.2167212 43.9009790 78.2938279  1.7852123  #>  #> - Fixed parameters: #> NULL #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"simple-kriging-for-new-locations","dir":"Articles","previous_headings":"Simulated Example","what":"Simple Kriging for new locations","title":"Steps for fitting an `mcgf_rs` object","text":"provide functionalists computing simple Kriging forecasts new locations. associated function krige_new, users can either supply coordinates new locations distance matrices locations. Next, can compute root mean square error (RMSE), mean absolute error (MAE), realized percentage observations falling outside 95% PI (POPI) models new locations.","code":"krige_base_new <- krige_new(     x = data_mcgf,     locations_new = locations_new,     model = \"base\",     interval = TRUE ) krige_stat_new <- krige_new(     x = data_mcgf,     locations_new = locations_new,     model = \"all\",     interval = TRUE )"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"rmse","dir":"Articles","previous_headings":"Simulated Example > Simple Kriging for new locations","what":"RMSE","title":"Steps for fitting an `mcgf_rs` object","text":"","code":"# RMSE rmse_base <-     sqrt(colMeans((data_new - krige_base_new$fit[, -c(1:20)])^2, na.rm = T)) rmse_stat <-     sqrt(colMeans((data_new - krige_stat_new$fit[, -c(1:20)])^2, na.rm = T)) rmse <- c(     \"Base\" = mean(rmse_base),     \"STAT\" = mean(rmse_stat) ) rmse #>      Base      STAT  #> 0.8117693 0.7621844"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"mae","dir":"Articles","previous_headings":"Simulated Example > Simple Kriging for new locations","what":"MAE","title":"Steps for fitting an `mcgf_rs` object","text":"","code":"mae_base <- colMeans(abs(data_new - krige_base_new$fit[, -c(1:20)]), na.rm = T) mae_stat <- colMeans(abs(data_new - krige_stat_new$fit[, -c(1:20)]), na.rm = T) mae <- c(     \"Base\" = mean(mae_base),     \"STAT\" = mean(mae_stat) ) mae #>      Base      STAT  #> 0.6451738 0.6060982"},{"path":"https://tianxia-jia.github.io/mcgf/articles/mcgf_rs.html","id":"popi","dir":"Articles","previous_headings":"Simulated Example > Simple Kriging for new locations","what":"POPI","title":"Steps for fitting an `mcgf_rs` object","text":"","code":"# POPI popi_base <- colMeans(     data_new < krige_base_new$lower[, -c(1:20)] | data_new > krige_base_new$upper[, -c(1:20)],     na.rm = T ) popi_stat <- colMeans(     data_new < krige_stat_new$lower[, -c(1:20)] | data_new > krige_stat_new$upper[, -c(1:20)],     na.rm = T ) popi <- c(     \"Base\" = mean(popi_base),     \"STAT\" = mean(popi_stat) ) popi #>       Base       STAT  #> 0.04560561 0.03811812"},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tianxia Jia. Author, maintainer, copyright holder.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jia T (2024). mcgf: Markov Chain Gaussian Fields Simulation Parameter Estimation. R package version 1.1.0, https://tianxia-jia.github.io/mcgf/, https://github.com/tianxia-jia/mcgf.","code":"@Manual{,   title = {mcgf: Markov Chain Gaussian Fields Simulation and Parameter Estimation},   author = {Tianxia Jia},   year = {2024},   note = {R package version 1.1.0, https://tianxia-jia.github.io/mcgf/},   url = {https://github.com/tianxia-jia/mcgf}, }"},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"mcgf","dir":"","previous_headings":"","what":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"goal mcgf provide easy--use functions simulating fitting covariance models. provides functions simulating (regime-switching) Markov chain Gaussian fields covariance functions Gneiting class simple kriging. Parameter estimation methods weighted least squares maximum likelihood estimation available. example simulating estimation parameters MCGF.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"can install development version mcgf GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"tianxia-jia/mcgf\")"},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"data-simulation","dir":"","previous_headings":"","what":"Data Simulation","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"simulate MCGF fully symmetric covariance structure, begin simulating 10 locations randomly. Next, simulate MCGF general stationary covariance structure. example covariance structure convex combination base separable model Lagrangian model account asymmetry.","code":"library(mcgf) set.seed(123) h <- rdists(10) N <- 1000 lag <- 5  par_base <- list(     par_s = list(nugget = 0, c = 0.001, gamma = 0.5),     par_t = list(a = 0.5, alpha = 0.8) ) par_lagr <- list(v1 = 200, v2 = 200, k = 2)  sim1 <- mcgf_sim(     N = N,     base = \"sep\",     lagrangian = \"lagr_tri\",     par_base = par_base,     par_lagr = par_lagr,     lambda = 0.2,     dists = h,     lag = lag ) sim1 <- sim1[-c(1:(lag + 1)), ] rownames(sim1) <- 1:nrow(sim1)  sim1 <- list(data = sim1, dists = h)"},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"create-an-mcgf-object","dir":"","previous_headings":"Parameter Estimation","what":"Create an mcgf object","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"estimate parameters, need calculate auto-correlations cross-correlations. Let’s first create mcgf object. mcgf class extends data.frame attributes. acfs ccfs can added object follows.","code":"sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = lag) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = lag)"},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"estimate-base-model","dir":"","previous_headings":"Parameter Estimation","what":"Estimate base model","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"perform parameter estimation, can start estimating parameters spatial temporal models. Alternatively, can fit separable model : can also estimate parameters using MLE: Now add base model x_mcgf: print current model, ","code":"fit_spatial <- fit_base(     sim1_mcgf,     model = \"spatial\",     lag = lag,     par_init = c(c = 0.001, gamma = 0.5),     par_fixed = c(nugget = 0) ) fit_spatial$fit #> $par #>           c       gamma  #> 0.001160802 0.500000000  #>  #> $objective #> [1] 1.640593 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 8 #>  #> $evaluations #> function gradient  #>       21       20  #>  #> $message #> [1] \"both X-convergence and relative convergence (5)\" fit_temporal <- fit_base(     sim1_mcgf,     model = \"temporal\",     lag = lag,     par_init = c(a = 0.3, alpha = 0.5) ) fit_temporal$fit #> $par #>         a     alpha  #> 0.6528906 0.7560970  #>  #> $objective #> [1] 0.004306706 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 18 #>  #> $evaluations #> function gradient  #>       23       43  #>  #> $message #> [1] \"relative convergence (4)\" fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = lag,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.5,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) fit_sep$fit #> $par #>           c       gamma           a       alpha  #> 0.001154864 0.500000000 0.624551338 0.735490605  #>  #> $objective #> [1] 3.488305 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 18 #>  #> $evaluations #> function gradient  #>       49       88  #>  #> $message #> [1] \"relative convergence (4)\" fit_sep2 <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = lag,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.5,         alpha = 0.5     ),     par_fixed = c(nugget = 0),     method = \"mle\", ) fit_sep2$fit #> $par #>           c       gamma           a       alpha  #> 0.001197799 0.500000000 0.804621207 1.000000000  #>  #> $objective #> [1] -11520.04 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 17 #>  #> $evaluations #> function gradient  #>       55       78  #>  #> $message #> [1] \"relative convergence (4)\" sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep) model(sim1_mcgf) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma           a       alpha      nugget  #> 0.001154864 0.500000000 0.624551338 0.735490605 0.000000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> ---------------------------------------- #>               Lagrangian #> ---------------------------------------- #> - Lagrangian model:  #> - Parameters: #> NULL #>  #> - Fixed parameters: #> NULL #>  #> - Parameter estimation method:  #>  #> - Optimization function:"},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"estimate-the-lagrangian-model","dir":"","previous_headings":"Parameter Estimation","what":"Estimate the Lagrangian model","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"Similarly, can estimate parameters Lagrangian component can add Lagrangian model Finally may print final model:","code":"fit_lagr <- fit_lagr(     sim1_mcgf,     model = \"lagr_tri\",     par_init = c(v1 = 300, v2 = 300, lambda = 0.15),     par_fixed = c(k = 2) ) fit_lagr$fit #> $par #>      lambda          v1          v2  #>   0.1757035 232.0852117 203.8869305  #>  #> $objective #> [1] 1.627017 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 32 #>  #> $evaluations #> function gradient  #>       35      126  #>  #> $message #> [1] \"relative convergence (4)\" sim1_mcgf <- add_lagr(sim1_mcgf, fit_lagr = fit_lagr) model(sim1_mcgf) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma           a       alpha      nugget  #> 0.001154864 0.500000000 0.624551338 0.735490605 0.000000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> ---------------------------------------- #>               Lagrangian #> ---------------------------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>      lambda          v1          v2           k  #>   0.1757035 232.0852117 203.8869305   2.0000000  #>  #> - Fixed parameters: #> k  #> 2  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/index.html","id":"kriging-forecast","dir":"","previous_headings":"Parameter Estimation","what":"Kriging forecast","title":"Markov Chain Gaussian Fields Simulation and Parameter Estimation","text":"package provides kriging forecasts (intervals) empirical, base, general stationary models.","code":"# Empirical model fit_emp <-     krige(sim1_mcgf,         model = \"empirical\",         interval = TRUE     ) rmse_emp <- sqrt(mean(colMeans((sim1_mcgf - fit_emp$fit)^2, na.rm = T)))  # Base separable model fit_base <-     krige(sim1_mcgf,         model = \"base\",         interval = TRUE     ) rmse_base <-     sqrt(mean(colMeans((sim1_mcgf - fit_base$fit)^2, na.rm = T)))  # Stationary model fit_stat <-     krige(sim1_mcgf,         model = \"all\",         interval = TRUE     ) rmse_stat <-     sqrt(mean(colMeans((sim1_mcgf - fit_stat$fit)^2, na.rm = T)))  rmse <- c(rmse_emp, rmse_base, rmse_stat) names(rmse) <- c(\"Empirical\", \"Separable\", \"Stationary\") rmse #>  Empirical  Separable Stationary  #>  0.7212175  0.7685016  0.7355458"},{"path":"https://tianxia-jia.github.io/mcgf/reference/acf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate regime-switching auto-correlation — acf_rs","title":"Calculate regime-switching auto-correlation — acf_rs","text":"Calculate regime-switching auto-correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate regime-switching auto-correlation — acf_rs","text":"","code":"acf_rs(x, label, lag_max, demean = TRUE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/acf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate regime-switching auto-correlation — acf_rs","text":"x univariate numeric time series. label factor regime labels. lag_max Maximum lag calculate acf. demean Logical. covariances sample means?","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate regime-switching auto-correlation — acf_rs","text":"Mean auto-correlations group label.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate regime-switching auto-correlation — acf_rs","text":"","code":"set.seed(123) x <- rnorm(100) label <- sample(1:2, 100, replace = TRUE) acf_rs(x, label = factor(label), lag_max = 3) #> $`Regime 1` #>        lag0        lag1        lag2        lag3  #>  1.00000000 -0.06719448 -0.28622386  0.05784944  #>  #> $`Regime 2` #>       lag0       lag1       lag2       lag3  #> 1.00000000 0.02239601 0.08759688 0.25413972  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for calculating autocorrelation — acfs","title":"Generic function for calculating autocorrelation — acfs","text":"Generic function calculating autocorrelation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for calculating autocorrelation — acfs","text":"","code":"acfs(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for calculating autocorrelation — acfs","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for calculating autocorrelation — acfs","text":"vector mean auto-correlations mcgf objects, plus list regime-switching mean auto-correlations mcgf_rs objects.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for calculating autocorrelation — acfs","text":"Refer acfs.mcgf() acfs.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","title":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","text":"Extract, calculate, assign mean auto-correlations mcgf mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","text":"","code":"# S3 method for mcgf acfs(x, lag_max, replace = FALSE, ...)  # S3 method for mcgf_rs acfs(x, lag_max, replace = FALSE, ...)  acfs(x) <- value  add_acfs(x, lag_max, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","text":"x mcgf mcgf_rs object. lag_max Maximum lag calculate acf. replace Logical; TRUE, acfs recalculated. ... Additional parameters attributes. value Vector mean auto-correlations time lags starting 0.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","text":"acfs() returns (regime-switching) mean auto-correlations. add_acfs() returns object additional attributes (regime-switching) mean auto-correlations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","text":"mcgf objects, acfs() computes mean auto-correlations time lag across locations. output vector acfs. mcgf_rs objects, acfs() computes regime-switching mean auto-correlations time lag across locations. output list vectors acfs, vector list corresponds acfs regime. acfs<- assigns acfs x. add_acfs() adds acfs x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/acfs.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract, calculate, or assign mean auto-correlations for an mcgf or mcgf_rs object — acfs.mcgf","text":"","code":"# Calculate acfs for 'sim1' data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. acfs(sim1_mcgf, lag_max = 5) #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.6109553 0.3140734 0.2401463 0.1781788 0.1351682   # Add acfs to 'sim1_mcgf' sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) print(sim1_mcgf, \"acfs\") #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.6109553 0.3140734 0.2401463 0.1781788 0.1351682   # Calculate acfs for 'sim2' data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. acfs(sim2_mcgf, lag_max = 5) #> $acfs #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.7195535 0.5364966 0.4539327 0.3834479 0.3308474  #>  #> $acfs_rs #> $acfs_rs$`Regime 1` #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.6903615 0.6021888 0.5731002 0.4950374 0.4379770  #>  #> $acfs_rs$`Regime 2` #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.7558502 0.4491320 0.2978408 0.2379951 0.1911654  #>  #>   # Add acfs to 'sim2_mcgf' sim2_mcgf <- add_acfs(sim2_mcgf, lag_max = 5) print(sim2_mcgf, \"acfs\") #> $acfs #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.7195535 0.5364966 0.4539327 0.3834479 0.3308474  #>  #> $acfs_rs #> $acfs_rs$`Regime 1` #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.6903615 0.6021888 0.5731002 0.4950374 0.4379770  #>  #> $acfs_rs$`Regime 2` #>      lag0      lag1      lag2      lag3      lag4      lag5  #> 1.0000000 0.7558502 0.4491320 0.2978408 0.2379951 0.1911654  #>  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for adding a base model — add_base","title":"Generic function for adding a base model — add_base","text":"Generic function adding base model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for adding a base model — add_base","text":"","code":"add_base(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for adding a base model — add_base","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for adding a base model — add_base","text":"x newly added base model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for adding a base model — add_base","text":"Refer add_base.mcgf() add_base.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","title":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","text":"Add base model outputted fit_base() mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","text":"","code":"# S3 method for mcgf add_base(x, fit_base, fit_s, fit_t, sep = FALSE, old = FALSE, ...)  base(x) <- value"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","text":"x mcgf object. fit_base Output fit_base() function. fit_s Pure spatial model outputted fit_base() function. Used sep = TRUE. fit_t Pure temporal model outputted fit_base() function. Used sep = TRUE. sep Logical; TRUE spatial temporal models fitted separately. old Logical; TRUE old base model needs kept. ... Additional arguments. use. value list containing base model well parameters. must contains output add_base.mcgf() add_base.mcgf_rs().","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","text":"x newly added attributes base model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","text":"fitting base model fit_base(), results can added x add_base(). supply base model directly, use base<- add base model; value must contain model, par_base, cor_base, lag, horizon.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add base model outputted from fit_base() to an mcgf object. — add_base.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a pure spatial model fit_spatial <- fit_base(     sim1_mcgf,     model = \"spatial\",     lag = 5,     par_init = c(c = 0.001, gamma = 0.5),     par_fixed = c(nugget = 0) ) # Fit a pure temporal model fit_temporal <- fit_base(     sim1_mcgf,     model = \"temporal\",     lag = 5,     par_init = c(a = 0.3, alpha = 0.5) )  # Store the fitted models to 'sim1_mcgf' sim1_mcgf <-     add_base(sim1_mcgf,         fit_s = fit_spatial,         fit_t = fit_temporal,         sep = TRUE     )  # Fit a separable model fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) # Store the newly fitted model, and keep the old fit sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep, old = TRUE) model(sim1_mcgf, model = \"base\", old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Base-old model: sep  #> - Parameters: #>           c       gamma      nugget           a       alpha  #> 0.001145201 0.500000000 0.000000000 0.653410220 0.757253028  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma           a       alpha      nugget  #> 0.001139264 0.500000000 0.627518829 0.734384140 0.000000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","title":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","text":"Add base model outputted fit_base() mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","text":"","code":"# S3 method for mcgf_rs add_base(x, fit_base_ls, fit_s_ls, fit_t_ls, sep = FALSE, old = FALSE, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","text":"x mcgf_rs` object. fit_base_ls Output fit_base() function. fit_s_ls Pure spatial model outputted fit_base() function. Used sep = TRUE. fit_t_ls Pure temporal model outputted fit_base() function. Used sep = TRUE. sep Logical; TRUE spatial temporal models fitted separately. old Logical; TRUE old base model needs kept. lag horizon new model assumed old model. ... Additional arguments. use.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","text":"x newly added attributes base model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","text":"fitting base model fit_base(), results can added x add_base(). supply base model directly, use base<- add base model; value must contain output add_base.mcgf() add_base.mcgf_rs().","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_base.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add base model outputted from fit_base() to an mcgf_rs object. — add_base.mcgf_rs","text":"","code":"data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_mcgf <- add_acfs(sim2_mcgf, lag_max = 5) sim2_mcgf <- add_ccfs(sim2_mcgf, lag_max = 5)  # Fit a regime-switching pure spatial model fit_spatial <-     fit_base(         sim2_mcgf,         lag_ls = 5,         model_ls = \"spatial\",         par_init_ls = list(c(c = 0.00005, gamma = 0.5)),         par_fixed_ls = list(c(nugget = 0))     )  # Fit a regime-switching pure temporal model fit_temporal <-     fit_base(         sim2_mcgf,         lag_ls = 5,         model_ls = \"temporal\",         par_init_ls = list(             list(a = 0.8, alpha = 0.8),             list(a = 0.1, alpha = 0.1)         )     )  # Store the fitted models to 'sim2_mcgf' sim2_mcgf <- add_base(sim2_mcgf,     fit_s_ls = fit_spatial,     fit_t_ls = fit_temporal,     sep = TRUE )  # Fit a regime-switching separable model fit_sep <- fit_base(     sim2_mcgf,     lag_ls = 5,     model_ls = \"sep\",     par_init_ls = list(list(         c = 0.00005,         gamma = 0.5,         a = 0.5,         alpha = 0.5     )),     par_fixed_ls = list(c(nugget = 0)) )  # Store the newly fitted model, and keep the old fit sim2_mcgf <- add_base(sim2_mcgf, fit_base_ls = fit_sep, old = TRUE) model(sim2_mcgf, model = \"base\", old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5, 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Regime switching: spatial: TRUE, temporal: TRUE  #> -------------------- #>       Regime 1  #> -------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma      nugget           a       alpha  #> 0.001496696 0.500000000 0.000000000 0.437502762 0.302029968  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> -------------------- #>       Regime 2  #> -------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma      nugget           a       alpha  #> 0.004074408 0.500000000 0.000000000 0.330906238 0.874508851  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls wls  #>  #> - Optimization function: nlminb nlminb  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Regime switching: TRUE  #> -------------------- #>       Regime 1  #> -------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma           a       alpha      nugget  #> 0.001539941 0.500000000 0.452841528 0.345950120 0.000000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> -------------------- #>       Regime 2  #> -------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma           a       alpha      nugget  #> 0.004107168 0.500000000 0.328388489 0.853896077 0.000000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for adding a Lagrangian model — add_lagr","title":"Generic function for adding a Lagrangian model — add_lagr","text":"Generic function adding Lagrangian model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for adding a Lagrangian model — add_lagr","text":"","code":"add_lagr(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for adding a Lagrangian model — add_lagr","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for adding a Lagrangian model — add_lagr","text":"x newly added Lagrangian model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for adding a Lagrangian model — add_lagr","text":"Refer add_lagr.mcgf() add_lagr.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Add lagr model outputted from fit_lagr() to a mcgf object. — add_lagr.mcgf","title":"Add lagr model outputted from fit_lagr() to a mcgf object. — add_lagr.mcgf","text":"Add lagr model outputted fit_lagr() mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add lagr model outputted from fit_lagr() to a mcgf object. — add_lagr.mcgf","text":"","code":"# S3 method for mcgf add_lagr(x, fit_lagr, ...)  lagr(x) <- value"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add lagr model outputted from fit_lagr() to a mcgf object. — add_lagr.mcgf","text":"x mcgf object. fit_lagr Output fit_lagr() function. ... Additional arguments. use. value list containing lagr model well parameters. must contains model, par_lagr, cor_lagr.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add lagr model outputted from fit_lagr() to a mcgf object. — add_lagr.mcgf","text":"x newly added attributes Lagrangian model.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add lagr model outputted from fit_lagr() to a mcgf object. — add_lagr.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a separable model and store it to 'sim1_mcgf' fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep)  # Fit a Lagrangian model fit_lagr <- fit_lagr(     sim1_mcgf,     model = \"lagr_tri\",     par_init = c(v1 = 300, v2 = 300, lambda = 0.15),     par_fixed = c(k = 2) )  # Store the fitted Lagrangian model to 'sim1_mcgf' sim1_mcgf <- add_lagr(sim1_mcgf, fit_lagr = fit_lagr) model(sim1_mcgf, old = TRUE) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>             Old - not in use #> ---------------------------------------- #> - Base-old model:  #> - Parameters: #> NULL #>  #> - Fixed parameters: #> NULL #>  #> - Parameter estimation method:  #>  #> - Optimization function:  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Base model: sep  #> - Parameters: #>           c       gamma           a       alpha      nugget  #> 0.001139264 0.500000000 0.627518829 0.734384140 0.000000000  #>  #> - Fixed parameters: #> nugget  #>      0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> ---------------------------------------- #>               Lagrangian #> ---------------------------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>      lambda          v1          v2           k  #>   0.1625903 224.5776224 188.5158088   2.0000000  #>  #> - Fixed parameters: #> k  #> 2  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","title":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","text":"Add lagr model outputted fit_lagr() mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","text":"","code":"# S3 method for mcgf_rs add_lagr(x, fit_lagr_ls, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","text":"x mcgf_rs object. fit_lagr_ls Output fit_lagr() function. ... Additional arguments. use.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","text":"x newly added attributes Lagrangian model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","text":"fitting Lagrangian model fit_lagr(), results can added x add_base(). supply Lagrangian model directly, use lagr<- add Lagrangian model; value must contain output add_lagr.mcgf() add_lagr.mcgf_rs().","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_lagr.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add lagr model outputted from fit_lagr() to a mcgf_rs object. — add_lagr.mcgf_rs","text":"","code":"data(sim3) sim3_mcgf <- mcgf_rs(sim3$data, dists = sim3$dists, label = sim3$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim3_mcgf <- add_acfs(sim3_mcgf, lag_max = 5) sim3_mcgf <- add_ccfs(sim3_mcgf, lag_max = 5)  # Fit a fully symmetric model with known variables fit_fs <- fit_base(     sim3_mcgf,     lag_ls = 5,     model_ls = \"fs\",     rs = FALSE,     par_init_ls = list(list(beta = 0)),     par_fixed_ls = list(list(         nugget = 0,         c = 0.05,         gamma = 0.5,         a = 0.5,         alpha = 0.2     )) )  # Set beta to 0 to fit a separable model with known variables fit_fs[[1]]$fit$par <- 0  # Store the fitted separable model to 'sim3_mcgf' sim3_mcgf <- add_base(sim3_mcgf, fit_base_ls = fit_fs)  # Fit a regime-switching Lagrangian model. fit_lagr_rs <- fit_lagr(     sim3_mcgf,     model_ls = list(\"lagr_tri\"),     par_init_ls = list(         list(v1 = -50, v2 = 50),         list(v1 = 100, v2 = 100)     ),     par_fixed_ls = list(list(lambda = 0.2, k = 2)) )  # Store the fitted Lagrangian model to 'sim3_mcgf' sim3_mcgf <- add_lagr(sim3_mcgf, fit_lagr_ls = fit_lagr_rs) model(sim3_mcgf) #> ---------------------------------------- #>                  Model #> ---------------------------------------- #> - Time lag: 5, 5  #> - Scale of time lag: 1  #> - Forecast horizon: 1  #> ---------------------------------------- #>                  Base #> ---------------------------------------- #> - Regime switching: FALSE #> - Base model: fs  #> - Parameters: #>   beta nugget      c  gamma      a  alpha  #>   0.00   0.00   0.05   0.50   0.50   0.20  #>  #> - Fixed parameters: #> nugget      c  gamma      a  alpha  #>   0.00   0.05   0.50   0.50   0.20  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> ---------------------------------------- #>               Lagrangian #> ---------------------------------------- #> - Regime switching: TRUE  #> -------------------- #>       Regime 1  #> -------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>        v1        v2    lambda         k  #> -106.5181  119.4434    0.2000    2.0000  #>  #> - Fixed parameters: #> lambda      k  #>    0.2    2.0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb  #> -------------------- #>       Regime 2  #> -------------------- #> - Lagrangian model: lagr_tri  #> - Parameters: #>       v1       v2   lambda        k  #> 210.1156 242.3082   0.2000   2.0000  #>  #> - Fixed parameters: #> lambda      k  #>    0.2    2.0  #>  #> - Parameter estimation method: wls  #>  #> - Optimization function: nlminb"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_nugget.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust for nugget effect for correlations — add_nugget","title":"Adjust for nugget effect for correlations — add_nugget","text":"Adjust nugget effect correlations","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_nugget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust for nugget effect for correlations — add_nugget","text":"","code":"add_nugget(x, nugget)  set_nugget(x, nugget, set_to)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_nugget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust for nugget effect for correlations — add_nugget","text":"x correlation matrix 3-d array. nugget scalar nugget effect. set_to correlation matrix 3-d array dimension x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_nugget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust for nugget effect for correlations — add_nugget","text":"Correlations dimension x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/add_nugget.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust for nugget effect for correlations — add_nugget","text":"adjust spatial nugget effect, enery entry x first multipled \\((1-\\text{nugget})\\); add_nugget adds nugget diagonals (diagonals matrix slice) x, set_nugget set diagonals (diagonals matrix slice) corresponding diagonals set_to.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate regime-switching cross-correlation — ccf_rs","title":"Calculate regime-switching cross-correlation — ccf_rs","text":"Calculate regime-switching cross-correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate regime-switching cross-correlation — ccf_rs","text":"","code":"ccf_rs(x, y, label, lag_max)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate regime-switching cross-correlation — ccf_rs","text":"x, y univariate numeric time series. label factor regime labels. lag_max Maximum lag calculate ccf.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate regime-switching cross-correlation — ccf_rs","text":"Cross-correlations group label.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate regime-switching cross-correlation — ccf_rs","text":"","code":"set.seed(123) x <- rnorm(100) y <- rnorm(100) label <- sample(1:2, 100, replace = TRUE) ccf_rs(x, y, label = factor(label), lag_max = 3) #> $`Regime 1` #>          -3          -2          -1           0           1           2  #>  0.07046131 -0.18742586 -0.07060330  0.01541658 -0.13212906  0.11329054  #>           3  #> -0.03214489  #>  #> $`Regime 2` #>         -3         -2         -1          0          1          2          3  #> -0.0191234 -0.3514831  0.1303284 -0.1254412  0.1901238  0.1122576  0.1892601  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for calculating cross-correlation — ccfs","title":"Generic function for calculating cross-correlation — ccfs","text":"Generic function calculating cross-correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for calculating cross-correlation — ccfs","text":"","code":"ccfs(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for calculating cross-correlation — ccfs","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for calculating cross-correlation — ccfs","text":"array cross-correlations mcgf objects, plus list regime-switching cross-correlations mcgf_rs objects.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for calculating cross-correlation — ccfs","text":"Refer ccfs.mcgf() ccfs.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","title":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","text":"Extract, calculate, assign cross-correlations mcgf mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","text":"","code":"# S3 method for mcgf ccfs(x, lag_max, ncores = 1, replace = FALSE, ...)  # S3 method for mcgf_rs ccfs(x, lag_max, ncores = 1, replace = FALSE, ...)  ccfs(x) <- value  add_ccfs(x, lag_max, ncores = 1, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","text":"x mcgf mcgf_rs object. lag_max Maximum lag calculate ccfs. ncores Number cpu cores used computing. doParallel package required ncores > 1. replace Logical; TRUE, acfs recalculated. ... Additional parameters attributes. use. value Cross-correlations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","text":"ccfs() returns (regime-switching) cross-correlations. add_ccfs() returns object additional attributes (regime-switching) cross-correlations (regime-switching) empirical standard deviations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","text":"mcgf objects, ccfs() computes cross-correlations time lag. output array matrices matrix corresponds cross-correlation time lag. mcgf_rs objects, ccfs() computes regime-switching cross-correlations time lag. output list array matrices array list corresponds cross-correlation regime. ccfs<- assigns ccfs x. add_ccfs() adds ccfs sds x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccfs.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract, calculate, or assign cross-correlations for an mcgf or mcgf_rs object — ccfs.mcgf","text":"","code":"# Calculate ccfs for 'sim1' data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. ccfs(sim1_mcgf, lag_max = 5) #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.9119894 0.8516676 0.8889031 0.8366193 0.8104980 0.9139948 #> 2  0.9119894 1.0000000 0.8614962 0.9671744 0.8994600 0.7611732 0.9403193 #> 3  0.8516676 0.8614962 1.0000000 0.8723562 0.8362364 0.8455428 0.9124414 #> 4  0.8889031 0.9671744 0.8723562 1.0000000 0.9138877 0.7593686 0.9391204 #> 5  0.8366193 0.8994600 0.8362364 0.9138877 1.0000000 0.7079325 0.8713699 #> 6  0.8104980 0.7611732 0.8455428 0.7593686 0.7079325 1.0000000 0.8072334 #> 7  0.9139948 0.9403193 0.9124414 0.9391204 0.8713699 0.8072334 1.0000000 #> 8  0.6570882 0.7126275 0.6425875 0.7204746 0.7929963 0.5338748 0.6680783 #> 9  0.9374203 0.9611618 0.8345741 0.9310043 0.8697790 0.7630174 0.9154226 #> 10 0.8343459 0.8967622 0.8045941 0.9075372 0.9555986 0.6866872 0.8533522 #>            8         9        10 #> 1  0.6570882 0.9374203 0.8343459 #> 2  0.7126275 0.9611618 0.8967622 #> 3  0.6425875 0.8345741 0.8045941 #> 4  0.7204746 0.9310043 0.9075372 #> 5  0.7929963 0.8697790 0.9555986 #> 6  0.5338748 0.7630174 0.6866872 #> 7  0.6680783 0.9154226 0.8533522 #> 8  1.0000000 0.6991859 0.8094246 #> 9  0.6991859 1.0000000 0.8718171 #> 10 0.8094246 0.8718171 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.6244786 0.5923594 0.5153791 0.5707064 0.5705291 0.4726243 0.5605905 #> 2  0.5563001 0.6126680 0.5072317 0.5845922 0.5820892 0.4280378 0.5624420 #> 3  0.5425670 0.5720071 0.6130226 0.5734800 0.5880110 0.4867323 0.5752643 #> 4  0.5394339 0.5872180 0.5090115 0.6014724 0.5822513 0.4224464 0.5579271 #> 5  0.4872939 0.5268187 0.4700305 0.5293853 0.6030877 0.3742446 0.4950969 #> 6  0.5951784 0.5942810 0.5983703 0.5937085 0.6003006 0.6128277 0.5974733 #> 7  0.5485037 0.5871899 0.5345629 0.5794771 0.5719957 0.4497669 0.5953730 #> 8  0.3616897 0.3970341 0.3501651 0.3974545 0.4602807 0.3060945 0.3566146 #> 9  0.5805213 0.5968693 0.4907213 0.5668925 0.5664062 0.4355073 0.5528567 #> 10 0.4863898 0.5270702 0.4499124 0.5285234 0.5733734 0.3614377 0.4864069 #>            8         9        10 #> 1  0.5555396 0.6075767 0.5841658 #> 2  0.5685920 0.5884596 0.5982250 #> 3  0.5350100 0.5562750 0.5804975 #> 4  0.5702001 0.5659734 0.5999871 #> 5  0.5793713 0.5101424 0.5909629 #> 6  0.4647765 0.5904865 0.5929656 #> 7  0.5505583 0.5695984 0.5742237 #> 8  0.6135666 0.3909152 0.4745988 #> 9  0.5633796 0.6224003 0.5866731 #> 10 0.5763803 0.5147156 0.6106560 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.3357071 0.3234174 0.2716193 0.3021680 0.3118403 0.2659256 0.2846061 #> 2  0.3005422 0.3262738 0.2740219 0.3030336 0.3127002 0.2443083 0.2939651 #> 3  0.2754117 0.2980617 0.3127317 0.2936975 0.3131786 0.2642316 0.2867734 #> 4  0.2889370 0.3084949 0.2728529 0.3091274 0.3061521 0.2414113 0.2885047 #> 5  0.2581560 0.2789929 0.2540976 0.2701926 0.3093073 0.2168283 0.2581122 #> 6  0.3128606 0.3166317 0.3203699 0.3224035 0.3407704 0.3038308 0.3080463 #> 7  0.2750696 0.3046789 0.2717456 0.2929092 0.2954141 0.2460866 0.2902289 #> 8  0.2308323 0.2445034 0.2066404 0.2324834 0.2553468 0.1779318 0.2162108 #> 9  0.3107912 0.3177798 0.2556997 0.2915575 0.3005476 0.2445198 0.2852925 #> 10 0.2654473 0.2923668 0.2491248 0.2828370 0.3033383 0.2134043 0.2619493 #>            8         9        10 #> 1  0.3282560 0.3360400 0.3230984 #> 2  0.3254760 0.3133406 0.3207254 #> 3  0.3251333 0.2941890 0.3072063 #> 4  0.3225978 0.2958495 0.3177188 #> 5  0.3119893 0.2707086 0.2988570 #> 6  0.3446120 0.3181695 0.3394202 #> 7  0.3084543 0.2962870 0.2962738 #> 8  0.3041539 0.2438674 0.2611658 #> 9  0.3231347 0.3328246 0.3118223 #> 10 0.3151842 0.2859649 0.3165484 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.2705373 0.2472519 0.2048175 0.2292927 0.2221858 0.2085187 0.2199020 #> 2  0.2352763 0.2512992 0.1965189 0.2329023 0.2261807 0.1751090 0.2134819 #> 3  0.2139154 0.2135087 0.2284204 0.2073628 0.2078374 0.1959184 0.2109865 #> 4  0.2358674 0.2495069 0.2002089 0.2458784 0.2289391 0.1771477 0.2190266 #> 5  0.2196215 0.2283851 0.1887170 0.2146467 0.2376718 0.1646441 0.2049835 #> 6  0.2119694 0.2047827 0.2222961 0.2116307 0.2128970 0.2232134 0.2024893 #> 7  0.2307133 0.2401095 0.2060656 0.2273485 0.2136534 0.1911487 0.2271281 #> 8  0.1866383 0.1838541 0.1419841 0.1650183 0.1776025 0.1310916 0.1531107 #> 9  0.2352525 0.2404133 0.1732540 0.2188813 0.2123766 0.1691703 0.2022504 #> 10 0.2209058 0.2342571 0.1821513 0.2210391 0.2343026 0.1640852 0.2032094 #>            8         9        10 #> 1  0.1883218 0.2651717 0.2226866 #> 2  0.1965556 0.2517922 0.2259428 #> 3  0.1714589 0.2183919 0.1941863 #> 4  0.1924450 0.2486084 0.2309739 #> 5  0.1900009 0.2299189 0.2283098 #> 6  0.2094294 0.2068380 0.2046774 #> 7  0.1710902 0.2432924 0.2080041 #> 8  0.2112978 0.1891867 0.1921009 #> 9  0.1875745 0.2579458 0.2140074 #> 10 0.2119527 0.2339335 0.2480713 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.1998080 0.1826682 0.1542073 0.1714864 0.1819334 0.1577266 0.1564476 #> 2  0.1741855 0.1806190 0.1594896 0.1694174 0.1798726 0.1428264 0.1536805 #> 3  0.1656243 0.1564549 0.1779156 0.1533431 0.1665520 0.1360699 0.1597331 #> 4  0.1745575 0.1805520 0.1576524 0.1770104 0.1783549 0.1424501 0.1574213 #> 5  0.1682793 0.1689211 0.1529833 0.1596198 0.1850970 0.1315141 0.1502743 #> 6  0.1724645 0.1659652 0.1699111 0.1682453 0.1733534 0.1556046 0.1621661 #> 7  0.1790727 0.1833247 0.1646328 0.1735297 0.1776572 0.1492737 0.1702062 #> 8  0.1518411 0.1406077 0.1216492 0.1253971 0.1494803 0.1069955 0.1137505 #> 9  0.1699482 0.1705992 0.1337011 0.1563645 0.1661033 0.1319018 0.1405304 #> 10 0.1757650 0.1818012 0.1540309 0.1731367 0.1892580 0.1411876 0.1570329 #>            8         9        10 #> 1  0.1558584 0.2045476 0.1817127 #> 2  0.1725004 0.1906188 0.1834976 #> 3  0.1204046 0.1665062 0.1595085 #> 4  0.1640928 0.1869042 0.1847849 #> 5  0.1543519 0.1786620 0.1767847 #> 6  0.1277976 0.1703947 0.1719003 #> 7  0.1518326 0.1933757 0.1789993 #> 8  0.1487599 0.1448622 0.1499759 #> 9  0.1612188 0.1909420 0.1716266 #> 10 0.1765624 0.1863334 0.1958255 #>  #> , , lag5 #>  #>            1         2         3         4         5          6         7 #> 1  0.1447171 0.1283688 0.1181135 0.1192660 0.1364172 0.10536601 0.1062677 #> 2  0.1505152 0.1463563 0.1437825 0.1364713 0.1491229 0.10980863 0.1325147 #> 3  0.1314035 0.1163236 0.1410714 0.1109137 0.1223314 0.09327222 0.1183379 #> 4  0.1496490 0.1484866 0.1413294 0.1445377 0.1474357 0.10915871 0.1344266 #> 5  0.1371050 0.1378678 0.1319841 0.1315407 0.1487660 0.09998854 0.1215917 #> 6  0.1213513 0.1099970 0.1197204 0.1051906 0.1073587 0.10841660 0.1057324 #> 7  0.1405513 0.1406326 0.1331130 0.1313781 0.1372703 0.10118014 0.1302224 #> 8  0.1336964 0.1191149 0.1111425 0.1115823 0.1215430 0.09927111 0.1000708 #> 9  0.1387497 0.1316476 0.1155380 0.1204760 0.1305273 0.09787492 0.1142562 #> 10 0.1467478 0.1523971 0.1372870 0.1461753 0.1584440 0.11036998 0.1317372 #>             8         9        10 #> 1  0.11055889 0.1491182 0.1289745 #> 2  0.12438584 0.1583370 0.1416576 #> 3  0.07985942 0.1275100 0.1157323 #> 4  0.11539669 0.1538296 0.1431692 #> 5  0.10437950 0.1490785 0.1316927 #> 6  0.08798908 0.1197156 0.1122777 #> 7  0.10382289 0.1494953 0.1314345 #> 8  0.08561990 0.1280442 0.1081720 #> 9  0.11218081 0.1507388 0.1237926 #> 10 0.12686828 0.1590028 0.1512357 #>   # To use multiple cores, use the `ncores` argument ccfs(sim1_mcgf, lag_max = 5, ncores = 2) #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.9119894 0.8516676 0.8889031 0.8366193 0.8104980 0.9139948 #> 2  0.9119894 1.0000000 0.8614962 0.9671744 0.8994600 0.7611732 0.9403193 #> 3  0.8516676 0.8614962 1.0000000 0.8723562 0.8362364 0.8455428 0.9124414 #> 4  0.8889031 0.9671744 0.8723562 1.0000000 0.9138877 0.7593686 0.9391204 #> 5  0.8366193 0.8994600 0.8362364 0.9138877 1.0000000 0.7079325 0.8713699 #> 6  0.8104980 0.7611732 0.8455428 0.7593686 0.7079325 1.0000000 0.8072334 #> 7  0.9139948 0.9403193 0.9124414 0.9391204 0.8713699 0.8072334 1.0000000 #> 8  0.6570882 0.7126275 0.6425875 0.7204746 0.7929963 0.5338748 0.6680783 #> 9  0.9374203 0.9611618 0.8345741 0.9310043 0.8697790 0.7630174 0.9154226 #> 10 0.8343459 0.8967622 0.8045941 0.9075372 0.9555986 0.6866872 0.8533522 #>            8         9        10 #> 1  0.6570882 0.9374203 0.8343459 #> 2  0.7126275 0.9611618 0.8967622 #> 3  0.6425875 0.8345741 0.8045941 #> 4  0.7204746 0.9310043 0.9075372 #> 5  0.7929963 0.8697790 0.9555986 #> 6  0.5338748 0.7630174 0.6866872 #> 7  0.6680783 0.9154226 0.8533522 #> 8  1.0000000 0.6991859 0.8094246 #> 9  0.6991859 1.0000000 0.8718171 #> 10 0.8094246 0.8718171 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.6244786 0.5923594 0.5153791 0.5707064 0.5705291 0.4726243 0.5605905 #> 2  0.5563001 0.6126680 0.5072317 0.5845922 0.5820892 0.4280378 0.5624420 #> 3  0.5425670 0.5720071 0.6130226 0.5734800 0.5880110 0.4867323 0.5752643 #> 4  0.5394339 0.5872180 0.5090115 0.6014724 0.5822513 0.4224464 0.5579271 #> 5  0.4872939 0.5268187 0.4700305 0.5293853 0.6030877 0.3742446 0.4950969 #> 6  0.5951784 0.5942810 0.5983703 0.5937085 0.6003006 0.6128277 0.5974733 #> 7  0.5485037 0.5871899 0.5345629 0.5794771 0.5719957 0.4497669 0.5953730 #> 8  0.3616897 0.3970341 0.3501651 0.3974545 0.4602807 0.3060945 0.3566146 #> 9  0.5805213 0.5968693 0.4907213 0.5668925 0.5664062 0.4355073 0.5528567 #> 10 0.4863898 0.5270702 0.4499124 0.5285234 0.5733734 0.3614377 0.4864069 #>            8         9        10 #> 1  0.5555396 0.6075767 0.5841658 #> 2  0.5685920 0.5884596 0.5982250 #> 3  0.5350100 0.5562750 0.5804975 #> 4  0.5702001 0.5659734 0.5999871 #> 5  0.5793713 0.5101424 0.5909629 #> 6  0.4647765 0.5904865 0.5929656 #> 7  0.5505583 0.5695984 0.5742237 #> 8  0.6135666 0.3909152 0.4745988 #> 9  0.5633796 0.6224003 0.5866731 #> 10 0.5763803 0.5147156 0.6106560 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.3357071 0.3234174 0.2716193 0.3021680 0.3118403 0.2659256 0.2846061 #> 2  0.3005422 0.3262738 0.2740219 0.3030336 0.3127002 0.2443083 0.2939651 #> 3  0.2754117 0.2980617 0.3127317 0.2936975 0.3131786 0.2642316 0.2867734 #> 4  0.2889370 0.3084949 0.2728529 0.3091274 0.3061521 0.2414113 0.2885047 #> 5  0.2581560 0.2789929 0.2540976 0.2701926 0.3093073 0.2168283 0.2581122 #> 6  0.3128606 0.3166317 0.3203699 0.3224035 0.3407704 0.3038308 0.3080463 #> 7  0.2750696 0.3046789 0.2717456 0.2929092 0.2954141 0.2460866 0.2902289 #> 8  0.2308323 0.2445034 0.2066404 0.2324834 0.2553468 0.1779318 0.2162108 #> 9  0.3107912 0.3177798 0.2556997 0.2915575 0.3005476 0.2445198 0.2852925 #> 10 0.2654473 0.2923668 0.2491248 0.2828370 0.3033383 0.2134043 0.2619493 #>            8         9        10 #> 1  0.3282560 0.3360400 0.3230984 #> 2  0.3254760 0.3133406 0.3207254 #> 3  0.3251333 0.2941890 0.3072063 #> 4  0.3225978 0.2958495 0.3177188 #> 5  0.3119893 0.2707086 0.2988570 #> 6  0.3446120 0.3181695 0.3394202 #> 7  0.3084543 0.2962870 0.2962738 #> 8  0.3041539 0.2438674 0.2611658 #> 9  0.3231347 0.3328246 0.3118223 #> 10 0.3151842 0.2859649 0.3165484 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.2705373 0.2472519 0.2048175 0.2292927 0.2221858 0.2085187 0.2199020 #> 2  0.2352763 0.2512992 0.1965189 0.2329023 0.2261807 0.1751090 0.2134819 #> 3  0.2139154 0.2135087 0.2284204 0.2073628 0.2078374 0.1959184 0.2109865 #> 4  0.2358674 0.2495069 0.2002089 0.2458784 0.2289391 0.1771477 0.2190266 #> 5  0.2196215 0.2283851 0.1887170 0.2146467 0.2376718 0.1646441 0.2049835 #> 6  0.2119694 0.2047827 0.2222961 0.2116307 0.2128970 0.2232134 0.2024893 #> 7  0.2307133 0.2401095 0.2060656 0.2273485 0.2136534 0.1911487 0.2271281 #> 8  0.1866383 0.1838541 0.1419841 0.1650183 0.1776025 0.1310916 0.1531107 #> 9  0.2352525 0.2404133 0.1732540 0.2188813 0.2123766 0.1691703 0.2022504 #> 10 0.2209058 0.2342571 0.1821513 0.2210391 0.2343026 0.1640852 0.2032094 #>            8         9        10 #> 1  0.1883218 0.2651717 0.2226866 #> 2  0.1965556 0.2517922 0.2259428 #> 3  0.1714589 0.2183919 0.1941863 #> 4  0.1924450 0.2486084 0.2309739 #> 5  0.1900009 0.2299189 0.2283098 #> 6  0.2094294 0.2068380 0.2046774 #> 7  0.1710902 0.2432924 0.2080041 #> 8  0.2112978 0.1891867 0.1921009 #> 9  0.1875745 0.2579458 0.2140074 #> 10 0.2119527 0.2339335 0.2480713 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.1998080 0.1826682 0.1542073 0.1714864 0.1819334 0.1577266 0.1564476 #> 2  0.1741855 0.1806190 0.1594896 0.1694174 0.1798726 0.1428264 0.1536805 #> 3  0.1656243 0.1564549 0.1779156 0.1533431 0.1665520 0.1360699 0.1597331 #> 4  0.1745575 0.1805520 0.1576524 0.1770104 0.1783549 0.1424501 0.1574213 #> 5  0.1682793 0.1689211 0.1529833 0.1596198 0.1850970 0.1315141 0.1502743 #> 6  0.1724645 0.1659652 0.1699111 0.1682453 0.1733534 0.1556046 0.1621661 #> 7  0.1790727 0.1833247 0.1646328 0.1735297 0.1776572 0.1492737 0.1702062 #> 8  0.1518411 0.1406077 0.1216492 0.1253971 0.1494803 0.1069955 0.1137505 #> 9  0.1699482 0.1705992 0.1337011 0.1563645 0.1661033 0.1319018 0.1405304 #> 10 0.1757650 0.1818012 0.1540309 0.1731367 0.1892580 0.1411876 0.1570329 #>            8         9        10 #> 1  0.1558584 0.2045476 0.1817127 #> 2  0.1725004 0.1906188 0.1834976 #> 3  0.1204046 0.1665062 0.1595085 #> 4  0.1640928 0.1869042 0.1847849 #> 5  0.1543519 0.1786620 0.1767847 #> 6  0.1277976 0.1703947 0.1719003 #> 7  0.1518326 0.1933757 0.1789993 #> 8  0.1487599 0.1448622 0.1499759 #> 9  0.1612188 0.1909420 0.1716266 #> 10 0.1765624 0.1863334 0.1958255 #>  #> , , lag5 #>  #>            1         2         3         4         5          6         7 #> 1  0.1447171 0.1283688 0.1181135 0.1192660 0.1364172 0.10536601 0.1062677 #> 2  0.1505152 0.1463563 0.1437825 0.1364713 0.1491229 0.10980863 0.1325147 #> 3  0.1314035 0.1163236 0.1410714 0.1109137 0.1223314 0.09327222 0.1183379 #> 4  0.1496490 0.1484866 0.1413294 0.1445377 0.1474357 0.10915871 0.1344266 #> 5  0.1371050 0.1378678 0.1319841 0.1315407 0.1487660 0.09998854 0.1215917 #> 6  0.1213513 0.1099970 0.1197204 0.1051906 0.1073587 0.10841660 0.1057324 #> 7  0.1405513 0.1406326 0.1331130 0.1313781 0.1372703 0.10118014 0.1302224 #> 8  0.1336964 0.1191149 0.1111425 0.1115823 0.1215430 0.09927111 0.1000708 #> 9  0.1387497 0.1316476 0.1155380 0.1204760 0.1305273 0.09787492 0.1142562 #> 10 0.1467478 0.1523971 0.1372870 0.1461753 0.1584440 0.11036998 0.1317372 #>             8         9        10 #> 1  0.11055889 0.1491182 0.1289745 #> 2  0.12438584 0.1583370 0.1416576 #> 3  0.07985942 0.1275100 0.1157323 #> 4  0.11539669 0.1538296 0.1431692 #> 5  0.10437950 0.1490785 0.1316927 #> 6  0.08798908 0.1197156 0.1122777 #> 7  0.10382289 0.1494953 0.1314345 #> 8  0.08561990 0.1280442 0.1081720 #> 9  0.11218081 0.1507388 0.1237926 #> 10 0.12686828 0.1590028 0.1512357 #>   # Add ccfs and sds to 'sim1_mcgf' sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5) print(sim1_mcgf, \"ccfs\") #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.9119894 0.8516676 0.8889031 0.8366193 0.8104980 0.9139948 #> 2  0.9119894 1.0000000 0.8614962 0.9671744 0.8994600 0.7611732 0.9403193 #> 3  0.8516676 0.8614962 1.0000000 0.8723562 0.8362364 0.8455428 0.9124414 #> 4  0.8889031 0.9671744 0.8723562 1.0000000 0.9138877 0.7593686 0.9391204 #> 5  0.8366193 0.8994600 0.8362364 0.9138877 1.0000000 0.7079325 0.8713699 #> 6  0.8104980 0.7611732 0.8455428 0.7593686 0.7079325 1.0000000 0.8072334 #> 7  0.9139948 0.9403193 0.9124414 0.9391204 0.8713699 0.8072334 1.0000000 #> 8  0.6570882 0.7126275 0.6425875 0.7204746 0.7929963 0.5338748 0.6680783 #> 9  0.9374203 0.9611618 0.8345741 0.9310043 0.8697790 0.7630174 0.9154226 #> 10 0.8343459 0.8967622 0.8045941 0.9075372 0.9555986 0.6866872 0.8533522 #>            8         9        10 #> 1  0.6570882 0.9374203 0.8343459 #> 2  0.7126275 0.9611618 0.8967622 #> 3  0.6425875 0.8345741 0.8045941 #> 4  0.7204746 0.9310043 0.9075372 #> 5  0.7929963 0.8697790 0.9555986 #> 6  0.5338748 0.7630174 0.6866872 #> 7  0.6680783 0.9154226 0.8533522 #> 8  1.0000000 0.6991859 0.8094246 #> 9  0.6991859 1.0000000 0.8718171 #> 10 0.8094246 0.8718171 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.6244786 0.5923594 0.5153791 0.5707064 0.5705291 0.4726243 0.5605905 #> 2  0.5563001 0.6126680 0.5072317 0.5845922 0.5820892 0.4280378 0.5624420 #> 3  0.5425670 0.5720071 0.6130226 0.5734800 0.5880110 0.4867323 0.5752643 #> 4  0.5394339 0.5872180 0.5090115 0.6014724 0.5822513 0.4224464 0.5579271 #> 5  0.4872939 0.5268187 0.4700305 0.5293853 0.6030877 0.3742446 0.4950969 #> 6  0.5951784 0.5942810 0.5983703 0.5937085 0.6003006 0.6128277 0.5974733 #> 7  0.5485037 0.5871899 0.5345629 0.5794771 0.5719957 0.4497669 0.5953730 #> 8  0.3616897 0.3970341 0.3501651 0.3974545 0.4602807 0.3060945 0.3566146 #> 9  0.5805213 0.5968693 0.4907213 0.5668925 0.5664062 0.4355073 0.5528567 #> 10 0.4863898 0.5270702 0.4499124 0.5285234 0.5733734 0.3614377 0.4864069 #>            8         9        10 #> 1  0.5555396 0.6075767 0.5841658 #> 2  0.5685920 0.5884596 0.5982250 #> 3  0.5350100 0.5562750 0.5804975 #> 4  0.5702001 0.5659734 0.5999871 #> 5  0.5793713 0.5101424 0.5909629 #> 6  0.4647765 0.5904865 0.5929656 #> 7  0.5505583 0.5695984 0.5742237 #> 8  0.6135666 0.3909152 0.4745988 #> 9  0.5633796 0.6224003 0.5866731 #> 10 0.5763803 0.5147156 0.6106560 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.3357071 0.3234174 0.2716193 0.3021680 0.3118403 0.2659256 0.2846061 #> 2  0.3005422 0.3262738 0.2740219 0.3030336 0.3127002 0.2443083 0.2939651 #> 3  0.2754117 0.2980617 0.3127317 0.2936975 0.3131786 0.2642316 0.2867734 #> 4  0.2889370 0.3084949 0.2728529 0.3091274 0.3061521 0.2414113 0.2885047 #> 5  0.2581560 0.2789929 0.2540976 0.2701926 0.3093073 0.2168283 0.2581122 #> 6  0.3128606 0.3166317 0.3203699 0.3224035 0.3407704 0.3038308 0.3080463 #> 7  0.2750696 0.3046789 0.2717456 0.2929092 0.2954141 0.2460866 0.2902289 #> 8  0.2308323 0.2445034 0.2066404 0.2324834 0.2553468 0.1779318 0.2162108 #> 9  0.3107912 0.3177798 0.2556997 0.2915575 0.3005476 0.2445198 0.2852925 #> 10 0.2654473 0.2923668 0.2491248 0.2828370 0.3033383 0.2134043 0.2619493 #>            8         9        10 #> 1  0.3282560 0.3360400 0.3230984 #> 2  0.3254760 0.3133406 0.3207254 #> 3  0.3251333 0.2941890 0.3072063 #> 4  0.3225978 0.2958495 0.3177188 #> 5  0.3119893 0.2707086 0.2988570 #> 6  0.3446120 0.3181695 0.3394202 #> 7  0.3084543 0.2962870 0.2962738 #> 8  0.3041539 0.2438674 0.2611658 #> 9  0.3231347 0.3328246 0.3118223 #> 10 0.3151842 0.2859649 0.3165484 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.2705373 0.2472519 0.2048175 0.2292927 0.2221858 0.2085187 0.2199020 #> 2  0.2352763 0.2512992 0.1965189 0.2329023 0.2261807 0.1751090 0.2134819 #> 3  0.2139154 0.2135087 0.2284204 0.2073628 0.2078374 0.1959184 0.2109865 #> 4  0.2358674 0.2495069 0.2002089 0.2458784 0.2289391 0.1771477 0.2190266 #> 5  0.2196215 0.2283851 0.1887170 0.2146467 0.2376718 0.1646441 0.2049835 #> 6  0.2119694 0.2047827 0.2222961 0.2116307 0.2128970 0.2232134 0.2024893 #> 7  0.2307133 0.2401095 0.2060656 0.2273485 0.2136534 0.1911487 0.2271281 #> 8  0.1866383 0.1838541 0.1419841 0.1650183 0.1776025 0.1310916 0.1531107 #> 9  0.2352525 0.2404133 0.1732540 0.2188813 0.2123766 0.1691703 0.2022504 #> 10 0.2209058 0.2342571 0.1821513 0.2210391 0.2343026 0.1640852 0.2032094 #>            8         9        10 #> 1  0.1883218 0.2651717 0.2226866 #> 2  0.1965556 0.2517922 0.2259428 #> 3  0.1714589 0.2183919 0.1941863 #> 4  0.1924450 0.2486084 0.2309739 #> 5  0.1900009 0.2299189 0.2283098 #> 6  0.2094294 0.2068380 0.2046774 #> 7  0.1710902 0.2432924 0.2080041 #> 8  0.2112978 0.1891867 0.1921009 #> 9  0.1875745 0.2579458 0.2140074 #> 10 0.2119527 0.2339335 0.2480713 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.1998080 0.1826682 0.1542073 0.1714864 0.1819334 0.1577266 0.1564476 #> 2  0.1741855 0.1806190 0.1594896 0.1694174 0.1798726 0.1428264 0.1536805 #> 3  0.1656243 0.1564549 0.1779156 0.1533431 0.1665520 0.1360699 0.1597331 #> 4  0.1745575 0.1805520 0.1576524 0.1770104 0.1783549 0.1424501 0.1574213 #> 5  0.1682793 0.1689211 0.1529833 0.1596198 0.1850970 0.1315141 0.1502743 #> 6  0.1724645 0.1659652 0.1699111 0.1682453 0.1733534 0.1556046 0.1621661 #> 7  0.1790727 0.1833247 0.1646328 0.1735297 0.1776572 0.1492737 0.1702062 #> 8  0.1518411 0.1406077 0.1216492 0.1253971 0.1494803 0.1069955 0.1137505 #> 9  0.1699482 0.1705992 0.1337011 0.1563645 0.1661033 0.1319018 0.1405304 #> 10 0.1757650 0.1818012 0.1540309 0.1731367 0.1892580 0.1411876 0.1570329 #>            8         9        10 #> 1  0.1558584 0.2045476 0.1817127 #> 2  0.1725004 0.1906188 0.1834976 #> 3  0.1204046 0.1665062 0.1595085 #> 4  0.1640928 0.1869042 0.1847849 #> 5  0.1543519 0.1786620 0.1767847 #> 6  0.1277976 0.1703947 0.1719003 #> 7  0.1518326 0.1933757 0.1789993 #> 8  0.1487599 0.1448622 0.1499759 #> 9  0.1612188 0.1909420 0.1716266 #> 10 0.1765624 0.1863334 0.1958255 #>  #> , , lag5 #>  #>            1         2         3         4         5          6         7 #> 1  0.1447171 0.1283688 0.1181135 0.1192660 0.1364172 0.10536601 0.1062677 #> 2  0.1505152 0.1463563 0.1437825 0.1364713 0.1491229 0.10980863 0.1325147 #> 3  0.1314035 0.1163236 0.1410714 0.1109137 0.1223314 0.09327222 0.1183379 #> 4  0.1496490 0.1484866 0.1413294 0.1445377 0.1474357 0.10915871 0.1344266 #> 5  0.1371050 0.1378678 0.1319841 0.1315407 0.1487660 0.09998854 0.1215917 #> 6  0.1213513 0.1099970 0.1197204 0.1051906 0.1073587 0.10841660 0.1057324 #> 7  0.1405513 0.1406326 0.1331130 0.1313781 0.1372703 0.10118014 0.1302224 #> 8  0.1336964 0.1191149 0.1111425 0.1115823 0.1215430 0.09927111 0.1000708 #> 9  0.1387497 0.1316476 0.1155380 0.1204760 0.1305273 0.09787492 0.1142562 #> 10 0.1467478 0.1523971 0.1372870 0.1461753 0.1584440 0.11036998 0.1317372 #>             8         9        10 #> 1  0.11055889 0.1491182 0.1289745 #> 2  0.12438584 0.1583370 0.1416576 #> 3  0.07985942 0.1275100 0.1157323 #> 4  0.11539669 0.1538296 0.1431692 #> 5  0.10437950 0.1490785 0.1316927 #> 6  0.08798908 0.1197156 0.1122777 #> 7  0.10382289 0.1494953 0.1314345 #> 8  0.08561990 0.1280442 0.1081720 #> 9  0.11218081 0.1507388 0.1237926 #> 10 0.12686828 0.1590028 0.1512357 #>  print(sim1_mcgf, \"sds\") #>         1         2         3         4         5         6         7         8  #> 0.9862524 0.9748534 0.9770494 0.9698479 0.9599741 0.9994155 0.9646922 0.9475794  #>         9        10  #> 0.9896725 0.9755941   # Calculate ccfs for 'sim2' data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. ccfs(sim2_mcgf, lag_max = 5) #> $ccfs #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.7253355 0.6581739 0.6742676 0.5956269 0.6539228 0.7346729 #> 2  0.7253355 1.0000000 0.7669501 0.9215406 0.7942684 0.6373885 0.8973061 #> 3  0.6581739 0.7669501 1.0000000 0.7980259 0.7294324 0.6944246 0.8490372 #> 4  0.6742676 0.9215406 0.7980259 1.0000000 0.8314137 0.6324536 0.8775098 #> 5  0.5956269 0.7942684 0.7294324 0.8314137 1.0000000 0.5275938 0.7837795 #> 6  0.6539228 0.6373885 0.6944246 0.6324536 0.5275938 1.0000000 0.6904662 #> 7  0.7346729 0.8973061 0.8490372 0.8775098 0.7837795 0.6904662 1.0000000 #> 8  0.3618948 0.4662877 0.4794521 0.4552763 0.6253280 0.3363358 0.4807004 #> 9  0.8328973 0.8780235 0.7125451 0.7949105 0.7005414 0.6526557 0.8132757 #> 10 0.5756338 0.8070837 0.6646821 0.8211074 0.9143898 0.4954208 0.7528824 #>            8         9        10 #> 1  0.3618948 0.8328973 0.5756338 #> 2  0.4662877 0.8780235 0.8070837 #> 3  0.4794521 0.7125451 0.6646821 #> 4  0.4552763 0.7949105 0.8211074 #> 5  0.6253280 0.7005414 0.9143898 #> 6  0.3363358 0.6526557 0.4954208 #> 7  0.4807004 0.8132757 0.7528824 #> 8  1.0000000 0.4145715 0.6099688 #> 9  0.4145715 1.0000000 0.7067499 #> 10 0.6099688 0.7067499 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.7070542 0.4964391 0.4750405 0.4689888 0.4077367 0.4490775 0.5273708 #> 2  0.5030864 0.7279300 0.5632334 0.6795711 0.5791891 0.4401781 0.6703052 #> 3  0.4620166 0.5437823 0.7139045 0.5766200 0.5108760 0.4700279 0.6214516 #> 4  0.4694793 0.6696579 0.5824655 0.7385844 0.5974308 0.4360042 0.6494964 #> 5  0.4209203 0.5696449 0.5251793 0.6046163 0.7234362 0.3612322 0.5860874 #> 6  0.4474653 0.4449610 0.4960338 0.4567193 0.3582333 0.6993999 0.4921434 #> 7  0.5206745 0.6530074 0.6221710 0.6437900 0.5697321 0.4866875 0.7442014 #> 8  0.2338573 0.3197531 0.3355332 0.3032490 0.4439168 0.2251368 0.3429125 #> 9  0.5779184 0.6201208 0.5164723 0.5633147 0.4871997 0.4505958 0.5877354 #> 10 0.3864327 0.5753449 0.4742678 0.5891316 0.6569062 0.3312721 0.5536584 #>            8         9        10 #> 1  0.2140401 0.5740520 0.3723057 #> 2  0.2979902 0.6229995 0.5691276 #> 3  0.3153111 0.4953406 0.4380273 #> 4  0.2755465 0.5631727 0.5762986 #> 5  0.4292897 0.4967001 0.6473492 #> 6  0.2038634 0.4488978 0.3192271 #> 7  0.3213033 0.5832357 0.5275603 #> 8  0.7390063 0.2700640 0.4142927 #> 9  0.2468992 0.6979600 0.4744001 #> 10 0.4058776 0.4877792 0.7040581 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.5277365 0.3546198 0.3618156 0.3415769 0.2982802 0.3268791 0.4056447 #> 2  0.3831956 0.5438935 0.4318237 0.5128173 0.4401432 0.3300176 0.5216951 #> 3  0.3549779 0.3992073 0.5219222 0.4269075 0.3692002 0.3363391 0.4712026 #> 4  0.3648365 0.5050700 0.4494193 0.5601562 0.4516910 0.3217671 0.5048933 #> 5  0.3304805 0.4278086 0.4000406 0.4606153 0.5506405 0.2660237 0.4614696 #> 6  0.3471513 0.3412525 0.3889292 0.3554432 0.2756441 0.5202934 0.3815189 #> 7  0.4118408 0.4998064 0.4749937 0.4889668 0.4367465 0.3726501 0.5804140 #> 8  0.1650880 0.2165794 0.2320038 0.1946961 0.3267312 0.1497396 0.2488579 #> 9  0.4321856 0.4517232 0.3887029 0.4133591 0.3559332 0.3300043 0.4458373 #> 10 0.2883037 0.4248358 0.3621861 0.4420334 0.5013697 0.2500855 0.4305344 #>            8         9        10 #> 1  0.1235123 0.4027223 0.2538058 #> 2  0.1987388 0.4530495 0.4144594 #> 3  0.2116573 0.3565222 0.2935525 #> 4  0.1722746 0.4158261 0.4222806 #> 5  0.3034688 0.3719414 0.4747377 #> 6  0.1442389 0.3314002 0.2344182 #> 7  0.2297777 0.4370325 0.3857127 #> 8  0.5607449 0.1705234 0.2885639 #> 9  0.1436045 0.4909534 0.3266440 #> 10 0.2768919 0.3532176 0.5082110 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.4675442 0.3125906 0.3181423 0.3015760 0.2536577 0.2878115 0.3647723 #> 2  0.3353596 0.4644585 0.3639478 0.4370681 0.3667784 0.2882783 0.4480505 #> 3  0.3148972 0.3497272 0.4273967 0.3671918 0.3079050 0.2843498 0.4052133 #> 4  0.3289341 0.4419130 0.3840676 0.4845474 0.3781548 0.2827231 0.4394841 #> 5  0.3047122 0.3758110 0.3386901 0.4025976 0.4631572 0.2478714 0.4042701 #> 6  0.3152885 0.3056222 0.3284532 0.3082767 0.2478902 0.4194229 0.3286675 #> 7  0.3731411 0.4469077 0.4033767 0.4302031 0.3730943 0.3246264 0.5057431 #> 8  0.1541659 0.1869893 0.1886950 0.1605353 0.2757670 0.1395138 0.2084248 #> 9  0.3745908 0.3873885 0.3310162 0.3551325 0.2935399 0.2810609 0.3863928 #> 10 0.2692974 0.3678863 0.3114305 0.3843031 0.4242201 0.2451251 0.3766778 #>            8         9        10 #> 1  0.1048177 0.3451480 0.2161233 #> 2  0.1662345 0.3808763 0.3496639 #> 3  0.1883560 0.3092738 0.2485184 #> 4  0.1374158 0.3611296 0.3599557 #> 5  0.2461111 0.3305423 0.4045353 #> 6  0.1255586 0.2906828 0.2124013 #> 7  0.2041113 0.3854978 0.3326085 #> 8  0.4776397 0.1506712 0.2431449 #> 9  0.1111932 0.4042854 0.2658245 #> 10 0.2218219 0.3138115 0.4251316 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.3963548 0.2574826 0.2594267 0.2417150 0.1931277 0.2354944 0.3021649 #> 2  0.2805574 0.4050580 0.3024559 0.3800297 0.2979735 0.2354281 0.3801541 #> 3  0.2560738 0.3065067 0.3523162 0.3187478 0.2575000 0.2208129 0.3407879 #> 4  0.2747799 0.3880396 0.3218297 0.4244483 0.3090813 0.2312637 0.3755250 #> 5  0.2677640 0.3280303 0.2806763 0.3510317 0.3836484 0.2134754 0.3452731 #> 6  0.2659159 0.2514326 0.2531844 0.2413378 0.1961523 0.3227112 0.2630273 #> 7  0.3191913 0.4012004 0.3423242 0.3803361 0.3147650 0.2721052 0.4389438 #> 8  0.1266173 0.1530992 0.1601530 0.1306878 0.2296715 0.1255556 0.1689727 #> 9  0.3163169 0.3371705 0.2814086 0.3043410 0.2332328 0.2293266 0.3343143 #> 10 0.2355561 0.3193381 0.2601050 0.3347732 0.3468571 0.2157377 0.3211322 #>             8         9        10 #> 1  0.05431148 0.2793652 0.1520312 #> 2  0.12597520 0.3205488 0.2851820 #> 3  0.15192646 0.2504438 0.2056497 #> 4  0.09381175 0.3053153 0.2916413 #> 5  0.19652527 0.2862567 0.3371111 #> 6  0.07955793 0.2264494 0.1562696 #> 7  0.16642468 0.3308066 0.2754941 #> 8  0.41829250 0.1173224 0.2028902 #> 9  0.06508565 0.3425271 0.2048477 #> 10 0.16900963 0.2715007 0.3501784 #>  #> , , lag5 #>  #>            1         2         3         4         5          6         7 #> 1  0.3420309 0.2078383 0.2149953 0.2000661 0.1560228 0.18801129 0.2511017 #> 2  0.2510070 0.3528381 0.2523224 0.3344598 0.2500196 0.18514160 0.3264070 #> 3  0.2149757 0.2606810 0.2944950 0.2784500 0.2183095 0.16791436 0.2875798 #> 4  0.2456724 0.3417221 0.2733933 0.3804873 0.2680478 0.18782337 0.3266914 #> 5  0.2335084 0.2774671 0.2222659 0.3042602 0.3231181 0.17010719 0.2854761 #> 6  0.2340296 0.2163650 0.2109834 0.2066313 0.1648859 0.26537381 0.2240876 #> 7  0.2852066 0.3559331 0.2943504 0.3420120 0.2744471 0.21519845 0.3833435 #> 8  0.1005324 0.1149556 0.1278700 0.1098850 0.2009818 0.09376477 0.1335267 #> 9  0.2745155 0.2908831 0.2339738 0.2613348 0.1905677 0.17936473 0.2870061 #> 10 0.2043453 0.2725117 0.2050978 0.2922842 0.2897017 0.17319263 0.2653152 #>             8          9        10 #> 1  0.02588983 0.22391676 0.1112033 #> 2  0.09691562 0.28014088 0.2383530 #> 3  0.12301376 0.20435905 0.1723226 #> 4  0.07005784 0.27313718 0.2506911 #> 5  0.16517777 0.24642579 0.2862962 #> 6  0.05439593 0.18993331 0.1332788 #> 7  0.13407572 0.29324706 0.2383911 #> 8  0.37411307 0.08343725 0.1714628 #> 9  0.04387518 0.29648434 0.1645130 #> 10 0.14044327 0.23535815 0.2961900 #>  #>  #> $ccfs_rs #> $ccfs_rs$`Regime 1` #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.8308393 0.8102100 0.7866196 0.7353707 0.8412210 0.8559371 #> 2  0.8308393 1.0000000 0.8858371 0.9525121 0.8562427 0.8069771 0.9496685 #> 3  0.8102100 0.8858371 1.0000000 0.8894228 0.8385622 0.8359080 0.9146431 #> 4  0.7866196 0.9525121 0.8894228 1.0000000 0.8840708 0.7785386 0.9276302 #> 5  0.7353707 0.8562427 0.8385622 0.8840708 1.0000000 0.7281890 0.8535092 #> 6  0.8412210 0.8069771 0.8359080 0.7785386 0.7281890 1.0000000 0.8355659 #> 7  0.8559371 0.9496685 0.9146431 0.9276302 0.8535092 0.8355659 1.0000000 #> 8  0.5127389 0.6099056 0.6473136 0.5947805 0.7372821 0.5471515 0.6041109 #> 9  0.8859579 0.9302280 0.8325755 0.8679449 0.8018312 0.8172522 0.8958696 #> 10 0.6988869 0.8556711 0.7804132 0.8727254 0.9485525 0.6913818 0.8175170 #>            8         9        10 #> 1  0.5127389 0.8859579 0.6988869 #> 2  0.6099056 0.9302280 0.8556711 #> 3  0.6473136 0.8325755 0.7804132 #> 4  0.5947805 0.8679449 0.8727254 #> 5  0.7372821 0.8018312 0.9485525 #> 6  0.5471515 0.8172522 0.6913818 #> 7  0.6041109 0.8958696 0.8175170 #> 8  1.0000000 0.5721013 0.7149722 #> 9  0.5721013 1.0000000 0.8043159 #> 10 0.7149722 0.8043159 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.6864394 0.5392454 0.5652945 0.5203384 0.4783250 0.5644578 0.5982528 #> 2  0.5471850 0.6858549 0.6335599 0.6633122 0.5716682 0.5430424 0.6830678 #> 3  0.5605046 0.6160020 0.7108713 0.6251227 0.5665481 0.5696431 0.6609524 #> 4  0.5215628 0.6626624 0.6342039 0.7137940 0.5996629 0.5295055 0.6714224 #> 5  0.4820421 0.5747630 0.5753193 0.6001440 0.6785161 0.4822455 0.6043812 #> 6  0.5684405 0.5330144 0.5675165 0.5214297 0.4677323 0.6579117 0.5822721 #> 7  0.5934758 0.6734152 0.6640108 0.6638609 0.5920994 0.5791419 0.7363254 #> 8  0.3049303 0.3914395 0.4527041 0.3732759 0.4896678 0.3723458 0.4073541 #> 9  0.5831341 0.6157417 0.5751133 0.5796723 0.5123817 0.5428355 0.6251420 #> 10 0.4290946 0.5622032 0.5168066 0.5821782 0.6320068 0.4387454 0.5628470 #>            8         9        10 #> 1  0.3134674 0.5769110 0.4257024 #> 2  0.3889904 0.6200322 0.5526005 #> 3  0.4341280 0.5594389 0.4983470 #> 4  0.3717404 0.5818886 0.5785984 #> 5  0.4869967 0.5224019 0.6287914 #> 6  0.3456230 0.5292466 0.4210983 #> 7  0.4011651 0.6179891 0.5454563 #> 8  0.7108973 0.3484567 0.4503701 #> 9  0.3476144 0.6604236 0.5000573 #> 10 0.4505731 0.5069656 0.6625812 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.5980917 0.4357255 0.4774716 0.4219156 0.3793658 0.4704197 0.5099513 #> 2  0.4777477 0.5938217 0.5551330 0.5738030 0.4768344 0.4680276 0.5989170 #> 3  0.4848289 0.5236488 0.6280149 0.5416123 0.4714698 0.4832192 0.5755859 #> 4  0.4591394 0.5831012 0.5659446 0.6345977 0.5154975 0.4560613 0.5976676 #> 5  0.4143873 0.4932016 0.5067458 0.5227836 0.5895602 0.3983640 0.5285574 #> 6  0.4988322 0.4521760 0.5054227 0.4516580 0.3903960 0.5837724 0.5129304 #> 7  0.5242454 0.5888198 0.5878831 0.5816452 0.5056400 0.5040437 0.6579683 #> 8  0.2355145 0.3075094 0.3770833 0.2906562 0.3950102 0.2910547 0.3313265 #> 9  0.5057506 0.5175084 0.4868187 0.4836277 0.4079968 0.4556058 0.5351833 #> 10 0.3524994 0.4729703 0.4429590 0.4986192 0.5380306 0.3555102 0.4839446 #>            8         9        10 #> 1  0.2037195 0.4717776 0.3159640 #> 2  0.2970748 0.5345334 0.4488101 #> 3  0.3365550 0.4727628 0.3933781 #> 4  0.2877572 0.5060410 0.4859086 #> 5  0.3950188 0.4405599 0.5237733 #> 6  0.2662920 0.4489589 0.3354823 #> 7  0.3172898 0.5365195 0.4503186 #> 8  0.6178423 0.2609525 0.3460937 #> 9  0.2301708 0.5643614 0.3867413 #> 10 0.3542263 0.4165094 0.5538571 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.5799138 0.4209460 0.4479417 0.4050870 0.3430249 0.4421001 0.4832819 #> 2  0.4540738 0.5652111 0.5153620 0.5429653 0.4347620 0.4326918 0.5567684 #> 3  0.4594292 0.4972881 0.5889212 0.5172140 0.4339114 0.4443368 0.5395860 #> 4  0.4411100 0.5606963 0.5334153 0.6102559 0.4769593 0.4248772 0.5622474 #> 5  0.4008312 0.4746074 0.4807449 0.5044688 0.5559946 0.3808688 0.5031919 #> 6  0.4738386 0.4336664 0.4701668 0.4300558 0.3648146 0.5436729 0.4806871 #> 7  0.5028254 0.5621003 0.5495473 0.5539703 0.4615898 0.4674983 0.6203767 #> 8  0.2250517 0.2887159 0.3578811 0.2740132 0.3735723 0.2746843 0.3152436 #> 9  0.4779236 0.4857287 0.4446888 0.4514258 0.3616571 0.4184017 0.4934416 #> 10 0.3482105 0.4608180 0.4237510 0.4853892 0.5107999 0.3385145 0.4615135 #>            8         9        10 #> 1  0.1862887 0.4617773 0.2850035 #> 2  0.2638781 0.5182426 0.4151735 #> 3  0.3074732 0.4582625 0.3611946 #> 4  0.2598801 0.4950096 0.4567883 #> 5  0.3590319 0.4322667 0.4980028 #> 6  0.2481327 0.4381720 0.3187422 #> 7  0.2866238 0.5210327 0.4149779 #> 8  0.5916519 0.2523810 0.3254456 #> 9  0.1969184 0.5440907 0.3448757 #> 10 0.3267113 0.4196799 0.5309129 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.4871662 0.3537645 0.3772170 0.3406470 0.2675381 0.3622933 0.4110076 #> 2  0.3649226 0.4874964 0.4363152 0.4751441 0.3586146 0.3515168 0.4793089 #> 3  0.3614080 0.4111755 0.4990929 0.4339821 0.3458701 0.3524099 0.4501081 #> 4  0.3449548 0.4736772 0.4518674 0.5327921 0.3922883 0.3396821 0.4770968 #> 5  0.3194932 0.3945602 0.4066898 0.4311346 0.4797605 0.3050250 0.4262570 #> 6  0.3786949 0.3550469 0.3895700 0.3503272 0.2850954 0.4501596 0.3975973 #> 7  0.4233242 0.4909852 0.4781261 0.4881010 0.3876560 0.4006631 0.5471073 #> 8  0.1527586 0.2186730 0.3045272 0.2178326 0.3175820 0.2101775 0.2537508 #> 9  0.3889649 0.4129336 0.3763828 0.3895490 0.2894185 0.3419023 0.4211313 #> 10 0.2744266 0.3950673 0.3603605 0.4241840 0.4427611 0.2754777 0.3944033 #>            8         9        10 #> 1  0.1067157 0.3863560 0.2024785 #> 2  0.1885340 0.4389927 0.3323390 #> 3  0.2164670 0.3694079 0.2672948 #> 4  0.1785224 0.4061621 0.3645810 #> 5  0.2825680 0.3547848 0.4154092 #> 6  0.1691481 0.3481786 0.2337548 #> 7  0.2130802 0.4466353 0.3340148 #> 8  0.5401298 0.1822863 0.2688686 #> 9  0.1166133 0.4722720 0.2644108 #> 10 0.2525627 0.3526771 0.4543974 #>  #> , , lag5 #>  #>            1         2         3         4         5         6         7 #> 1  0.4330913 0.3030788 0.3321438 0.3061674 0.2482780 0.2937271 0.3582900 #> 2  0.3081704 0.4237994 0.3766704 0.4238978 0.3144696 0.2781232 0.4162966 #> 3  0.3048366 0.3490663 0.4272878 0.3874174 0.3068043 0.2768933 0.3861666 #> 4  0.2949309 0.4108927 0.3952650 0.4828030 0.3505431 0.2710156 0.4192085 #> 5  0.2654093 0.3298223 0.3429632 0.3797325 0.4314821 0.2383312 0.3676105 #> 6  0.3408071 0.3108386 0.3339168 0.3139730 0.2557339 0.3852366 0.3456309 #> 7  0.3759298 0.4382207 0.4235824 0.4477504 0.3518104 0.3347276 0.4911736 #> 8  0.1072946 0.1584509 0.2503228 0.1850105 0.2900176 0.1478667 0.2086970 #> 9  0.3321524 0.3542708 0.3306311 0.3482392 0.2593440 0.2773416 0.3604308 #> 10 0.2242630 0.3367915 0.3098422 0.3814780 0.4033455 0.2155921 0.3435308 #>            8         9        10 #> 1  0.1045848 0.3273462 0.1846739 #> 2  0.1642464 0.3712771 0.2862931 #> 3  0.1771733 0.3009515 0.2298394 #> 4  0.1493358 0.3474189 0.3198695 #> 5  0.2406652 0.2922762 0.3670997 #> 6  0.1436138 0.2971513 0.2034960 #> 7  0.1786197 0.3920672 0.3002643 #> 8  0.4907890 0.1104060 0.2381019 #> 9  0.1045624 0.4067891 0.2324636 #> 10 0.2180423 0.2916389 0.4073179 #>  #>  #> $ccfs_rs$`Regime 2` #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.5853028 0.4330628 0.5190522 0.4084776 0.4041021 0.5458742 #> 2  0.5853028 1.0000000 0.6114359 0.8832130 0.7192808 0.4332525 0.8296568 #> 3  0.4330628 0.6114359 1.0000000 0.6742645 0.5864727 0.5096632 0.7496550 #> 4  0.5190522 0.8832130 0.6742645 1.0000000 0.7659502 0.4514626 0.8088453 #> 5  0.4084776 0.7192808 0.5864727 0.7659502 1.0000000 0.2857775 0.6910483 #> 6  0.4041021 0.4332525 0.5096632 0.4514626 0.2857775 1.0000000 0.4934430 #> 7  0.5458742 0.8296568 0.7496550 0.8088453 0.6910483 0.4934430 1.0000000 #> 8  0.1666689 0.2985190 0.2665742 0.2877169 0.4944467 0.0908584 0.3186501 #> 9  0.7630840 0.8144029 0.5536539 0.7032705 0.5768919 0.4527752 0.7014441 #> 10 0.4114103 0.7484855 0.5134349 0.7571907 0.8731293 0.2599559 0.6675682 #>            8         9        10 #> 1  0.1666689 0.7630840 0.4114103 #> 2  0.2985190 0.8144029 0.7484855 #> 3  0.2665742 0.5536539 0.5134349 #> 4  0.2877169 0.7032705 0.7571907 #> 5  0.4944467 0.5768919 0.8731293 #> 6  0.0908584 0.4527752 0.2599559 #> 7  0.3186501 0.7014441 0.6675682 #> 8  1.0000000 0.2289443 0.4875853 #> 9  0.2289443 1.0000000 0.5880455 #> 10 0.4875853 0.5880455 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5          6         7 #> 1  0.7382618 0.4403624 0.3414186 0.3983701 0.3135834 0.29536190 0.4170384 #> 2  0.4452862 0.7787649 0.4714988 0.6999806 0.5882897 0.31635910 0.6564609 #> 3  0.3161961 0.4494965 0.7183008 0.5111068 0.4382627 0.33989354 0.5617002 #> 4  0.3978389 0.6785329 0.5125467 0.7703837 0.5947821 0.32017130 0.6204380 #> 5  0.3396356 0.5634524 0.4599302 0.6103279 0.7778696 0.21535160 0.5639419 #> 6  0.2862048 0.3389703 0.4030559 0.3766020 0.2262334 0.74915562 0.3701518 #> 7  0.4073492 0.6284176 0.5588535 0.6173721 0.5418128 0.36143616 0.7568379 #> 8  0.1422539 0.2360374 0.1869437 0.2192196 0.3904911 0.05372174 0.2590998 #> 9  0.5725991 0.6254728 0.4391700 0.5428372 0.4564636 0.33858680 0.5382191 #> 10 0.3302951 0.5911951 0.4192379 0.5979365 0.6869826 0.20213317 0.5442090 #>             8         9        10 #> 1  0.08521175 0.5719364 0.3016229 #> 2  0.19168818 0.6266305 0.5890607 #> 3  0.16452674 0.4107112 0.3594208 #> 4  0.15996591 0.5397330 0.5736013 #> 5  0.36186072 0.4653294 0.6697658 #> 6  0.03879077 0.3513307 0.1968197 #> 7  0.21652647 0.5374233 0.5058527 #> 8  0.77080551 0.1777193 0.3722972 #> 9  0.12821160 0.7441298 0.4431933 #> 10 0.35382223 0.4644469 0.7539928 #>  #> , , lag2 #>  #>             1         2          3          4         5          6         7 #> 1  0.42123020 0.2462282 0.19055090 0.23030754 0.1895194  0.1347442 0.2431896 #> 2  0.25672335 0.4835705 0.26966688 0.43702358 0.3957476  0.1638924 0.4172346 #> 3  0.16268590 0.2354754 0.36815442 0.27096638 0.2345092  0.1435493 0.3123924 #> 4  0.23415437 0.4080542 0.29102005 0.46466833 0.3722418  0.1553029 0.3736632 #> 5  0.21801309 0.3486840 0.25954167 0.38321050 0.5034781  0.1064876 0.3705730 #> 6  0.14412688 0.2077322 0.23633530 0.23621945 0.1373111  0.4441645 0.2015812 #> 7  0.23676681 0.3788005 0.30321532 0.35781557 0.3431904  0.1926827 0.4559834 #> 8  0.07391703 0.1103358 0.04723147 0.07930997 0.2468913 -0.0148277 0.1399340 #> 9  0.33314638 0.3715377 0.25844830 0.32514659 0.2923766  0.1774708 0.3226247 #> 10 0.20272540 0.3667834 0.25637603 0.37183777 0.4570905  0.1234082 0.3588864 #>              8          9        10 #> 1  0.019291611 0.30974508 0.1708482 #> 2  0.083831616 0.35372658 0.3730310 #> 3  0.052639758 0.20200567 0.1624065 #> 4  0.033347082 0.30255966 0.3433280 #> 5  0.196374869 0.28817376 0.4155118 #> 6  0.002106549 0.18863492 0.1129806 #> 7  0.113891794 0.29952845 0.2982359 #> 8  0.496151573 0.06393335 0.2214998 #> 9  0.041558222 0.40066176 0.2535227 #> 10 0.186712393 0.27620975 0.4532571 #>  #> , , lag3 #>  #>             1          2           3          4         5           6 #> 1  0.29743482 0.16719256  0.12592130 0.15793618 0.1335211  0.08104262 #> 2  0.17603533 0.34272956  0.16443987 0.30534517 0.2845194  0.11444472 #> 3  0.10085303 0.15528472  0.19328754 0.16303108 0.1416166  0.07414699 #> 4  0.17327434 0.29414929  0.18084474 0.32329822 0.2550553  0.10649820 #> 5  0.17561265 0.25626879  0.15120365 0.27568006 0.3506584  0.08754300 #> 6  0.10288439 0.15149294  0.14245471 0.15733071 0.1069382  0.27041292 #> 7  0.17112720 0.28914307  0.18079085 0.25423554 0.2518408  0.12844132 #> 8  0.06232819 0.06811446 -0.02713247 0.02400996 0.1613405 -0.01789870 #> 9  0.23475249 0.26751549  0.17987937 0.23422349 0.2103831  0.11426738 #> 10 0.16377884 0.25580590  0.16382335 0.25879104 0.3196466  0.13290938 #>             7            8          9         10 #> 1  0.18017154 -0.001169148 0.18707425 0.12394892 #> 2  0.29930744  0.052127275 0.21342851 0.27065621 #> 3  0.20062006  0.036639783 0.11094149 0.10028715 #> 4  0.26499094 -0.009959659 0.19300921 0.23972268 #> 5  0.26865745  0.113977101 0.20635657 0.29164245 #> 6  0.11981808 -0.017184909 0.11156401 0.08462309 #> 7  0.32182113  0.094735955 0.19708792 0.22012513 #> 8  0.06634071  0.348659793 0.03076491 0.14716059 #> 9  0.23800479  0.010123658 0.23232526 0.16963655 #> 10 0.26103090  0.099470371 0.18499167 0.29778000 #>  #> , , lag4 #>  #>             1          2           3          4          5          6 #> 1  0.25888124 0.12821130  0.08498599 0.10433630 0.09303318 0.06556162 #> 2  0.16748671 0.30545623  0.12603334 0.26171602 0.22459859 0.09568979 #> 3  0.10008329 0.16872144  0.13958230 0.16196827 0.14097447 0.04787766 #> 4  0.17754025 0.28152551  0.14486894 0.28547310 0.20541240 0.09686491 #> 5  0.19865527 0.24753018  0.11431615 0.25124225 0.26718123 0.10311270 #> 6  0.11499197 0.12671009  0.07401844 0.10623407 0.08893158 0.16986525 #> 7  0.15698471 0.27854334  0.13550235 0.22714103 0.21493482 0.09545231 #> 8  0.09316888 0.07648102 -0.02402607 0.02585186 0.12681538 0.02701813 #> 9  0.21816842 0.24481894  0.15514217 0.19734995 0.16464166 0.09260893 #> 10 0.18396836 0.22800505  0.12830942 0.22375619 0.23102121 0.14395478 #>             7            8          9         10 #> 1  0.13261375 -0.013940819 0.13423906 0.08449977 #> 2  0.24432783  0.052873965 0.17616697 0.22830847 #> 3  0.17434787  0.069937994 0.09208672 0.12472320 #> 4  0.23119679 -0.008131650 0.17868050 0.20108082 #> 5  0.23433360  0.095845567 0.20259808 0.24254026 #> 6  0.07797909 -0.024776955 0.07861430 0.06316409 #> 7  0.26540259  0.105027103 0.16979772 0.19581348 #> 8  0.05623704  0.280460072 0.04074609 0.12594411 #> 9  0.21407894  0.004334025 0.18294103 0.13237258 #> 10 0.22122496  0.071544404 0.17272680 0.22470756 #>  #> , , lag5 #>  #>             1          2           3          4          5          6 #> 1  0.20418022 0.07979408  0.04149909 0.05261401 0.03162674 0.04630108 #> 2  0.17461642 0.26710297  0.08836786 0.22320133 0.17203605 0.07321777 #> 3  0.08189927 0.14433559  0.10202894 0.13017220 0.10152914 0.02466407 #> 4  0.17752171 0.25569651  0.10751494 0.24924445 0.16525702 0.08469896 #> 5  0.19113318 0.21411814  0.06281766 0.21023345 0.19180444 0.08786348 #> 6  0.09106808 0.10264532  0.04944527 0.07356021 0.05536859 0.12162516 #> 7  0.14388989 0.24344912  0.09750976 0.19158282 0.16814981 0.05071938 #> 8  0.09228771 0.06413853 -0.02837809 0.01950539 0.09679899 0.03076919 #> 9  0.19672047 0.21361679  0.10536872 0.15220752 0.10660453 0.06037580 #> 10 0.17822643 0.19498706  0.06723777 0.18152491 0.15243870 0.12224594 #>             7           8          9         10 #> 1  0.08411575 -0.07693899 0.08347789 0.01243631 #> 2  0.20316596  0.01822705 0.16904760 0.18053495 #> 3  0.13746587  0.05419342 0.07578353 0.09676766 #> 4  0.19517269 -0.02536688 0.17986662 0.16479339 #> 5  0.17258954  0.07684657 0.19045274 0.18869918 #> 6  0.05686940 -0.04951116 0.05972107 0.04890647 #> 7  0.21033715  0.07523937 0.15593798 0.15382851 #> 8  0.03342435  0.24211961 0.05166422 0.09373749 #> 9  0.18534021 -0.02769118 0.16080968 0.08183007 #> 10 0.15820097  0.04991924 0.16687829 0.16240142 #>  #>  #>   # Add ccfs and sds to 'sim2_mcgf' sim2_mcgf <- add_ccfs(sim2_mcgf, lag_max = 5) print(sim2_mcgf, \"ccfs\") #> $ccfs #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.7253355 0.6581739 0.6742676 0.5956269 0.6539228 0.7346729 #> 2  0.7253355 1.0000000 0.7669501 0.9215406 0.7942684 0.6373885 0.8973061 #> 3  0.6581739 0.7669501 1.0000000 0.7980259 0.7294324 0.6944246 0.8490372 #> 4  0.6742676 0.9215406 0.7980259 1.0000000 0.8314137 0.6324536 0.8775098 #> 5  0.5956269 0.7942684 0.7294324 0.8314137 1.0000000 0.5275938 0.7837795 #> 6  0.6539228 0.6373885 0.6944246 0.6324536 0.5275938 1.0000000 0.6904662 #> 7  0.7346729 0.8973061 0.8490372 0.8775098 0.7837795 0.6904662 1.0000000 #> 8  0.3618948 0.4662877 0.4794521 0.4552763 0.6253280 0.3363358 0.4807004 #> 9  0.8328973 0.8780235 0.7125451 0.7949105 0.7005414 0.6526557 0.8132757 #> 10 0.5756338 0.8070837 0.6646821 0.8211074 0.9143898 0.4954208 0.7528824 #>            8         9        10 #> 1  0.3618948 0.8328973 0.5756338 #> 2  0.4662877 0.8780235 0.8070837 #> 3  0.4794521 0.7125451 0.6646821 #> 4  0.4552763 0.7949105 0.8211074 #> 5  0.6253280 0.7005414 0.9143898 #> 6  0.3363358 0.6526557 0.4954208 #> 7  0.4807004 0.8132757 0.7528824 #> 8  1.0000000 0.4145715 0.6099688 #> 9  0.4145715 1.0000000 0.7067499 #> 10 0.6099688 0.7067499 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.7070542 0.4964391 0.4750405 0.4689888 0.4077367 0.4490775 0.5273708 #> 2  0.5030864 0.7279300 0.5632334 0.6795711 0.5791891 0.4401781 0.6703052 #> 3  0.4620166 0.5437823 0.7139045 0.5766200 0.5108760 0.4700279 0.6214516 #> 4  0.4694793 0.6696579 0.5824655 0.7385844 0.5974308 0.4360042 0.6494964 #> 5  0.4209203 0.5696449 0.5251793 0.6046163 0.7234362 0.3612322 0.5860874 #> 6  0.4474653 0.4449610 0.4960338 0.4567193 0.3582333 0.6993999 0.4921434 #> 7  0.5206745 0.6530074 0.6221710 0.6437900 0.5697321 0.4866875 0.7442014 #> 8  0.2338573 0.3197531 0.3355332 0.3032490 0.4439168 0.2251368 0.3429125 #> 9  0.5779184 0.6201208 0.5164723 0.5633147 0.4871997 0.4505958 0.5877354 #> 10 0.3864327 0.5753449 0.4742678 0.5891316 0.6569062 0.3312721 0.5536584 #>            8         9        10 #> 1  0.2140401 0.5740520 0.3723057 #> 2  0.2979902 0.6229995 0.5691276 #> 3  0.3153111 0.4953406 0.4380273 #> 4  0.2755465 0.5631727 0.5762986 #> 5  0.4292897 0.4967001 0.6473492 #> 6  0.2038634 0.4488978 0.3192271 #> 7  0.3213033 0.5832357 0.5275603 #> 8  0.7390063 0.2700640 0.4142927 #> 9  0.2468992 0.6979600 0.4744001 #> 10 0.4058776 0.4877792 0.7040581 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.5277365 0.3546198 0.3618156 0.3415769 0.2982802 0.3268791 0.4056447 #> 2  0.3831956 0.5438935 0.4318237 0.5128173 0.4401432 0.3300176 0.5216951 #> 3  0.3549779 0.3992073 0.5219222 0.4269075 0.3692002 0.3363391 0.4712026 #> 4  0.3648365 0.5050700 0.4494193 0.5601562 0.4516910 0.3217671 0.5048933 #> 5  0.3304805 0.4278086 0.4000406 0.4606153 0.5506405 0.2660237 0.4614696 #> 6  0.3471513 0.3412525 0.3889292 0.3554432 0.2756441 0.5202934 0.3815189 #> 7  0.4118408 0.4998064 0.4749937 0.4889668 0.4367465 0.3726501 0.5804140 #> 8  0.1650880 0.2165794 0.2320038 0.1946961 0.3267312 0.1497396 0.2488579 #> 9  0.4321856 0.4517232 0.3887029 0.4133591 0.3559332 0.3300043 0.4458373 #> 10 0.2883037 0.4248358 0.3621861 0.4420334 0.5013697 0.2500855 0.4305344 #>            8         9        10 #> 1  0.1235123 0.4027223 0.2538058 #> 2  0.1987388 0.4530495 0.4144594 #> 3  0.2116573 0.3565222 0.2935525 #> 4  0.1722746 0.4158261 0.4222806 #> 5  0.3034688 0.3719414 0.4747377 #> 6  0.1442389 0.3314002 0.2344182 #> 7  0.2297777 0.4370325 0.3857127 #> 8  0.5607449 0.1705234 0.2885639 #> 9  0.1436045 0.4909534 0.3266440 #> 10 0.2768919 0.3532176 0.5082110 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.4675442 0.3125906 0.3181423 0.3015760 0.2536577 0.2878115 0.3647723 #> 2  0.3353596 0.4644585 0.3639478 0.4370681 0.3667784 0.2882783 0.4480505 #> 3  0.3148972 0.3497272 0.4273967 0.3671918 0.3079050 0.2843498 0.4052133 #> 4  0.3289341 0.4419130 0.3840676 0.4845474 0.3781548 0.2827231 0.4394841 #> 5  0.3047122 0.3758110 0.3386901 0.4025976 0.4631572 0.2478714 0.4042701 #> 6  0.3152885 0.3056222 0.3284532 0.3082767 0.2478902 0.4194229 0.3286675 #> 7  0.3731411 0.4469077 0.4033767 0.4302031 0.3730943 0.3246264 0.5057431 #> 8  0.1541659 0.1869893 0.1886950 0.1605353 0.2757670 0.1395138 0.2084248 #> 9  0.3745908 0.3873885 0.3310162 0.3551325 0.2935399 0.2810609 0.3863928 #> 10 0.2692974 0.3678863 0.3114305 0.3843031 0.4242201 0.2451251 0.3766778 #>            8         9        10 #> 1  0.1048177 0.3451480 0.2161233 #> 2  0.1662345 0.3808763 0.3496639 #> 3  0.1883560 0.3092738 0.2485184 #> 4  0.1374158 0.3611296 0.3599557 #> 5  0.2461111 0.3305423 0.4045353 #> 6  0.1255586 0.2906828 0.2124013 #> 7  0.2041113 0.3854978 0.3326085 #> 8  0.4776397 0.1506712 0.2431449 #> 9  0.1111932 0.4042854 0.2658245 #> 10 0.2218219 0.3138115 0.4251316 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.3963548 0.2574826 0.2594267 0.2417150 0.1931277 0.2354944 0.3021649 #> 2  0.2805574 0.4050580 0.3024559 0.3800297 0.2979735 0.2354281 0.3801541 #> 3  0.2560738 0.3065067 0.3523162 0.3187478 0.2575000 0.2208129 0.3407879 #> 4  0.2747799 0.3880396 0.3218297 0.4244483 0.3090813 0.2312637 0.3755250 #> 5  0.2677640 0.3280303 0.2806763 0.3510317 0.3836484 0.2134754 0.3452731 #> 6  0.2659159 0.2514326 0.2531844 0.2413378 0.1961523 0.3227112 0.2630273 #> 7  0.3191913 0.4012004 0.3423242 0.3803361 0.3147650 0.2721052 0.4389438 #> 8  0.1266173 0.1530992 0.1601530 0.1306878 0.2296715 0.1255556 0.1689727 #> 9  0.3163169 0.3371705 0.2814086 0.3043410 0.2332328 0.2293266 0.3343143 #> 10 0.2355561 0.3193381 0.2601050 0.3347732 0.3468571 0.2157377 0.3211322 #>             8         9        10 #> 1  0.05431148 0.2793652 0.1520312 #> 2  0.12597520 0.3205488 0.2851820 #> 3  0.15192646 0.2504438 0.2056497 #> 4  0.09381175 0.3053153 0.2916413 #> 5  0.19652527 0.2862567 0.3371111 #> 6  0.07955793 0.2264494 0.1562696 #> 7  0.16642468 0.3308066 0.2754941 #> 8  0.41829250 0.1173224 0.2028902 #> 9  0.06508565 0.3425271 0.2048477 #> 10 0.16900963 0.2715007 0.3501784 #>  #> , , lag5 #>  #>            1         2         3         4         5          6         7 #> 1  0.3420309 0.2078383 0.2149953 0.2000661 0.1560228 0.18801129 0.2511017 #> 2  0.2510070 0.3528381 0.2523224 0.3344598 0.2500196 0.18514160 0.3264070 #> 3  0.2149757 0.2606810 0.2944950 0.2784500 0.2183095 0.16791436 0.2875798 #> 4  0.2456724 0.3417221 0.2733933 0.3804873 0.2680478 0.18782337 0.3266914 #> 5  0.2335084 0.2774671 0.2222659 0.3042602 0.3231181 0.17010719 0.2854761 #> 6  0.2340296 0.2163650 0.2109834 0.2066313 0.1648859 0.26537381 0.2240876 #> 7  0.2852066 0.3559331 0.2943504 0.3420120 0.2744471 0.21519845 0.3833435 #> 8  0.1005324 0.1149556 0.1278700 0.1098850 0.2009818 0.09376477 0.1335267 #> 9  0.2745155 0.2908831 0.2339738 0.2613348 0.1905677 0.17936473 0.2870061 #> 10 0.2043453 0.2725117 0.2050978 0.2922842 0.2897017 0.17319263 0.2653152 #>             8          9        10 #> 1  0.02588983 0.22391676 0.1112033 #> 2  0.09691562 0.28014088 0.2383530 #> 3  0.12301376 0.20435905 0.1723226 #> 4  0.07005784 0.27313718 0.2506911 #> 5  0.16517777 0.24642579 0.2862962 #> 6  0.05439593 0.18993331 0.1332788 #> 7  0.13407572 0.29324706 0.2383911 #> 8  0.37411307 0.08343725 0.1714628 #> 9  0.04387518 0.29648434 0.1645130 #> 10 0.14044327 0.23535815 0.2961900 #>  #>  #> $ccfs_rs #> $ccfs_rs$`Regime 1` #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.8308393 0.8102100 0.7866196 0.7353707 0.8412210 0.8559371 #> 2  0.8308393 1.0000000 0.8858371 0.9525121 0.8562427 0.8069771 0.9496685 #> 3  0.8102100 0.8858371 1.0000000 0.8894228 0.8385622 0.8359080 0.9146431 #> 4  0.7866196 0.9525121 0.8894228 1.0000000 0.8840708 0.7785386 0.9276302 #> 5  0.7353707 0.8562427 0.8385622 0.8840708 1.0000000 0.7281890 0.8535092 #> 6  0.8412210 0.8069771 0.8359080 0.7785386 0.7281890 1.0000000 0.8355659 #> 7  0.8559371 0.9496685 0.9146431 0.9276302 0.8535092 0.8355659 1.0000000 #> 8  0.5127389 0.6099056 0.6473136 0.5947805 0.7372821 0.5471515 0.6041109 #> 9  0.8859579 0.9302280 0.8325755 0.8679449 0.8018312 0.8172522 0.8958696 #> 10 0.6988869 0.8556711 0.7804132 0.8727254 0.9485525 0.6913818 0.8175170 #>            8         9        10 #> 1  0.5127389 0.8859579 0.6988869 #> 2  0.6099056 0.9302280 0.8556711 #> 3  0.6473136 0.8325755 0.7804132 #> 4  0.5947805 0.8679449 0.8727254 #> 5  0.7372821 0.8018312 0.9485525 #> 6  0.5471515 0.8172522 0.6913818 #> 7  0.6041109 0.8958696 0.8175170 #> 8  1.0000000 0.5721013 0.7149722 #> 9  0.5721013 1.0000000 0.8043159 #> 10 0.7149722 0.8043159 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5         6         7 #> 1  0.6864394 0.5392454 0.5652945 0.5203384 0.4783250 0.5644578 0.5982528 #> 2  0.5471850 0.6858549 0.6335599 0.6633122 0.5716682 0.5430424 0.6830678 #> 3  0.5605046 0.6160020 0.7108713 0.6251227 0.5665481 0.5696431 0.6609524 #> 4  0.5215628 0.6626624 0.6342039 0.7137940 0.5996629 0.5295055 0.6714224 #> 5  0.4820421 0.5747630 0.5753193 0.6001440 0.6785161 0.4822455 0.6043812 #> 6  0.5684405 0.5330144 0.5675165 0.5214297 0.4677323 0.6579117 0.5822721 #> 7  0.5934758 0.6734152 0.6640108 0.6638609 0.5920994 0.5791419 0.7363254 #> 8  0.3049303 0.3914395 0.4527041 0.3732759 0.4896678 0.3723458 0.4073541 #> 9  0.5831341 0.6157417 0.5751133 0.5796723 0.5123817 0.5428355 0.6251420 #> 10 0.4290946 0.5622032 0.5168066 0.5821782 0.6320068 0.4387454 0.5628470 #>            8         9        10 #> 1  0.3134674 0.5769110 0.4257024 #> 2  0.3889904 0.6200322 0.5526005 #> 3  0.4341280 0.5594389 0.4983470 #> 4  0.3717404 0.5818886 0.5785984 #> 5  0.4869967 0.5224019 0.6287914 #> 6  0.3456230 0.5292466 0.4210983 #> 7  0.4011651 0.6179891 0.5454563 #> 8  0.7108973 0.3484567 0.4503701 #> 9  0.3476144 0.6604236 0.5000573 #> 10 0.4505731 0.5069656 0.6625812 #>  #> , , lag2 #>  #>            1         2         3         4         5         6         7 #> 1  0.5980917 0.4357255 0.4774716 0.4219156 0.3793658 0.4704197 0.5099513 #> 2  0.4777477 0.5938217 0.5551330 0.5738030 0.4768344 0.4680276 0.5989170 #> 3  0.4848289 0.5236488 0.6280149 0.5416123 0.4714698 0.4832192 0.5755859 #> 4  0.4591394 0.5831012 0.5659446 0.6345977 0.5154975 0.4560613 0.5976676 #> 5  0.4143873 0.4932016 0.5067458 0.5227836 0.5895602 0.3983640 0.5285574 #> 6  0.4988322 0.4521760 0.5054227 0.4516580 0.3903960 0.5837724 0.5129304 #> 7  0.5242454 0.5888198 0.5878831 0.5816452 0.5056400 0.5040437 0.6579683 #> 8  0.2355145 0.3075094 0.3770833 0.2906562 0.3950102 0.2910547 0.3313265 #> 9  0.5057506 0.5175084 0.4868187 0.4836277 0.4079968 0.4556058 0.5351833 #> 10 0.3524994 0.4729703 0.4429590 0.4986192 0.5380306 0.3555102 0.4839446 #>            8         9        10 #> 1  0.2037195 0.4717776 0.3159640 #> 2  0.2970748 0.5345334 0.4488101 #> 3  0.3365550 0.4727628 0.3933781 #> 4  0.2877572 0.5060410 0.4859086 #> 5  0.3950188 0.4405599 0.5237733 #> 6  0.2662920 0.4489589 0.3354823 #> 7  0.3172898 0.5365195 0.4503186 #> 8  0.6178423 0.2609525 0.3460937 #> 9  0.2301708 0.5643614 0.3867413 #> 10 0.3542263 0.4165094 0.5538571 #>  #> , , lag3 #>  #>            1         2         3         4         5         6         7 #> 1  0.5799138 0.4209460 0.4479417 0.4050870 0.3430249 0.4421001 0.4832819 #> 2  0.4540738 0.5652111 0.5153620 0.5429653 0.4347620 0.4326918 0.5567684 #> 3  0.4594292 0.4972881 0.5889212 0.5172140 0.4339114 0.4443368 0.5395860 #> 4  0.4411100 0.5606963 0.5334153 0.6102559 0.4769593 0.4248772 0.5622474 #> 5  0.4008312 0.4746074 0.4807449 0.5044688 0.5559946 0.3808688 0.5031919 #> 6  0.4738386 0.4336664 0.4701668 0.4300558 0.3648146 0.5436729 0.4806871 #> 7  0.5028254 0.5621003 0.5495473 0.5539703 0.4615898 0.4674983 0.6203767 #> 8  0.2250517 0.2887159 0.3578811 0.2740132 0.3735723 0.2746843 0.3152436 #> 9  0.4779236 0.4857287 0.4446888 0.4514258 0.3616571 0.4184017 0.4934416 #> 10 0.3482105 0.4608180 0.4237510 0.4853892 0.5107999 0.3385145 0.4615135 #>            8         9        10 #> 1  0.1862887 0.4617773 0.2850035 #> 2  0.2638781 0.5182426 0.4151735 #> 3  0.3074732 0.4582625 0.3611946 #> 4  0.2598801 0.4950096 0.4567883 #> 5  0.3590319 0.4322667 0.4980028 #> 6  0.2481327 0.4381720 0.3187422 #> 7  0.2866238 0.5210327 0.4149779 #> 8  0.5916519 0.2523810 0.3254456 #> 9  0.1969184 0.5440907 0.3448757 #> 10 0.3267113 0.4196799 0.5309129 #>  #> , , lag4 #>  #>            1         2         3         4         5         6         7 #> 1  0.4871662 0.3537645 0.3772170 0.3406470 0.2675381 0.3622933 0.4110076 #> 2  0.3649226 0.4874964 0.4363152 0.4751441 0.3586146 0.3515168 0.4793089 #> 3  0.3614080 0.4111755 0.4990929 0.4339821 0.3458701 0.3524099 0.4501081 #> 4  0.3449548 0.4736772 0.4518674 0.5327921 0.3922883 0.3396821 0.4770968 #> 5  0.3194932 0.3945602 0.4066898 0.4311346 0.4797605 0.3050250 0.4262570 #> 6  0.3786949 0.3550469 0.3895700 0.3503272 0.2850954 0.4501596 0.3975973 #> 7  0.4233242 0.4909852 0.4781261 0.4881010 0.3876560 0.4006631 0.5471073 #> 8  0.1527586 0.2186730 0.3045272 0.2178326 0.3175820 0.2101775 0.2537508 #> 9  0.3889649 0.4129336 0.3763828 0.3895490 0.2894185 0.3419023 0.4211313 #> 10 0.2744266 0.3950673 0.3603605 0.4241840 0.4427611 0.2754777 0.3944033 #>            8         9        10 #> 1  0.1067157 0.3863560 0.2024785 #> 2  0.1885340 0.4389927 0.3323390 #> 3  0.2164670 0.3694079 0.2672948 #> 4  0.1785224 0.4061621 0.3645810 #> 5  0.2825680 0.3547848 0.4154092 #> 6  0.1691481 0.3481786 0.2337548 #> 7  0.2130802 0.4466353 0.3340148 #> 8  0.5401298 0.1822863 0.2688686 #> 9  0.1166133 0.4722720 0.2644108 #> 10 0.2525627 0.3526771 0.4543974 #>  #> , , lag5 #>  #>            1         2         3         4         5         6         7 #> 1  0.4330913 0.3030788 0.3321438 0.3061674 0.2482780 0.2937271 0.3582900 #> 2  0.3081704 0.4237994 0.3766704 0.4238978 0.3144696 0.2781232 0.4162966 #> 3  0.3048366 0.3490663 0.4272878 0.3874174 0.3068043 0.2768933 0.3861666 #> 4  0.2949309 0.4108927 0.3952650 0.4828030 0.3505431 0.2710156 0.4192085 #> 5  0.2654093 0.3298223 0.3429632 0.3797325 0.4314821 0.2383312 0.3676105 #> 6  0.3408071 0.3108386 0.3339168 0.3139730 0.2557339 0.3852366 0.3456309 #> 7  0.3759298 0.4382207 0.4235824 0.4477504 0.3518104 0.3347276 0.4911736 #> 8  0.1072946 0.1584509 0.2503228 0.1850105 0.2900176 0.1478667 0.2086970 #> 9  0.3321524 0.3542708 0.3306311 0.3482392 0.2593440 0.2773416 0.3604308 #> 10 0.2242630 0.3367915 0.3098422 0.3814780 0.4033455 0.2155921 0.3435308 #>            8         9        10 #> 1  0.1045848 0.3273462 0.1846739 #> 2  0.1642464 0.3712771 0.2862931 #> 3  0.1771733 0.3009515 0.2298394 #> 4  0.1493358 0.3474189 0.3198695 #> 5  0.2406652 0.2922762 0.3670997 #> 6  0.1436138 0.2971513 0.2034960 #> 7  0.1786197 0.3920672 0.3002643 #> 8  0.4907890 0.1104060 0.2381019 #> 9  0.1045624 0.4067891 0.2324636 #> 10 0.2180423 0.2916389 0.4073179 #>  #>  #> $ccfs_rs$`Regime 2` #> , , lag0 #>  #>            1         2         3         4         5         6         7 #> 1  1.0000000 0.5853028 0.4330628 0.5190522 0.4084776 0.4041021 0.5458742 #> 2  0.5853028 1.0000000 0.6114359 0.8832130 0.7192808 0.4332525 0.8296568 #> 3  0.4330628 0.6114359 1.0000000 0.6742645 0.5864727 0.5096632 0.7496550 #> 4  0.5190522 0.8832130 0.6742645 1.0000000 0.7659502 0.4514626 0.8088453 #> 5  0.4084776 0.7192808 0.5864727 0.7659502 1.0000000 0.2857775 0.6910483 #> 6  0.4041021 0.4332525 0.5096632 0.4514626 0.2857775 1.0000000 0.4934430 #> 7  0.5458742 0.8296568 0.7496550 0.8088453 0.6910483 0.4934430 1.0000000 #> 8  0.1666689 0.2985190 0.2665742 0.2877169 0.4944467 0.0908584 0.3186501 #> 9  0.7630840 0.8144029 0.5536539 0.7032705 0.5768919 0.4527752 0.7014441 #> 10 0.4114103 0.7484855 0.5134349 0.7571907 0.8731293 0.2599559 0.6675682 #>            8         9        10 #> 1  0.1666689 0.7630840 0.4114103 #> 2  0.2985190 0.8144029 0.7484855 #> 3  0.2665742 0.5536539 0.5134349 #> 4  0.2877169 0.7032705 0.7571907 #> 5  0.4944467 0.5768919 0.8731293 #> 6  0.0908584 0.4527752 0.2599559 #> 7  0.3186501 0.7014441 0.6675682 #> 8  1.0000000 0.2289443 0.4875853 #> 9  0.2289443 1.0000000 0.5880455 #> 10 0.4875853 0.5880455 1.0000000 #>  #> , , lag1 #>  #>            1         2         3         4         5          6         7 #> 1  0.7382618 0.4403624 0.3414186 0.3983701 0.3135834 0.29536190 0.4170384 #> 2  0.4452862 0.7787649 0.4714988 0.6999806 0.5882897 0.31635910 0.6564609 #> 3  0.3161961 0.4494965 0.7183008 0.5111068 0.4382627 0.33989354 0.5617002 #> 4  0.3978389 0.6785329 0.5125467 0.7703837 0.5947821 0.32017130 0.6204380 #> 5  0.3396356 0.5634524 0.4599302 0.6103279 0.7778696 0.21535160 0.5639419 #> 6  0.2862048 0.3389703 0.4030559 0.3766020 0.2262334 0.74915562 0.3701518 #> 7  0.4073492 0.6284176 0.5588535 0.6173721 0.5418128 0.36143616 0.7568379 #> 8  0.1422539 0.2360374 0.1869437 0.2192196 0.3904911 0.05372174 0.2590998 #> 9  0.5725991 0.6254728 0.4391700 0.5428372 0.4564636 0.33858680 0.5382191 #> 10 0.3302951 0.5911951 0.4192379 0.5979365 0.6869826 0.20213317 0.5442090 #>             8         9        10 #> 1  0.08521175 0.5719364 0.3016229 #> 2  0.19168818 0.6266305 0.5890607 #> 3  0.16452674 0.4107112 0.3594208 #> 4  0.15996591 0.5397330 0.5736013 #> 5  0.36186072 0.4653294 0.6697658 #> 6  0.03879077 0.3513307 0.1968197 #> 7  0.21652647 0.5374233 0.5058527 #> 8  0.77080551 0.1777193 0.3722972 #> 9  0.12821160 0.7441298 0.4431933 #> 10 0.35382223 0.4644469 0.7539928 #>  #> , , lag2 #>  #>             1         2          3          4         5          6         7 #> 1  0.42123020 0.2462282 0.19055090 0.23030754 0.1895194  0.1347442 0.2431896 #> 2  0.25672335 0.4835705 0.26966688 0.43702358 0.3957476  0.1638924 0.4172346 #> 3  0.16268590 0.2354754 0.36815442 0.27096638 0.2345092  0.1435493 0.3123924 #> 4  0.23415437 0.4080542 0.29102005 0.46466833 0.3722418  0.1553029 0.3736632 #> 5  0.21801309 0.3486840 0.25954167 0.38321050 0.5034781  0.1064876 0.3705730 #> 6  0.14412688 0.2077322 0.23633530 0.23621945 0.1373111  0.4441645 0.2015812 #> 7  0.23676681 0.3788005 0.30321532 0.35781557 0.3431904  0.1926827 0.4559834 #> 8  0.07391703 0.1103358 0.04723147 0.07930997 0.2468913 -0.0148277 0.1399340 #> 9  0.33314638 0.3715377 0.25844830 0.32514659 0.2923766  0.1774708 0.3226247 #> 10 0.20272540 0.3667834 0.25637603 0.37183777 0.4570905  0.1234082 0.3588864 #>              8          9        10 #> 1  0.019291611 0.30974508 0.1708482 #> 2  0.083831616 0.35372658 0.3730310 #> 3  0.052639758 0.20200567 0.1624065 #> 4  0.033347082 0.30255966 0.3433280 #> 5  0.196374869 0.28817376 0.4155118 #> 6  0.002106549 0.18863492 0.1129806 #> 7  0.113891794 0.29952845 0.2982359 #> 8  0.496151573 0.06393335 0.2214998 #> 9  0.041558222 0.40066176 0.2535227 #> 10 0.186712393 0.27620975 0.4532571 #>  #> , , lag3 #>  #>             1          2           3          4         5           6 #> 1  0.29743482 0.16719256  0.12592130 0.15793618 0.1335211  0.08104262 #> 2  0.17603533 0.34272956  0.16443987 0.30534517 0.2845194  0.11444472 #> 3  0.10085303 0.15528472  0.19328754 0.16303108 0.1416166  0.07414699 #> 4  0.17327434 0.29414929  0.18084474 0.32329822 0.2550553  0.10649820 #> 5  0.17561265 0.25626879  0.15120365 0.27568006 0.3506584  0.08754300 #> 6  0.10288439 0.15149294  0.14245471 0.15733071 0.1069382  0.27041292 #> 7  0.17112720 0.28914307  0.18079085 0.25423554 0.2518408  0.12844132 #> 8  0.06232819 0.06811446 -0.02713247 0.02400996 0.1613405 -0.01789870 #> 9  0.23475249 0.26751549  0.17987937 0.23422349 0.2103831  0.11426738 #> 10 0.16377884 0.25580590  0.16382335 0.25879104 0.3196466  0.13290938 #>             7            8          9         10 #> 1  0.18017154 -0.001169148 0.18707425 0.12394892 #> 2  0.29930744  0.052127275 0.21342851 0.27065621 #> 3  0.20062006  0.036639783 0.11094149 0.10028715 #> 4  0.26499094 -0.009959659 0.19300921 0.23972268 #> 5  0.26865745  0.113977101 0.20635657 0.29164245 #> 6  0.11981808 -0.017184909 0.11156401 0.08462309 #> 7  0.32182113  0.094735955 0.19708792 0.22012513 #> 8  0.06634071  0.348659793 0.03076491 0.14716059 #> 9  0.23800479  0.010123658 0.23232526 0.16963655 #> 10 0.26103090  0.099470371 0.18499167 0.29778000 #>  #> , , lag4 #>  #>             1          2           3          4          5          6 #> 1  0.25888124 0.12821130  0.08498599 0.10433630 0.09303318 0.06556162 #> 2  0.16748671 0.30545623  0.12603334 0.26171602 0.22459859 0.09568979 #> 3  0.10008329 0.16872144  0.13958230 0.16196827 0.14097447 0.04787766 #> 4  0.17754025 0.28152551  0.14486894 0.28547310 0.20541240 0.09686491 #> 5  0.19865527 0.24753018  0.11431615 0.25124225 0.26718123 0.10311270 #> 6  0.11499197 0.12671009  0.07401844 0.10623407 0.08893158 0.16986525 #> 7  0.15698471 0.27854334  0.13550235 0.22714103 0.21493482 0.09545231 #> 8  0.09316888 0.07648102 -0.02402607 0.02585186 0.12681538 0.02701813 #> 9  0.21816842 0.24481894  0.15514217 0.19734995 0.16464166 0.09260893 #> 10 0.18396836 0.22800505  0.12830942 0.22375619 0.23102121 0.14395478 #>             7            8          9         10 #> 1  0.13261375 -0.013940819 0.13423906 0.08449977 #> 2  0.24432783  0.052873965 0.17616697 0.22830847 #> 3  0.17434787  0.069937994 0.09208672 0.12472320 #> 4  0.23119679 -0.008131650 0.17868050 0.20108082 #> 5  0.23433360  0.095845567 0.20259808 0.24254026 #> 6  0.07797909 -0.024776955 0.07861430 0.06316409 #> 7  0.26540259  0.105027103 0.16979772 0.19581348 #> 8  0.05623704  0.280460072 0.04074609 0.12594411 #> 9  0.21407894  0.004334025 0.18294103 0.13237258 #> 10 0.22122496  0.071544404 0.17272680 0.22470756 #>  #> , , lag5 #>  #>             1          2           3          4          5          6 #> 1  0.20418022 0.07979408  0.04149909 0.05261401 0.03162674 0.04630108 #> 2  0.17461642 0.26710297  0.08836786 0.22320133 0.17203605 0.07321777 #> 3  0.08189927 0.14433559  0.10202894 0.13017220 0.10152914 0.02466407 #> 4  0.17752171 0.25569651  0.10751494 0.24924445 0.16525702 0.08469896 #> 5  0.19113318 0.21411814  0.06281766 0.21023345 0.19180444 0.08786348 #> 6  0.09106808 0.10264532  0.04944527 0.07356021 0.05536859 0.12162516 #> 7  0.14388989 0.24344912  0.09750976 0.19158282 0.16814981 0.05071938 #> 8  0.09228771 0.06413853 -0.02837809 0.01950539 0.09679899 0.03076919 #> 9  0.19672047 0.21361679  0.10536872 0.15220752 0.10660453 0.06037580 #> 10 0.17822643 0.19498706  0.06723777 0.18152491 0.15243870 0.12224594 #>             7           8          9         10 #> 1  0.08411575 -0.07693899 0.08347789 0.01243631 #> 2  0.20316596  0.01822705 0.16904760 0.18053495 #> 3  0.13746587  0.05419342 0.07578353 0.09676766 #> 4  0.19517269 -0.02536688 0.17986662 0.16479339 #> 5  0.17258954  0.07684657 0.19045274 0.18869918 #> 6  0.05686940 -0.04951116 0.05972107 0.04890647 #> 7  0.21033715  0.07523937 0.15593798 0.15382851 #> 8  0.03342435  0.24211961 0.05166422 0.09373749 #> 9  0.18534021 -0.02769118 0.16080968 0.08183007 #> 10 0.15820097  0.04991924 0.16687829 0.16240142 #>  #>  #>  print(sim2_mcgf, \"sds\") #> $sds #>         1         2         3         4         5         6         7         8  #> 0.9199169 0.9718708 0.9578177 1.0106254 0.9892896 0.9313065 0.9840550 1.0140936  #>         9        10  #> 0.9373470 0.9417193  #>  #> $sds_rs #> $sds_rs$`Regime 1` #>         1         2         3         4         5         6         7         8  #> 0.9372674 0.9505589 0.9772365 1.0009960 0.9598231 0.9064875 1.0216556 0.9744436  #>         9        10  #> 0.9150341 0.9175002  #>  #> $sds_rs$`Regime 2` #>         1         2         3         4         5         6         7         8  #> 0.8616473 0.9871250 0.9277424 1.0078707 0.9900081 0.9431707 0.9187679 1.0449593  #>         9        10  #> 0.9381449 0.9527872  #>  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic functions for calculating joint covariance/correlation matrix for mcgf objects — ccov","title":"Generic functions for calculating joint covariance/correlation matrix for mcgf objects — ccov","text":"Generic functions calculating joint covariance/correlation matrix mcgf objects","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic functions for calculating joint covariance/correlation matrix for mcgf objects — ccov","text":"","code":"ccov(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic functions for calculating joint covariance/correlation matrix for mcgf objects — ccov","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic functions for calculating joint covariance/correlation matrix for mcgf objects — ccov","text":"Joint correlation/covariance matrix.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic functions for calculating joint covariance/correlation matrix for mcgf objects — ccov","text":"Refer ccov.mcgf() ccov.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance/correlation for joint distribution of an mcgf object — ccov.mcgf","title":"Covariance/correlation for joint distribution of an mcgf object — ccov.mcgf","text":"Covariance/correlation joint distribution mcgf object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance/correlation for joint distribution of an mcgf object — ccov.mcgf","text":"","code":"# S3 method for mcgf ccov(x, model = c(\"all\", \"base\", \"empirical\"), cor = FALSE, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance/correlation for joint distribution of an mcgf object — ccov.mcgf","text":"x mcgf object. model model use. One , base, empirical. cor Logical; TRUE, correlation outputted. ... Additional arguments. use.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance/correlation for joint distribution of an mcgf object — ccov.mcgf","text":"Joint covariance/correlation matrix.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance/correlation for joint distribution of an mcgf object — ccov.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a separable model and store it to 'sim1_mcgf' fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep)  ccov(sim1_mcgf, model = \"base\") #>              1:t+0      2:t+0      3:t+0      4:t+0      5:t+0      6:t+0 #> 1:t+0   0.97269380 0.85890916 0.78778712 0.82315831 0.75041561 0.80835281 #> 2:t+0   0.85890916 0.95033925 0.82344690 0.90844760 0.83029569 0.76617397 #> 3:t+0   0.78778712 0.82344690 0.95462554 0.83500450 0.79293293 0.81877354 #> 4:t+0   0.82315831 0.90844760 0.83500450 0.94060499 0.85550863 0.75409404 #> 5:t+0   0.75041561 0.83029569 0.79293293 0.85550863 0.92155023 0.69410189 #> 6:t+0   0.80835281 0.76617397 0.81877354 0.75409404 0.69410189 0.99883141 #> 7:t+0   0.84048909 0.88667461 0.86132611 0.88249374 0.80814380 0.79522277 #> 8:t+0   0.62124582 0.67986724 0.63455595 0.69129689 0.73611760 0.55529521 #> 9:t+0   0.91277334 0.91129976 0.80240066 0.87115469 0.79946063 0.77888455 #> 10:t+0  0.77584953 0.85459351 0.78273290 0.86905736 0.89271719 0.69677919 #> 1:lag1  0.59765440 0.52774146 0.48404178 0.50577498 0.46107953 0.49667801 #> 2:lag1  0.52774146 0.58391905 0.50595230 0.55817947 0.51016042 0.47076197 #> 3:lag1  0.48404178 0.50595230 0.58655268 0.51305367 0.48720354 0.50308084 #> 4:lag1  0.50577498 0.55817947 0.51305367 0.57793801 0.52565207 0.46333967 #> 5:lag1  0.46107953 0.51016042 0.48720354 0.52565207 0.56623015 0.42647856 #> 6:lag1  0.49667801 0.47076197 0.50308084 0.46333967 0.42647856 0.61371419 #> 7:lag1  0.51642358 0.54480144 0.52922651 0.54223258 0.49654959 0.48861049 #> 8:lag1  0.38171345 0.41773233 0.38989162 0.42475508 0.45229437 0.34119127 #> 9:lag1  0.56083734 0.55993193 0.49302082 0.53526551 0.49121437 0.47857176 #> 10:lag1 0.47670694 0.52508979 0.48093631 0.53397684 0.54851420 0.42812358 #> 1:lag2  0.35540229 0.31382773 0.28784120 0.30076510 0.27418642 0.29535548 #> 2:lag2  0.31382773 0.34723440 0.30087055 0.33192806 0.30337296 0.27994420 #> 3:lag2  0.28784120 0.30087055 0.34880052 0.30509346 0.28972138 0.29916300 #> 4:lag2  0.30076510 0.33192806 0.30509346 0.34367771 0.31258525 0.27553044 #> 5:lag2  0.27418642 0.30337296 0.28972138 0.31258525 0.33671549 0.25361054 #> 6:lag2  0.29535548 0.27994420 0.29916300 0.27553044 0.25361054 0.36495244 #> 7:lag2  0.30709742 0.32397265 0.31471083 0.32244505 0.29527911 0.29055803 #> 8:lag2  0.22699044 0.24840950 0.23185368 0.25258566 0.26896222 0.20289344 #> 9:lag2  0.33350859 0.33297018 0.29318069 0.31830200 0.29210646 0.28458839 #> 10:lag2 0.28347945 0.31225088 0.28599449 0.31753567 0.32618049 0.25458878 #> 1:lag3  0.23434441 0.20693106 0.18979612 0.19831785 0.18079246 0.19475087 #> 2:lag3  0.20693106 0.22895868 0.19838738 0.21886601 0.20003741 0.18458901 #> 3:lag3  0.18979612 0.19838738 0.22999135 0.20117188 0.19103586 0.19726146 #> 4:lag3  0.19831785 0.21886601 0.20117188 0.22661347 0.20611179 0.18167868 #> 5:lag3  0.18079246 0.20003741 0.19103586 0.20611179 0.22202274 0.16722518 #> 6:lag3  0.19475087 0.18458901 0.19726146 0.18167868 0.16722518 0.24064156 #> 7:lag3  0.20249324 0.21362040 0.20751336 0.21261313 0.19470051 0.19158754 #> 8:lag3  0.14967247 0.16379572 0.15287919 0.16654939 0.17734774 0.13378344 #> 9:lag3  0.21990818 0.21955316 0.19331686 0.20988129 0.19260854 0.18765128 #> 10:lag3 0.18692008 0.20589132 0.18857844 0.20937600 0.21507619 0.16787020 #> 1:lag4  0.16749113 0.14789821 0.13565148 0.14174216 0.12921637 0.13919275 #> 2:lag4  0.14789821 0.16364184 0.14179185 0.15642838 0.14297117 0.13192985 #> 3:lag4  0.13565148 0.14179185 0.16437990 0.14378199 0.13653756 0.14098713 #> 4:lag4  0.14174216 0.15642838 0.14378199 0.16196566 0.14731266 0.12984977 #> 5:lag4  0.12921637 0.14297117 0.13653756 0.14731266 0.15868457 0.11951954 #> 6:lag4  0.13919275 0.13192985 0.14098713 0.12984977 0.11951954 0.17199185 #> 7:lag4  0.14472640 0.15267923 0.14831439 0.15195931 0.13915676 0.13693185 #> 8:lag4  0.10697423 0.11706843 0.10926614 0.11903654 0.12675435 0.09561799 #> 9:lag4  0.15717325 0.15691951 0.13816784 0.15000680 0.13766158 0.13411853 #> 10:lag4 0.13359591 0.14715508 0.13478118 0.14964566 0.15371972 0.11998055 #> 1:lag5  0.12678600 0.11195471 0.10268429 0.10729476 0.09781310 0.10536493 #> 2:lag5  0.11195471 0.12387219 0.10733238 0.11841181 0.10822508 0.09986712 #> 3:lag5  0.10268429 0.10733238 0.12443089 0.10883886 0.10335503 0.10672323 #> 4:lag5  0.10729476 0.11841181 0.10883886 0.12260338 0.11151147 0.09829256 #> 5:lag5  0.09781310 0.10822508 0.10335503 0.11151147 0.12011968 0.09047287 #> 6:lag5  0.10536493 0.09986712 0.10672323 0.09829256 0.09047287 0.13019291 #> 7:lag5  0.10955375 0.11557381 0.11226975 0.11502885 0.10533769 0.10365350 #> 8:lag5  0.08097643 0.08861745 0.08271134 0.09010725 0.09594942 0.07238008 #> 9:lag5  0.11897565 0.11878358 0.10458910 0.11355086 0.10420588 0.10152389 #> 10:lag5 0.10112829 0.11139219 0.10202550 0.11327748 0.11636143 0.09082185 #>              7:t+0      8:t+0      9:t+0     10:t+0    1:lag1    2:lag1 #> 1:t+0   0.84048909 0.62124582 0.91277334 0.77584953 0.5976544 0.5277415 #> 2:t+0   0.88667461 0.67986724 0.91129976 0.85459351 0.5277415 0.5839190 #> 3:t+0   0.86132611 0.63455595 0.80240066 0.78273290 0.4840418 0.5059523 #> 4:t+0   0.88249374 0.69129689 0.87115469 0.86905736 0.5057750 0.5581795 #> 5:t+0   0.80814380 0.73611760 0.79946063 0.89271719 0.4610795 0.5101604 #> 6:t+0   0.79522277 0.55529521 0.77888455 0.69677919 0.4966780 0.4707620 #> 7:t+0   0.93063100 0.64911371 0.86660850 0.81541380 0.5164236 0.5448014 #> 8:t+0   0.64911371 0.89790679 0.66662338 0.75638830 0.3817134 0.4177323 #> 9:t+0   0.86660850 0.66662338 0.97945166 0.83096417 0.5608373 0.5599319 #> 10:t+0  0.81541380 0.75638830 0.83096417 0.95178382 0.4767069 0.5250898 #> 1:lag1  0.51642358 0.38171345 0.56083734 0.47670694 0.9726938 0.8589092 #> 2:lag1  0.54480144 0.41773233 0.55993193 0.52508979 0.8589092 0.9503392 #> 3:lag1  0.52922651 0.38989162 0.49302082 0.48093631 0.7877871 0.8234469 #> 4:lag1  0.54223258 0.42475508 0.53526551 0.53397684 0.8231583 0.9084476 #> 5:lag1  0.49654959 0.45229437 0.49121437 0.54851420 0.7504156 0.8302957 #> 6:lag1  0.48861049 0.34119127 0.47857176 0.42812358 0.8083528 0.7661740 #> 7:lag1  0.57180967 0.39883637 0.53247218 0.50101651 0.8404891 0.8866746 #> 8:lag1  0.39883637 0.55170286 0.40959488 0.46474934 0.6212458 0.6798672 #> 9:lag1  0.53247218 0.40959488 0.60180665 0.51057115 0.9127733 0.9112998 #> 10:lag1 0.50101651 0.46474934 0.51057115 0.58480664 0.7758495 0.8545935 #> 1:lag2  0.30709742 0.22699044 0.33350859 0.28347945 0.5976544 0.5277415 #> 2:lag2  0.32397265 0.24840950 0.33297018 0.31225088 0.5277415 0.5839190 #> 3:lag2  0.31471083 0.23185368 0.29318069 0.28599449 0.4840418 0.5059523 #> 4:lag2  0.32244505 0.25258566 0.31830200 0.31753567 0.5057750 0.5581795 #> 5:lag2  0.29527911 0.26896222 0.29210646 0.32618049 0.4610795 0.5101604 #> 6:lag2  0.29055803 0.20289344 0.28458839 0.25458878 0.4966780 0.4707620 #> 7:lag2  0.34003341 0.23717279 0.31664091 0.29793542 0.5164236 0.5448014 #> 8:lag2  0.23717279 0.32807666 0.24357046 0.27636872 0.3817134 0.4177323 #> 9:lag2  0.31664091 0.24357046 0.35787148 0.30361720 0.5608373 0.5599319 #> 10:lag2 0.29793542 0.27636872 0.30361720 0.34776222 0.4767069 0.5250898 #> 1:lag3  0.20249324 0.14967247 0.21990818 0.18692008 0.3554023 0.3138277 #> 2:lag3  0.21362040 0.16379572 0.21955316 0.20589132 0.3138277 0.3472344 #> 3:lag3  0.20751336 0.15287919 0.19331686 0.18857844 0.2878412 0.3008706 #> 4:lag3  0.21261313 0.16654939 0.20988129 0.20937600 0.3007651 0.3319281 #> 5:lag3  0.19470051 0.17734774 0.19260854 0.21507619 0.2741864 0.3033730 #> 6:lag3  0.19158754 0.13378344 0.18765128 0.16787020 0.2953555 0.2799442 #> 7:lag3  0.22421051 0.15638649 0.20878601 0.19645202 0.3070974 0.3239727 #> 8:lag3  0.15638649 0.21632649 0.16060497 0.18223142 0.2269904 0.2484095 #> 9:lag3  0.20878601 0.16060497 0.23597253 0.20019847 0.3335086 0.3329702 #> 10:lag3 0.19645202 0.18223142 0.20019847 0.22930671 0.2834794 0.3122509 #> 1:lag4  0.14472640 0.10697423 0.15717325 0.13359591 0.2343444 0.2069311 #> 2:lag4  0.15267923 0.11706843 0.15691951 0.14715508 0.2069311 0.2289587 #> 3:lag4  0.14831439 0.10926614 0.13816784 0.13478118 0.1897961 0.1983874 #> 4:lag4  0.15195931 0.11903654 0.15000680 0.14964566 0.1983179 0.2188660 #> 5:lag4  0.13915676 0.12675435 0.13766158 0.15371972 0.1807925 0.2000374 #> 6:lag4  0.13693185 0.09561799 0.13411853 0.11998055 0.1947509 0.1845890 #> 7:lag4  0.16024821 0.11177288 0.14922398 0.14040861 0.2024932 0.2136204 #> 8:lag4  0.11177288 0.15461333 0.11478793 0.13024483 0.1496725 0.1637957 #> 9:lag4  0.14922398 0.11478793 0.16865479 0.14308627 0.2199082 0.2195532 #> 10:lag4 0.14040861 0.13024483 0.14308627 0.16389058 0.1869201 0.2058913 #> 1:lag5  0.10955375 0.08097643 0.11897565 0.10112829 0.1674911 0.1478982 #> 2:lag5  0.11557381 0.08861745 0.11878358 0.11139219 0.1478982 0.1636418 #> 3:lag5  0.11226975 0.08271134 0.10458910 0.10202550 0.1356515 0.1417919 #> 4:lag5  0.11502885 0.09010725 0.11355086 0.11327748 0.1417422 0.1564284 #> 5:lag5  0.10533769 0.09594942 0.10420588 0.11636143 0.1292164 0.1429712 #> 6:lag5  0.10365350 0.07238008 0.10152389 0.09082185 0.1391928 0.1319298 #> 7:lag5  0.12130331 0.08460888 0.11295829 0.10628530 0.1447264 0.1526792 #> 8:lag5  0.08460888 0.11703787 0.08689118 0.09859161 0.1069742 0.1170684 #> 9:lag5  0.11295829 0.08689118 0.12766685 0.10831222 0.1571732 0.1569195 #> 10:lag5 0.10628530 0.09859161 0.10831222 0.12406048 0.1335959 0.1471551 #>            3:lag1    4:lag1    5:lag1     6:lag1    7:lag1     8:lag1    9:lag1 #> 1:t+0   0.4840418 0.5057750 0.4610795 0.49667801 0.5164236 0.38171345 0.5608373 #> 2:t+0   0.5059523 0.5581795 0.5101604 0.47076197 0.5448014 0.41773233 0.5599319 #> 3:t+0   0.5865527 0.5130537 0.4872035 0.50308084 0.5292265 0.38989162 0.4930208 #> 4:t+0   0.5130537 0.5779380 0.5256521 0.46333967 0.5422326 0.42475508 0.5352655 #> 5:t+0   0.4872035 0.5256521 0.5662302 0.42647856 0.4965496 0.45229437 0.4912144 #> 6:t+0   0.5030808 0.4633397 0.4264786 0.61371419 0.4886105 0.34119127 0.4785718 #> 7:t+0   0.5292265 0.5422326 0.4965496 0.48861049 0.5718097 0.39883637 0.5324722 #> 8:t+0   0.3898916 0.4247551 0.4522944 0.34119127 0.3988364 0.55170286 0.4095949 #> 9:t+0   0.4930208 0.5352655 0.4912144 0.47857176 0.5324722 0.40959488 0.6018067 #> 10:t+0  0.4809363 0.5339768 0.5485142 0.42812358 0.5010165 0.46474934 0.5105712 #> 1:lag1  0.7877871 0.8231583 0.7504156 0.80835281 0.8404891 0.62124582 0.9127733 #> 2:lag1  0.8234469 0.9084476 0.8302957 0.76617397 0.8866746 0.67986724 0.9112998 #> 3:lag1  0.9546255 0.8350045 0.7929329 0.81877354 0.8613261 0.63455595 0.8024007 #> 4:lag1  0.8350045 0.9406050 0.8555086 0.75409404 0.8824937 0.69129689 0.8711547 #> 5:lag1  0.7929329 0.8555086 0.9215502 0.69410189 0.8081438 0.73611760 0.7994606 #> 6:lag1  0.8187735 0.7540940 0.6941019 0.99883141 0.7952228 0.55529521 0.7788846 #> 7:lag1  0.8613261 0.8824937 0.8081438 0.79522277 0.9306310 0.64911371 0.8666085 #> 8:lag1  0.6345559 0.6912969 0.7361176 0.55529521 0.6491137 0.89790679 0.6666234 #> 9:lag1  0.8024007 0.8711547 0.7994606 0.77888455 0.8666085 0.66662338 0.9794517 #> 10:lag1 0.7827329 0.8690574 0.8927172 0.69677919 0.8154138 0.75638830 0.8309642 #> 1:lag2  0.4840418 0.5057750 0.4610795 0.49667801 0.5164236 0.38171345 0.5608373 #> 2:lag2  0.5059523 0.5581795 0.5101604 0.47076197 0.5448014 0.41773233 0.5599319 #> 3:lag2  0.5865527 0.5130537 0.4872035 0.50308084 0.5292265 0.38989162 0.4930208 #> 4:lag2  0.5130537 0.5779380 0.5256521 0.46333967 0.5422326 0.42475508 0.5352655 #> 5:lag2  0.4872035 0.5256521 0.5662302 0.42647856 0.4965496 0.45229437 0.4912144 #> 6:lag2  0.5030808 0.4633397 0.4264786 0.61371419 0.4886105 0.34119127 0.4785718 #> 7:lag2  0.5292265 0.5422326 0.4965496 0.48861049 0.5718097 0.39883637 0.5324722 #> 8:lag2  0.3898916 0.4247551 0.4522944 0.34119127 0.3988364 0.55170286 0.4095949 #> 9:lag2  0.4930208 0.5352655 0.4912144 0.47857176 0.5324722 0.40959488 0.6018067 #> 10:lag2 0.4809363 0.5339768 0.5485142 0.42812358 0.5010165 0.46474934 0.5105712 #> 1:lag3  0.2878412 0.3007651 0.2741864 0.29535548 0.3070974 0.22699044 0.3335086 #> 2:lag3  0.3008706 0.3319281 0.3033730 0.27994420 0.3239727 0.24840950 0.3329702 #> 3:lag3  0.3488005 0.3050935 0.2897214 0.29916300 0.3147108 0.23185368 0.2931807 #> 4:lag3  0.3050935 0.3436777 0.3125852 0.27553044 0.3224450 0.25258566 0.3183020 #> 5:lag3  0.2897214 0.3125852 0.3367155 0.25361054 0.2952791 0.26896222 0.2921065 #> 6:lag3  0.2991630 0.2755304 0.2536105 0.36495244 0.2905580 0.20289344 0.2845884 #> 7:lag3  0.3147108 0.3224450 0.2952791 0.29055803 0.3400334 0.23717279 0.3166409 #> 8:lag3  0.2318537 0.2525857 0.2689622 0.20289344 0.2371728 0.32807666 0.2435705 #> 9:lag3  0.2931807 0.3183020 0.2921065 0.28458839 0.3166409 0.24357046 0.3578715 #> 10:lag3 0.2859945 0.3175357 0.3261805 0.25458878 0.2979354 0.27636872 0.3036172 #> 1:lag4  0.1897961 0.1983179 0.1807925 0.19475087 0.2024932 0.14967247 0.2199082 #> 2:lag4  0.1983874 0.2188660 0.2000374 0.18458901 0.2136204 0.16379572 0.2195532 #> 3:lag4  0.2299913 0.2011719 0.1910359 0.19726146 0.2075134 0.15287919 0.1933169 #> 4:lag4  0.2011719 0.2266135 0.2061118 0.18167868 0.2126131 0.16654939 0.2098813 #> 5:lag4  0.1910359 0.2061118 0.2220227 0.16722518 0.1947005 0.17734774 0.1926085 #> 6:lag4  0.1972615 0.1816787 0.1672252 0.24064156 0.1915875 0.13378344 0.1876513 #> 7:lag4  0.2075134 0.2126131 0.1947005 0.19158754 0.2242105 0.15638649 0.2087860 #> 8:lag4  0.1528792 0.1665494 0.1773477 0.13378344 0.1563865 0.21632649 0.1606050 #> 9:lag4  0.1933169 0.2098813 0.1926085 0.18765128 0.2087860 0.16060497 0.2359725 #> 10:lag4 0.1885784 0.2093760 0.2150762 0.16787020 0.1964520 0.18223142 0.2001985 #> 1:lag5  0.1356515 0.1417422 0.1292164 0.13919275 0.1447264 0.10697423 0.1571732 #> 2:lag5  0.1417919 0.1564284 0.1429712 0.13192985 0.1526792 0.11706843 0.1569195 #> 3:lag5  0.1643799 0.1437820 0.1365376 0.14098713 0.1483144 0.10926614 0.1381678 #> 4:lag5  0.1437820 0.1619657 0.1473127 0.12984977 0.1519593 0.11903654 0.1500068 #> 5:lag5  0.1365376 0.1473127 0.1586846 0.11951954 0.1391568 0.12675435 0.1376616 #> 6:lag5  0.1409871 0.1298498 0.1195195 0.17199185 0.1369319 0.09561799 0.1341185 #> 7:lag5  0.1483144 0.1519593 0.1391568 0.13693185 0.1602482 0.11177288 0.1492240 #> 8:lag5  0.1092661 0.1190365 0.1267544 0.09561799 0.1117729 0.15461333 0.1147879 #> 9:lag5  0.1381678 0.1500068 0.1376616 0.13411853 0.1492240 0.11478793 0.1686548 #> 10:lag5 0.1347812 0.1496457 0.1537197 0.11998055 0.1404086 0.13024483 0.1430863 #>           10:lag1    1:lag2    2:lag2    3:lag2    4:lag2    5:lag2    6:lag2 #> 1:t+0   0.4767069 0.3554023 0.3138277 0.2878412 0.3007651 0.2741864 0.2953555 #> 2:t+0   0.5250898 0.3138277 0.3472344 0.3008706 0.3319281 0.3033730 0.2799442 #> 3:t+0   0.4809363 0.2878412 0.3008706 0.3488005 0.3050935 0.2897214 0.2991630 #> 4:t+0   0.5339768 0.3007651 0.3319281 0.3050935 0.3436777 0.3125852 0.2755304 #> 5:t+0   0.5485142 0.2741864 0.3033730 0.2897214 0.3125852 0.3367155 0.2536105 #> 6:t+0   0.4281236 0.2953555 0.2799442 0.2991630 0.2755304 0.2536105 0.3649524 #> 7:t+0   0.5010165 0.3070974 0.3239727 0.3147108 0.3224450 0.2952791 0.2905580 #> 8:t+0   0.4647493 0.2269904 0.2484095 0.2318537 0.2525857 0.2689622 0.2028934 #> 9:t+0   0.5105712 0.3335086 0.3329702 0.2931807 0.3183020 0.2921065 0.2845884 #> 10:t+0  0.5848066 0.2834794 0.3122509 0.2859945 0.3175357 0.3261805 0.2545888 #> 1:lag1  0.7758495 0.5976544 0.5277415 0.4840418 0.5057750 0.4610795 0.4966780 #> 2:lag1  0.8545935 0.5277415 0.5839190 0.5059523 0.5581795 0.5101604 0.4707620 #> 3:lag1  0.7827329 0.4840418 0.5059523 0.5865527 0.5130537 0.4872035 0.5030808 #> 4:lag1  0.8690574 0.5057750 0.5581795 0.5130537 0.5779380 0.5256521 0.4633397 #> 5:lag1  0.8927172 0.4610795 0.5101604 0.4872035 0.5256521 0.5662302 0.4264786 #> 6:lag1  0.6967792 0.4966780 0.4707620 0.5030808 0.4633397 0.4264786 0.6137142 #> 7:lag1  0.8154138 0.5164236 0.5448014 0.5292265 0.5422326 0.4965496 0.4886105 #> 8:lag1  0.7563883 0.3817134 0.4177323 0.3898916 0.4247551 0.4522944 0.3411913 #> 9:lag1  0.8309642 0.5608373 0.5599319 0.4930208 0.5352655 0.4912144 0.4785718 #> 10:lag1 0.9517838 0.4767069 0.5250898 0.4809363 0.5339768 0.5485142 0.4281236 #> 1:lag2  0.4767069 0.9726938 0.8589092 0.7877871 0.8231583 0.7504156 0.8083528 #> 2:lag2  0.5250898 0.8589092 0.9503392 0.8234469 0.9084476 0.8302957 0.7661740 #> 3:lag2  0.4809363 0.7877871 0.8234469 0.9546255 0.8350045 0.7929329 0.8187735 #> 4:lag2  0.5339768 0.8231583 0.9084476 0.8350045 0.9406050 0.8555086 0.7540940 #> 5:lag2  0.5485142 0.7504156 0.8302957 0.7929329 0.8555086 0.9215502 0.6941019 #> 6:lag2  0.4281236 0.8083528 0.7661740 0.8187735 0.7540940 0.6941019 0.9988314 #> 7:lag2  0.5010165 0.8404891 0.8866746 0.8613261 0.8824937 0.8081438 0.7952228 #> 8:lag2  0.4647493 0.6212458 0.6798672 0.6345559 0.6912969 0.7361176 0.5552952 #> 9:lag2  0.5105712 0.9127733 0.9112998 0.8024007 0.8711547 0.7994606 0.7788846 #> 10:lag2 0.5848066 0.7758495 0.8545935 0.7827329 0.8690574 0.8927172 0.6967792 #> 1:lag3  0.2834794 0.5976544 0.5277415 0.4840418 0.5057750 0.4610795 0.4966780 #> 2:lag3  0.3122509 0.5277415 0.5839190 0.5059523 0.5581795 0.5101604 0.4707620 #> 3:lag3  0.2859945 0.4840418 0.5059523 0.5865527 0.5130537 0.4872035 0.5030808 #> 4:lag3  0.3175357 0.5057750 0.5581795 0.5130537 0.5779380 0.5256521 0.4633397 #> 5:lag3  0.3261805 0.4610795 0.5101604 0.4872035 0.5256521 0.5662302 0.4264786 #> 6:lag3  0.2545888 0.4966780 0.4707620 0.5030808 0.4633397 0.4264786 0.6137142 #> 7:lag3  0.2979354 0.5164236 0.5448014 0.5292265 0.5422326 0.4965496 0.4886105 #> 8:lag3  0.2763687 0.3817134 0.4177323 0.3898916 0.4247551 0.4522944 0.3411913 #> 9:lag3  0.3036172 0.5608373 0.5599319 0.4930208 0.5352655 0.4912144 0.4785718 #> 10:lag3 0.3477622 0.4767069 0.5250898 0.4809363 0.5339768 0.5485142 0.4281236 #> 1:lag4  0.1869201 0.3554023 0.3138277 0.2878412 0.3007651 0.2741864 0.2953555 #> 2:lag4  0.2058913 0.3138277 0.3472344 0.3008706 0.3319281 0.3033730 0.2799442 #> 3:lag4  0.1885784 0.2878412 0.3008706 0.3488005 0.3050935 0.2897214 0.2991630 #> 4:lag4  0.2093760 0.3007651 0.3319281 0.3050935 0.3436777 0.3125852 0.2755304 #> 5:lag4  0.2150762 0.2741864 0.3033730 0.2897214 0.3125852 0.3367155 0.2536105 #> 6:lag4  0.1678702 0.2953555 0.2799442 0.2991630 0.2755304 0.2536105 0.3649524 #> 7:lag4  0.1964520 0.3070974 0.3239727 0.3147108 0.3224450 0.2952791 0.2905580 #> 8:lag4  0.1822314 0.2269904 0.2484095 0.2318537 0.2525857 0.2689622 0.2028934 #> 9:lag4  0.2001985 0.3335086 0.3329702 0.2931807 0.3183020 0.2921065 0.2845884 #> 10:lag4 0.2293067 0.2834794 0.3122509 0.2859945 0.3175357 0.3261805 0.2545888 #> 1:lag5  0.1335959 0.2343444 0.2069311 0.1897961 0.1983179 0.1807925 0.1947509 #> 2:lag5  0.1471551 0.2069311 0.2289587 0.1983874 0.2188660 0.2000374 0.1845890 #> 3:lag5  0.1347812 0.1897961 0.1983874 0.2299913 0.2011719 0.1910359 0.1972615 #> 4:lag5  0.1496457 0.1983179 0.2188660 0.2011719 0.2266135 0.2061118 0.1816787 #> 5:lag5  0.1537197 0.1807925 0.2000374 0.1910359 0.2061118 0.2220227 0.1672252 #> 6:lag5  0.1199805 0.1947509 0.1845890 0.1972615 0.1816787 0.1672252 0.2406416 #> 7:lag5  0.1404086 0.2024932 0.2136204 0.2075134 0.2126131 0.1947005 0.1915875 #> 8:lag5  0.1302448 0.1496725 0.1637957 0.1528792 0.1665494 0.1773477 0.1337834 #> 9:lag5  0.1430863 0.2199082 0.2195532 0.1933169 0.2098813 0.1926085 0.1876513 #> 10:lag5 0.1638906 0.1869201 0.2058913 0.1885784 0.2093760 0.2150762 0.1678702 #>            7:lag2    8:lag2    9:lag2   10:lag2    1:lag3    2:lag3    3:lag3 #> 1:t+0   0.3070974 0.2269904 0.3335086 0.2834794 0.2343444 0.2069311 0.1897961 #> 2:t+0   0.3239727 0.2484095 0.3329702 0.3122509 0.2069311 0.2289587 0.1983874 #> 3:t+0   0.3147108 0.2318537 0.2931807 0.2859945 0.1897961 0.1983874 0.2299913 #> 4:t+0   0.3224450 0.2525857 0.3183020 0.3175357 0.1983179 0.2188660 0.2011719 #> 5:t+0   0.2952791 0.2689622 0.2921065 0.3261805 0.1807925 0.2000374 0.1910359 #> 6:t+0   0.2905580 0.2028934 0.2845884 0.2545888 0.1947509 0.1845890 0.1972615 #> 7:t+0   0.3400334 0.2371728 0.3166409 0.2979354 0.2024932 0.2136204 0.2075134 #> 8:t+0   0.2371728 0.3280767 0.2435705 0.2763687 0.1496725 0.1637957 0.1528792 #> 9:t+0   0.3166409 0.2435705 0.3578715 0.3036172 0.2199082 0.2195532 0.1933169 #> 10:t+0  0.2979354 0.2763687 0.3036172 0.3477622 0.1869201 0.2058913 0.1885784 #> 1:lag1  0.5164236 0.3817134 0.5608373 0.4767069 0.3554023 0.3138277 0.2878412 #> 2:lag1  0.5448014 0.4177323 0.5599319 0.5250898 0.3138277 0.3472344 0.3008706 #> 3:lag1  0.5292265 0.3898916 0.4930208 0.4809363 0.2878412 0.3008706 0.3488005 #> 4:lag1  0.5422326 0.4247551 0.5352655 0.5339768 0.3007651 0.3319281 0.3050935 #> 5:lag1  0.4965496 0.4522944 0.4912144 0.5485142 0.2741864 0.3033730 0.2897214 #> 6:lag1  0.4886105 0.3411913 0.4785718 0.4281236 0.2953555 0.2799442 0.2991630 #> 7:lag1  0.5718097 0.3988364 0.5324722 0.5010165 0.3070974 0.3239727 0.3147108 #> 8:lag1  0.3988364 0.5517029 0.4095949 0.4647493 0.2269904 0.2484095 0.2318537 #> 9:lag1  0.5324722 0.4095949 0.6018067 0.5105712 0.3335086 0.3329702 0.2931807 #> 10:lag1 0.5010165 0.4647493 0.5105712 0.5848066 0.2834794 0.3122509 0.2859945 #> 1:lag2  0.8404891 0.6212458 0.9127733 0.7758495 0.5976544 0.5277415 0.4840418 #> 2:lag2  0.8866746 0.6798672 0.9112998 0.8545935 0.5277415 0.5839190 0.5059523 #> 3:lag2  0.8613261 0.6345559 0.8024007 0.7827329 0.4840418 0.5059523 0.5865527 #> 4:lag2  0.8824937 0.6912969 0.8711547 0.8690574 0.5057750 0.5581795 0.5130537 #> 5:lag2  0.8081438 0.7361176 0.7994606 0.8927172 0.4610795 0.5101604 0.4872035 #> 6:lag2  0.7952228 0.5552952 0.7788846 0.6967792 0.4966780 0.4707620 0.5030808 #> 7:lag2  0.9306310 0.6491137 0.8666085 0.8154138 0.5164236 0.5448014 0.5292265 #> 8:lag2  0.6491137 0.8979068 0.6666234 0.7563883 0.3817134 0.4177323 0.3898916 #> 9:lag2  0.8666085 0.6666234 0.9794517 0.8309642 0.5608373 0.5599319 0.4930208 #> 10:lag2 0.8154138 0.7563883 0.8309642 0.9517838 0.4767069 0.5250898 0.4809363 #> 1:lag3  0.5164236 0.3817134 0.5608373 0.4767069 0.9726938 0.8589092 0.7877871 #> 2:lag3  0.5448014 0.4177323 0.5599319 0.5250898 0.8589092 0.9503392 0.8234469 #> 3:lag3  0.5292265 0.3898916 0.4930208 0.4809363 0.7877871 0.8234469 0.9546255 #> 4:lag3  0.5422326 0.4247551 0.5352655 0.5339768 0.8231583 0.9084476 0.8350045 #> 5:lag3  0.4965496 0.4522944 0.4912144 0.5485142 0.7504156 0.8302957 0.7929329 #> 6:lag3  0.4886105 0.3411913 0.4785718 0.4281236 0.8083528 0.7661740 0.8187735 #> 7:lag3  0.5718097 0.3988364 0.5324722 0.5010165 0.8404891 0.8866746 0.8613261 #> 8:lag3  0.3988364 0.5517029 0.4095949 0.4647493 0.6212458 0.6798672 0.6345559 #> 9:lag3  0.5324722 0.4095949 0.6018067 0.5105712 0.9127733 0.9112998 0.8024007 #> 10:lag3 0.5010165 0.4647493 0.5105712 0.5848066 0.7758495 0.8545935 0.7827329 #> 1:lag4  0.3070974 0.2269904 0.3335086 0.2834794 0.5976544 0.5277415 0.4840418 #> 2:lag4  0.3239727 0.2484095 0.3329702 0.3122509 0.5277415 0.5839190 0.5059523 #> 3:lag4  0.3147108 0.2318537 0.2931807 0.2859945 0.4840418 0.5059523 0.5865527 #> 4:lag4  0.3224450 0.2525857 0.3183020 0.3175357 0.5057750 0.5581795 0.5130537 #> 5:lag4  0.2952791 0.2689622 0.2921065 0.3261805 0.4610795 0.5101604 0.4872035 #> 6:lag4  0.2905580 0.2028934 0.2845884 0.2545888 0.4966780 0.4707620 0.5030808 #> 7:lag4  0.3400334 0.2371728 0.3166409 0.2979354 0.5164236 0.5448014 0.5292265 #> 8:lag4  0.2371728 0.3280767 0.2435705 0.2763687 0.3817134 0.4177323 0.3898916 #> 9:lag4  0.3166409 0.2435705 0.3578715 0.3036172 0.5608373 0.5599319 0.4930208 #> 10:lag4 0.2979354 0.2763687 0.3036172 0.3477622 0.4767069 0.5250898 0.4809363 #> 1:lag5  0.2024932 0.1496725 0.2199082 0.1869201 0.3554023 0.3138277 0.2878412 #> 2:lag5  0.2136204 0.1637957 0.2195532 0.2058913 0.3138277 0.3472344 0.3008706 #> 3:lag5  0.2075134 0.1528792 0.1933169 0.1885784 0.2878412 0.3008706 0.3488005 #> 4:lag5  0.2126131 0.1665494 0.2098813 0.2093760 0.3007651 0.3319281 0.3050935 #> 5:lag5  0.1947005 0.1773477 0.1926085 0.2150762 0.2741864 0.3033730 0.2897214 #> 6:lag5  0.1915875 0.1337834 0.1876513 0.1678702 0.2953555 0.2799442 0.2991630 #> 7:lag5  0.2242105 0.1563865 0.2087860 0.1964520 0.3070974 0.3239727 0.3147108 #> 8:lag5  0.1563865 0.2163265 0.1606050 0.1822314 0.2269904 0.2484095 0.2318537 #> 9:lag5  0.2087860 0.1606050 0.2359725 0.2001985 0.3335086 0.3329702 0.2931807 #> 10:lag5 0.1964520 0.1822314 0.2001985 0.2293067 0.2834794 0.3122509 0.2859945 #>            4:lag3    5:lag3    6:lag3    7:lag3    8:lag3    9:lag3   10:lag3 #> 1:t+0   0.1983179 0.1807925 0.1947509 0.2024932 0.1496725 0.2199082 0.1869201 #> 2:t+0   0.2188660 0.2000374 0.1845890 0.2136204 0.1637957 0.2195532 0.2058913 #> 3:t+0   0.2011719 0.1910359 0.1972615 0.2075134 0.1528792 0.1933169 0.1885784 #> 4:t+0   0.2266135 0.2061118 0.1816787 0.2126131 0.1665494 0.2098813 0.2093760 #> 5:t+0   0.2061118 0.2220227 0.1672252 0.1947005 0.1773477 0.1926085 0.2150762 #> 6:t+0   0.1816787 0.1672252 0.2406416 0.1915875 0.1337834 0.1876513 0.1678702 #> 7:t+0   0.2126131 0.1947005 0.1915875 0.2242105 0.1563865 0.2087860 0.1964520 #> 8:t+0   0.1665494 0.1773477 0.1337834 0.1563865 0.2163265 0.1606050 0.1822314 #> 9:t+0   0.2098813 0.1926085 0.1876513 0.2087860 0.1606050 0.2359725 0.2001985 #> 10:t+0  0.2093760 0.2150762 0.1678702 0.1964520 0.1822314 0.2001985 0.2293067 #> 1:lag1  0.3007651 0.2741864 0.2953555 0.3070974 0.2269904 0.3335086 0.2834794 #> 2:lag1  0.3319281 0.3033730 0.2799442 0.3239727 0.2484095 0.3329702 0.3122509 #> 3:lag1  0.3050935 0.2897214 0.2991630 0.3147108 0.2318537 0.2931807 0.2859945 #> 4:lag1  0.3436777 0.3125852 0.2755304 0.3224450 0.2525857 0.3183020 0.3175357 #> 5:lag1  0.3125852 0.3367155 0.2536105 0.2952791 0.2689622 0.2921065 0.3261805 #> 6:lag1  0.2755304 0.2536105 0.3649524 0.2905580 0.2028934 0.2845884 0.2545888 #> 7:lag1  0.3224450 0.2952791 0.2905580 0.3400334 0.2371728 0.3166409 0.2979354 #> 8:lag1  0.2525857 0.2689622 0.2028934 0.2371728 0.3280767 0.2435705 0.2763687 #> 9:lag1  0.3183020 0.2921065 0.2845884 0.3166409 0.2435705 0.3578715 0.3036172 #> 10:lag1 0.3175357 0.3261805 0.2545888 0.2979354 0.2763687 0.3036172 0.3477622 #> 1:lag2  0.5057750 0.4610795 0.4966780 0.5164236 0.3817134 0.5608373 0.4767069 #> 2:lag2  0.5581795 0.5101604 0.4707620 0.5448014 0.4177323 0.5599319 0.5250898 #> 3:lag2  0.5130537 0.4872035 0.5030808 0.5292265 0.3898916 0.4930208 0.4809363 #> 4:lag2  0.5779380 0.5256521 0.4633397 0.5422326 0.4247551 0.5352655 0.5339768 #> 5:lag2  0.5256521 0.5662302 0.4264786 0.4965496 0.4522944 0.4912144 0.5485142 #> 6:lag2  0.4633397 0.4264786 0.6137142 0.4886105 0.3411913 0.4785718 0.4281236 #> 7:lag2  0.5422326 0.4965496 0.4886105 0.5718097 0.3988364 0.5324722 0.5010165 #> 8:lag2  0.4247551 0.4522944 0.3411913 0.3988364 0.5517029 0.4095949 0.4647493 #> 9:lag2  0.5352655 0.4912144 0.4785718 0.5324722 0.4095949 0.6018067 0.5105712 #> 10:lag2 0.5339768 0.5485142 0.4281236 0.5010165 0.4647493 0.5105712 0.5848066 #> 1:lag3  0.8231583 0.7504156 0.8083528 0.8404891 0.6212458 0.9127733 0.7758495 #> 2:lag3  0.9084476 0.8302957 0.7661740 0.8866746 0.6798672 0.9112998 0.8545935 #> 3:lag3  0.8350045 0.7929329 0.8187735 0.8613261 0.6345559 0.8024007 0.7827329 #> 4:lag3  0.9406050 0.8555086 0.7540940 0.8824937 0.6912969 0.8711547 0.8690574 #> 5:lag3  0.8555086 0.9215502 0.6941019 0.8081438 0.7361176 0.7994606 0.8927172 #> 6:lag3  0.7540940 0.6941019 0.9988314 0.7952228 0.5552952 0.7788846 0.6967792 #> 7:lag3  0.8824937 0.8081438 0.7952228 0.9306310 0.6491137 0.8666085 0.8154138 #> 8:lag3  0.6912969 0.7361176 0.5552952 0.6491137 0.8979068 0.6666234 0.7563883 #> 9:lag3  0.8711547 0.7994606 0.7788846 0.8666085 0.6666234 0.9794517 0.8309642 #> 10:lag3 0.8690574 0.8927172 0.6967792 0.8154138 0.7563883 0.8309642 0.9517838 #> 1:lag4  0.5057750 0.4610795 0.4966780 0.5164236 0.3817134 0.5608373 0.4767069 #> 2:lag4  0.5581795 0.5101604 0.4707620 0.5448014 0.4177323 0.5599319 0.5250898 #> 3:lag4  0.5130537 0.4872035 0.5030808 0.5292265 0.3898916 0.4930208 0.4809363 #> 4:lag4  0.5779380 0.5256521 0.4633397 0.5422326 0.4247551 0.5352655 0.5339768 #> 5:lag4  0.5256521 0.5662302 0.4264786 0.4965496 0.4522944 0.4912144 0.5485142 #> 6:lag4  0.4633397 0.4264786 0.6137142 0.4886105 0.3411913 0.4785718 0.4281236 #> 7:lag4  0.5422326 0.4965496 0.4886105 0.5718097 0.3988364 0.5324722 0.5010165 #> 8:lag4  0.4247551 0.4522944 0.3411913 0.3988364 0.5517029 0.4095949 0.4647493 #> 9:lag4  0.5352655 0.4912144 0.4785718 0.5324722 0.4095949 0.6018067 0.5105712 #> 10:lag4 0.5339768 0.5485142 0.4281236 0.5010165 0.4647493 0.5105712 0.5848066 #> 1:lag5  0.3007651 0.2741864 0.2953555 0.3070974 0.2269904 0.3335086 0.2834794 #> 2:lag5  0.3319281 0.3033730 0.2799442 0.3239727 0.2484095 0.3329702 0.3122509 #> 3:lag5  0.3050935 0.2897214 0.2991630 0.3147108 0.2318537 0.2931807 0.2859945 #> 4:lag5  0.3436777 0.3125852 0.2755304 0.3224450 0.2525857 0.3183020 0.3175357 #> 5:lag5  0.3125852 0.3367155 0.2536105 0.2952791 0.2689622 0.2921065 0.3261805 #> 6:lag5  0.2755304 0.2536105 0.3649524 0.2905580 0.2028934 0.2845884 0.2545888 #> 7:lag5  0.3224450 0.2952791 0.2905580 0.3400334 0.2371728 0.3166409 0.2979354 #> 8:lag5  0.2525857 0.2689622 0.2028934 0.2371728 0.3280767 0.2435705 0.2763687 #> 9:lag5  0.3183020 0.2921065 0.2845884 0.3166409 0.2435705 0.3578715 0.3036172 #> 10:lag5 0.3175357 0.3261805 0.2545888 0.2979354 0.2763687 0.3036172 0.3477622 #>            1:lag4    2:lag4    3:lag4    4:lag4    5:lag4     6:lag4    7:lag4 #> 1:t+0   0.1674911 0.1478982 0.1356515 0.1417422 0.1292164 0.13919275 0.1447264 #> 2:t+0   0.1478982 0.1636418 0.1417919 0.1564284 0.1429712 0.13192985 0.1526792 #> 3:t+0   0.1356515 0.1417919 0.1643799 0.1437820 0.1365376 0.14098713 0.1483144 #> 4:t+0   0.1417422 0.1564284 0.1437820 0.1619657 0.1473127 0.12984977 0.1519593 #> 5:t+0   0.1292164 0.1429712 0.1365376 0.1473127 0.1586846 0.11951954 0.1391568 #> 6:t+0   0.1391928 0.1319298 0.1409871 0.1298498 0.1195195 0.17199185 0.1369319 #> 7:t+0   0.1447264 0.1526792 0.1483144 0.1519593 0.1391568 0.13693185 0.1602482 #> 8:t+0   0.1069742 0.1170684 0.1092661 0.1190365 0.1267544 0.09561799 0.1117729 #> 9:t+0   0.1571732 0.1569195 0.1381678 0.1500068 0.1376616 0.13411853 0.1492240 #> 10:t+0  0.1335959 0.1471551 0.1347812 0.1496457 0.1537197 0.11998055 0.1404086 #> 1:lag1  0.2343444 0.2069311 0.1897961 0.1983179 0.1807925 0.19475087 0.2024932 #> 2:lag1  0.2069311 0.2289587 0.1983874 0.2188660 0.2000374 0.18458901 0.2136204 #> 3:lag1  0.1897961 0.1983874 0.2299913 0.2011719 0.1910359 0.19726146 0.2075134 #> 4:lag1  0.1983179 0.2188660 0.2011719 0.2266135 0.2061118 0.18167868 0.2126131 #> 5:lag1  0.1807925 0.2000374 0.1910359 0.2061118 0.2220227 0.16722518 0.1947005 #> 6:lag1  0.1947509 0.1845890 0.1972615 0.1816787 0.1672252 0.24064156 0.1915875 #> 7:lag1  0.2024932 0.2136204 0.2075134 0.2126131 0.1947005 0.19158754 0.2242105 #> 8:lag1  0.1496725 0.1637957 0.1528792 0.1665494 0.1773477 0.13378344 0.1563865 #> 9:lag1  0.2199082 0.2195532 0.1933169 0.2098813 0.1926085 0.18765128 0.2087860 #> 10:lag1 0.1869201 0.2058913 0.1885784 0.2093760 0.2150762 0.16787020 0.1964520 #> 1:lag2  0.3554023 0.3138277 0.2878412 0.3007651 0.2741864 0.29535548 0.3070974 #> 2:lag2  0.3138277 0.3472344 0.3008706 0.3319281 0.3033730 0.27994420 0.3239727 #> 3:lag2  0.2878412 0.3008706 0.3488005 0.3050935 0.2897214 0.29916300 0.3147108 #> 4:lag2  0.3007651 0.3319281 0.3050935 0.3436777 0.3125852 0.27553044 0.3224450 #> 5:lag2  0.2741864 0.3033730 0.2897214 0.3125852 0.3367155 0.25361054 0.2952791 #> 6:lag2  0.2953555 0.2799442 0.2991630 0.2755304 0.2536105 0.36495244 0.2905580 #> 7:lag2  0.3070974 0.3239727 0.3147108 0.3224450 0.2952791 0.29055803 0.3400334 #> 8:lag2  0.2269904 0.2484095 0.2318537 0.2525857 0.2689622 0.20289344 0.2371728 #> 9:lag2  0.3335086 0.3329702 0.2931807 0.3183020 0.2921065 0.28458839 0.3166409 #> 10:lag2 0.2834794 0.3122509 0.2859945 0.3175357 0.3261805 0.25458878 0.2979354 #> 1:lag3  0.5976544 0.5277415 0.4840418 0.5057750 0.4610795 0.49667801 0.5164236 #> 2:lag3  0.5277415 0.5839190 0.5059523 0.5581795 0.5101604 0.47076197 0.5448014 #> 3:lag3  0.4840418 0.5059523 0.5865527 0.5130537 0.4872035 0.50308084 0.5292265 #> 4:lag3  0.5057750 0.5581795 0.5130537 0.5779380 0.5256521 0.46333967 0.5422326 #> 5:lag3  0.4610795 0.5101604 0.4872035 0.5256521 0.5662302 0.42647856 0.4965496 #> 6:lag3  0.4966780 0.4707620 0.5030808 0.4633397 0.4264786 0.61371419 0.4886105 #> 7:lag3  0.5164236 0.5448014 0.5292265 0.5422326 0.4965496 0.48861049 0.5718097 #> 8:lag3  0.3817134 0.4177323 0.3898916 0.4247551 0.4522944 0.34119127 0.3988364 #> 9:lag3  0.5608373 0.5599319 0.4930208 0.5352655 0.4912144 0.47857176 0.5324722 #> 10:lag3 0.4767069 0.5250898 0.4809363 0.5339768 0.5485142 0.42812358 0.5010165 #> 1:lag4  0.9726938 0.8589092 0.7877871 0.8231583 0.7504156 0.80835281 0.8404891 #> 2:lag4  0.8589092 0.9503392 0.8234469 0.9084476 0.8302957 0.76617397 0.8866746 #> 3:lag4  0.7877871 0.8234469 0.9546255 0.8350045 0.7929329 0.81877354 0.8613261 #> 4:lag4  0.8231583 0.9084476 0.8350045 0.9406050 0.8555086 0.75409404 0.8824937 #> 5:lag4  0.7504156 0.8302957 0.7929329 0.8555086 0.9215502 0.69410189 0.8081438 #> 6:lag4  0.8083528 0.7661740 0.8187735 0.7540940 0.6941019 0.99883141 0.7952228 #> 7:lag4  0.8404891 0.8866746 0.8613261 0.8824937 0.8081438 0.79522277 0.9306310 #> 8:lag4  0.6212458 0.6798672 0.6345559 0.6912969 0.7361176 0.55529521 0.6491137 #> 9:lag4  0.9127733 0.9112998 0.8024007 0.8711547 0.7994606 0.77888455 0.8666085 #> 10:lag4 0.7758495 0.8545935 0.7827329 0.8690574 0.8927172 0.69677919 0.8154138 #> 1:lag5  0.5976544 0.5277415 0.4840418 0.5057750 0.4610795 0.49667801 0.5164236 #> 2:lag5  0.5277415 0.5839190 0.5059523 0.5581795 0.5101604 0.47076197 0.5448014 #> 3:lag5  0.4840418 0.5059523 0.5865527 0.5130537 0.4872035 0.50308084 0.5292265 #> 4:lag5  0.5057750 0.5581795 0.5130537 0.5779380 0.5256521 0.46333967 0.5422326 #> 5:lag5  0.4610795 0.5101604 0.4872035 0.5256521 0.5662302 0.42647856 0.4965496 #> 6:lag5  0.4966780 0.4707620 0.5030808 0.4633397 0.4264786 0.61371419 0.4886105 #> 7:lag5  0.5164236 0.5448014 0.5292265 0.5422326 0.4965496 0.48861049 0.5718097 #> 8:lag5  0.3817134 0.4177323 0.3898916 0.4247551 0.4522944 0.34119127 0.3988364 #> 9:lag5  0.5608373 0.5599319 0.4930208 0.5352655 0.4912144 0.47857176 0.5324722 #> 10:lag5 0.4767069 0.5250898 0.4809363 0.5339768 0.5485142 0.42812358 0.5010165 #>             8:lag4    9:lag4   10:lag4     1:lag5     2:lag5     3:lag5 #> 1:t+0   0.10697423 0.1571732 0.1335959 0.12678600 0.11195471 0.10268429 #> 2:t+0   0.11706843 0.1569195 0.1471551 0.11195471 0.12387219 0.10733238 #> 3:t+0   0.10926614 0.1381678 0.1347812 0.10268429 0.10733238 0.12443089 #> 4:t+0   0.11903654 0.1500068 0.1496457 0.10729476 0.11841181 0.10883886 #> 5:t+0   0.12675435 0.1376616 0.1537197 0.09781310 0.10822508 0.10335503 #> 6:t+0   0.09561799 0.1341185 0.1199805 0.10536493 0.09986712 0.10672323 #> 7:t+0   0.11177288 0.1492240 0.1404086 0.10955375 0.11557381 0.11226975 #> 8:t+0   0.15461333 0.1147879 0.1302448 0.08097643 0.08861745 0.08271134 #> 9:t+0   0.11478793 0.1686548 0.1430863 0.11897565 0.11878358 0.10458910 #> 10:t+0  0.13024483 0.1430863 0.1638906 0.10112829 0.11139219 0.10202550 #> 1:lag1  0.14967247 0.2199082 0.1869201 0.16749113 0.14789821 0.13565148 #> 2:lag1  0.16379572 0.2195532 0.2058913 0.14789821 0.16364184 0.14179185 #> 3:lag1  0.15287919 0.1933169 0.1885784 0.13565148 0.14179185 0.16437990 #> 4:lag1  0.16654939 0.2098813 0.2093760 0.14174216 0.15642838 0.14378199 #> 5:lag1  0.17734774 0.1926085 0.2150762 0.12921637 0.14297117 0.13653756 #> 6:lag1  0.13378344 0.1876513 0.1678702 0.13919275 0.13192985 0.14098713 #> 7:lag1  0.15638649 0.2087860 0.1964520 0.14472640 0.15267923 0.14831439 #> 8:lag1  0.21632649 0.1606050 0.1822314 0.10697423 0.11706843 0.10926614 #> 9:lag1  0.16060497 0.2359725 0.2001985 0.15717325 0.15691951 0.13816784 #> 10:lag1 0.18223142 0.2001985 0.2293067 0.13359591 0.14715508 0.13478118 #> 1:lag2  0.22699044 0.3335086 0.2834794 0.23434441 0.20693106 0.18979612 #> 2:lag2  0.24840950 0.3329702 0.3122509 0.20693106 0.22895868 0.19838738 #> 3:lag2  0.23185368 0.2931807 0.2859945 0.18979612 0.19838738 0.22999135 #> 4:lag2  0.25258566 0.3183020 0.3175357 0.19831785 0.21886601 0.20117188 #> 5:lag2  0.26896222 0.2921065 0.3261805 0.18079246 0.20003741 0.19103586 #> 6:lag2  0.20289344 0.2845884 0.2545888 0.19475087 0.18458901 0.19726146 #> 7:lag2  0.23717279 0.3166409 0.2979354 0.20249324 0.21362040 0.20751336 #> 8:lag2  0.32807666 0.2435705 0.2763687 0.14967247 0.16379572 0.15287919 #> 9:lag2  0.24357046 0.3578715 0.3036172 0.21990818 0.21955316 0.19331686 #> 10:lag2 0.27636872 0.3036172 0.3477622 0.18692008 0.20589132 0.18857844 #> 1:lag3  0.38171345 0.5608373 0.4767069 0.35540229 0.31382773 0.28784120 #> 2:lag3  0.41773233 0.5599319 0.5250898 0.31382773 0.34723440 0.30087055 #> 3:lag3  0.38989162 0.4930208 0.4809363 0.28784120 0.30087055 0.34880052 #> 4:lag3  0.42475508 0.5352655 0.5339768 0.30076510 0.33192806 0.30509346 #> 5:lag3  0.45229437 0.4912144 0.5485142 0.27418642 0.30337296 0.28972138 #> 6:lag3  0.34119127 0.4785718 0.4281236 0.29535548 0.27994420 0.29916300 #> 7:lag3  0.39883637 0.5324722 0.5010165 0.30709742 0.32397265 0.31471083 #> 8:lag3  0.55170286 0.4095949 0.4647493 0.22699044 0.24840950 0.23185368 #> 9:lag3  0.40959488 0.6018067 0.5105712 0.33350859 0.33297018 0.29318069 #> 10:lag3 0.46474934 0.5105712 0.5848066 0.28347945 0.31225088 0.28599449 #> 1:lag4  0.62124582 0.9127733 0.7758495 0.59765440 0.52774146 0.48404178 #> 2:lag4  0.67986724 0.9112998 0.8545935 0.52774146 0.58391905 0.50595230 #> 3:lag4  0.63455595 0.8024007 0.7827329 0.48404178 0.50595230 0.58655268 #> 4:lag4  0.69129689 0.8711547 0.8690574 0.50577498 0.55817947 0.51305367 #> 5:lag4  0.73611760 0.7994606 0.8927172 0.46107953 0.51016042 0.48720354 #> 6:lag4  0.55529521 0.7788846 0.6967792 0.49667801 0.47076197 0.50308084 #> 7:lag4  0.64911371 0.8666085 0.8154138 0.51642358 0.54480144 0.52922651 #> 8:lag4  0.89790679 0.6666234 0.7563883 0.38171345 0.41773233 0.38989162 #> 9:lag4  0.66662338 0.9794517 0.8309642 0.56083734 0.55993193 0.49302082 #> 10:lag4 0.75638830 0.8309642 0.9517838 0.47670694 0.52508979 0.48093631 #> 1:lag5  0.38171345 0.5608373 0.4767069 0.97269380 0.85890916 0.78778712 #> 2:lag5  0.41773233 0.5599319 0.5250898 0.85890916 0.95033925 0.82344690 #> 3:lag5  0.38989162 0.4930208 0.4809363 0.78778712 0.82344690 0.95462554 #> 4:lag5  0.42475508 0.5352655 0.5339768 0.82315831 0.90844760 0.83500450 #> 5:lag5  0.45229437 0.4912144 0.5485142 0.75041561 0.83029569 0.79293293 #> 6:lag5  0.34119127 0.4785718 0.4281236 0.80835281 0.76617397 0.81877354 #> 7:lag5  0.39883637 0.5324722 0.5010165 0.84048909 0.88667461 0.86132611 #> 8:lag5  0.55170286 0.4095949 0.4647493 0.62124582 0.67986724 0.63455595 #> 9:lag5  0.40959488 0.6018067 0.5105712 0.91277334 0.91129976 0.80240066 #> 10:lag5 0.46474934 0.5105712 0.5848066 0.77584953 0.85459351 0.78273290 #>             4:lag5     5:lag5     6:lag5     7:lag5     8:lag5     9:lag5 #> 1:t+0   0.10729476 0.09781310 0.10536493 0.10955375 0.08097643 0.11897565 #> 2:t+0   0.11841181 0.10822508 0.09986712 0.11557381 0.08861745 0.11878358 #> 3:t+0   0.10883886 0.10335503 0.10672323 0.11226975 0.08271134 0.10458910 #> 4:t+0   0.12260338 0.11151147 0.09829256 0.11502885 0.09010725 0.11355086 #> 5:t+0   0.11151147 0.12011968 0.09047287 0.10533769 0.09594942 0.10420588 #> 6:t+0   0.09829256 0.09047287 0.13019291 0.10365350 0.07238008 0.10152389 #> 7:t+0   0.11502885 0.10533769 0.10365350 0.12130331 0.08460888 0.11295829 #> 8:t+0   0.09010725 0.09594942 0.07238008 0.08460888 0.11703787 0.08689118 #> 9:t+0   0.11355086 0.10420588 0.10152389 0.11295829 0.08689118 0.12766685 #> 10:t+0  0.11327748 0.11636143 0.09082185 0.10628530 0.09859161 0.10831222 #> 1:lag1  0.14174216 0.12921637 0.13919275 0.14472640 0.10697423 0.15717325 #> 2:lag1  0.15642838 0.14297117 0.13192985 0.15267923 0.11706843 0.15691951 #> 3:lag1  0.14378199 0.13653756 0.14098713 0.14831439 0.10926614 0.13816784 #> 4:lag1  0.16196566 0.14731266 0.12984977 0.15195931 0.11903654 0.15000680 #> 5:lag1  0.14731266 0.15868457 0.11951954 0.13915676 0.12675435 0.13766158 #> 6:lag1  0.12984977 0.11951954 0.17199185 0.13693185 0.09561799 0.13411853 #> 7:lag1  0.15195931 0.13915676 0.13693185 0.16024821 0.11177288 0.14922398 #> 8:lag1  0.11903654 0.12675435 0.09561799 0.11177288 0.15461333 0.11478793 #> 9:lag1  0.15000680 0.13766158 0.13411853 0.14922398 0.11478793 0.16865479 #> 10:lag1 0.14964566 0.15371972 0.11998055 0.14040861 0.13024483 0.14308627 #> 1:lag2  0.19831785 0.18079246 0.19475087 0.20249324 0.14967247 0.21990818 #> 2:lag2  0.21886601 0.20003741 0.18458901 0.21362040 0.16379572 0.21955316 #> 3:lag2  0.20117188 0.19103586 0.19726146 0.20751336 0.15287919 0.19331686 #> 4:lag2  0.22661347 0.20611179 0.18167868 0.21261313 0.16654939 0.20988129 #> 5:lag2  0.20611179 0.22202274 0.16722518 0.19470051 0.17734774 0.19260854 #> 6:lag2  0.18167868 0.16722518 0.24064156 0.19158754 0.13378344 0.18765128 #> 7:lag2  0.21261313 0.19470051 0.19158754 0.22421051 0.15638649 0.20878601 #> 8:lag2  0.16654939 0.17734774 0.13378344 0.15638649 0.21632649 0.16060497 #> 9:lag2  0.20988129 0.19260854 0.18765128 0.20878601 0.16060497 0.23597253 #> 10:lag2 0.20937600 0.21507619 0.16787020 0.19645202 0.18223142 0.20019847 #> 1:lag3  0.30076510 0.27418642 0.29535548 0.30709742 0.22699044 0.33350859 #> 2:lag3  0.33192806 0.30337296 0.27994420 0.32397265 0.24840950 0.33297018 #> 3:lag3  0.30509346 0.28972138 0.29916300 0.31471083 0.23185368 0.29318069 #> 4:lag3  0.34367771 0.31258525 0.27553044 0.32244505 0.25258566 0.31830200 #> 5:lag3  0.31258525 0.33671549 0.25361054 0.29527911 0.26896222 0.29210646 #> 6:lag3  0.27553044 0.25361054 0.36495244 0.29055803 0.20289344 0.28458839 #> 7:lag3  0.32244505 0.29527911 0.29055803 0.34003341 0.23717279 0.31664091 #> 8:lag3  0.25258566 0.26896222 0.20289344 0.23717279 0.32807666 0.24357046 #> 9:lag3  0.31830200 0.29210646 0.28458839 0.31664091 0.24357046 0.35787148 #> 10:lag3 0.31753567 0.32618049 0.25458878 0.29793542 0.27636872 0.30361720 #> 1:lag4  0.50577498 0.46107953 0.49667801 0.51642358 0.38171345 0.56083734 #> 2:lag4  0.55817947 0.51016042 0.47076197 0.54480144 0.41773233 0.55993193 #> 3:lag4  0.51305367 0.48720354 0.50308084 0.52922651 0.38989162 0.49302082 #> 4:lag4  0.57793801 0.52565207 0.46333967 0.54223258 0.42475508 0.53526551 #> 5:lag4  0.52565207 0.56623015 0.42647856 0.49654959 0.45229437 0.49121437 #> 6:lag4  0.46333967 0.42647856 0.61371419 0.48861049 0.34119127 0.47857176 #> 7:lag4  0.54223258 0.49654959 0.48861049 0.57180967 0.39883637 0.53247218 #> 8:lag4  0.42475508 0.45229437 0.34119127 0.39883637 0.55170286 0.40959488 #> 9:lag4  0.53526551 0.49121437 0.47857176 0.53247218 0.40959488 0.60180665 #> 10:lag4 0.53397684 0.54851420 0.42812358 0.50101651 0.46474934 0.51057115 #> 1:lag5  0.82315831 0.75041561 0.80835281 0.84048909 0.62124582 0.91277334 #> 2:lag5  0.90844760 0.83029569 0.76617397 0.88667461 0.67986724 0.91129976 #> 3:lag5  0.83500450 0.79293293 0.81877354 0.86132611 0.63455595 0.80240066 #> 4:lag5  0.94060499 0.85550863 0.75409404 0.88249374 0.69129689 0.87115469 #> 5:lag5  0.85550863 0.92155023 0.69410189 0.80814380 0.73611760 0.79946063 #> 6:lag5  0.75409404 0.69410189 0.99883141 0.79522277 0.55529521 0.77888455 #> 7:lag5  0.88249374 0.80814380 0.79522277 0.93063100 0.64911371 0.86660850 #> 8:lag5  0.69129689 0.73611760 0.55529521 0.64911371 0.89790679 0.66662338 #> 9:lag5  0.87115469 0.79946063 0.77888455 0.86660850 0.66662338 0.97945166 #> 10:lag5 0.86905736 0.89271719 0.69677919 0.81541380 0.75638830 0.83096417 #>            10:lag5 #> 1:t+0   0.10112829 #> 2:t+0   0.11139219 #> 3:t+0   0.10202550 #> 4:t+0   0.11327748 #> 5:t+0   0.11636143 #> 6:t+0   0.09082185 #> 7:t+0   0.10628530 #> 8:t+0   0.09859161 #> 9:t+0   0.10831222 #> 10:t+0  0.12406048 #> 1:lag1  0.13359591 #> 2:lag1  0.14715508 #> 3:lag1  0.13478118 #> 4:lag1  0.14964566 #> 5:lag1  0.15371972 #> 6:lag1  0.11998055 #> 7:lag1  0.14040861 #> 8:lag1  0.13024483 #> 9:lag1  0.14308627 #> 10:lag1 0.16389058 #> 1:lag2  0.18692008 #> 2:lag2  0.20589132 #> 3:lag2  0.18857844 #> 4:lag2  0.20937600 #> 5:lag2  0.21507619 #> 6:lag2  0.16787020 #> 7:lag2  0.19645202 #> 8:lag2  0.18223142 #> 9:lag2  0.20019847 #> 10:lag2 0.22930671 #> 1:lag3  0.28347945 #> 2:lag3  0.31225088 #> 3:lag3  0.28599449 #> 4:lag3  0.31753567 #> 5:lag3  0.32618049 #> 6:lag3  0.25458878 #> 7:lag3  0.29793542 #> 8:lag3  0.27636872 #> 9:lag3  0.30361720 #> 10:lag3 0.34776222 #> 1:lag4  0.47670694 #> 2:lag4  0.52508979 #> 3:lag4  0.48093631 #> 4:lag4  0.53397684 #> 5:lag4  0.54851420 #> 6:lag4  0.42812358 #> 7:lag4  0.50101651 #> 8:lag4  0.46474934 #> 9:lag4  0.51057115 #> 10:lag4 0.58480664 #> 1:lag5  0.77584953 #> 2:lag5  0.85459351 #> 3:lag5  0.78273290 #> 4:lag5  0.86905736 #> 5:lag5  0.89271719 #> 6:lag5  0.69677919 #> 7:lag5  0.81541380 #> 8:lag5  0.75638830 #> 9:lag5  0.83096417 #> 10:lag5 0.95178382"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance/correlation for joint distribution of an mcgf_rsobject — ccov.mcgf_rs","title":"Covariance/correlation for joint distribution of an mcgf_rsobject — ccov.mcgf_rs","text":"Covariance/correlation joint distribution mcgf_rsobject","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance/correlation for joint distribution of an mcgf_rsobject — ccov.mcgf_rs","text":"","code":"# S3 method for mcgf_rs ccov(x, model = c(\"all\", \"base\", \"empirical\"), cor = FALSE, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance/correlation for joint distribution of an mcgf_rsobject — ccov.mcgf_rs","text":"x mcgf object. model model use. One , base, empirical. cor Logical; TRUE, correlation returned ... Additional arguments. use.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance/correlation for joint distribution of an mcgf_rsobject — ccov.mcgf_rs","text":"list joint covariance/correlation matrix.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/ccov.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance/correlation for joint distribution of an mcgf_rsobject — ccov.mcgf_rs","text":"","code":"data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_mcgf <- add_acfs(sim2_mcgf, lag_max = 5) sim2_mcgf <- add_ccfs(sim2_mcgf, lag_max = 5)  # Fit a regime-switching separable model fit_sep <- fit_base(     sim2_mcgf,     lag_ls = 5,     model_ls = \"sep\",     par_init_ls = list(list(         c = 0.000001,         gamma = 0.5,         a = 0.5,         alpha = 0.5     )),     par_fixed_ls = list(c(nugget = 0)) ) sim2_mcgf <- add_base(sim2_mcgf, fit_base_ls = fit_sep)  ccov(sim2_mcgf, model = \"base\") #> $`Regime 1` #>             1:t+0     2:t+0     3:t+0     4:t+0     5:t+0     6:t+0     7:t+0 #> 1:t+0   0.8784702 0.7533880 0.6995305 0.7590369 0.6644653 0.6511216 0.7988752 #> 2:t+0   0.7533880 0.9035621 0.7555227 0.8856543 0.7651284 0.6311475 0.8800385 #> 3:t+0   0.6995305 0.7555227 0.9549912 0.8136662 0.7435730 0.6958014 0.8683404 #> 4:t+0   0.7590369 0.8856543 0.8136662 1.0019931 0.8415231 0.6571406 0.9272691 #> 5:t+0   0.6644653 0.7651284 0.7435730 0.8415231 0.9212603 0.5848187 0.8063203 #> 6:t+0   0.6511216 0.6311475 0.6958014 0.6571406 0.5848187 0.8217197 0.7142335 #> 7:t+0   0.7988752 0.8800385 0.8683404 0.9272691 0.8063203 0.7142335 1.0437801 #> 8:t+0   0.5649151 0.6334639 0.6067197 0.6820996 0.7064192 0.4856748 0.6568070 #> 9:t+0   0.7686230 0.7901779 0.6942573 0.7898189 0.6926089 0.6084411 0.8062188 #> 10:t+0  0.6469992 0.7427709 0.6881115 0.8039763 0.8102816 0.5521990 0.7643159 #> 1:lag1  0.6063761 0.5200364 0.4828605 0.5239356 0.4586563 0.4494456 0.5514345 #> 2:lag1  0.5200364 0.6236961 0.5215099 0.6113350 0.5281404 0.4356582 0.6074586 #> 3:lag1  0.4828605 0.5215099 0.6591957 0.5616442 0.5132614 0.4802865 0.5993838 #> 4:lag1  0.5239356 0.6113350 0.5616442 0.6916394 0.5808728 0.4536003 0.6400602 #> 5:lag1  0.4586563 0.5281404 0.5132614 0.5808728 0.6359125 0.4036791 0.5565736 #> 6:lag1  0.4494456 0.4356582 0.4802865 0.4536003 0.4036791 0.5672032 0.4930094 #> 7:lag1  0.5514345 0.6074586 0.5993838 0.6400602 0.5565736 0.4930094 0.7204835 #> 8:lag1  0.3899404 0.4372571 0.4187966 0.4708286 0.4876155 0.3352437 0.4533700 #> 9:lag1  0.5305525 0.5454311 0.4792206 0.5451833 0.4780828 0.4199848 0.5565035 #> 10:lag1 0.4466000 0.5127078 0.4749784 0.5549556 0.5593080 0.3811629 0.5275795 #> 1:lag2  0.5080317 0.4356949 0.4045484 0.4389617 0.3842697 0.3765528 0.4620008 #> 2:lag2  0.4356949 0.5225428 0.4369295 0.5121864 0.4424846 0.3650015 0.5089387 #> 3:lag2  0.4045484 0.4369295 0.5522849 0.4705547 0.4300188 0.4023918 0.5021735 #> 4:lag2  0.4389617 0.5121864 0.4705547 0.5794668 0.4866647 0.3800337 0.5362528 #> 5:lag2  0.3842697 0.4424846 0.4300188 0.4866647 0.5327779 0.3382089 0.4663064 #> 6:lag2  0.3765528 0.3650015 0.4023918 0.3800337 0.3382089 0.4752121 0.4130513 #> 7:lag2  0.4620008 0.5089387 0.5021735 0.5362528 0.4663064 0.4130513 0.6036328 #> 8:lag2  0.3266984 0.3663412 0.3508746 0.3944679 0.4085322 0.2808726 0.3798408 #> 9:lag2  0.4445055 0.4569710 0.4014988 0.4567635 0.4005455 0.3518701 0.4662477 #> 10:lag2 0.3741688 0.4295549 0.3979446 0.4649509 0.4685973 0.3193445 0.4420147 #> 1:lag3  0.4462315 0.3826942 0.3553365 0.3855636 0.3375246 0.3307465 0.4058001 #> 2:lag3  0.3826942 0.4589773 0.3837785 0.4498807 0.3886579 0.3206004 0.4470281 #> 3:lag3  0.3553365 0.3837785 0.4851014 0.4133134 0.3777085 0.3534423 0.4410859 #> 4:lag3  0.3855636 0.4498807 0.4133134 0.5089767 0.4274637 0.3338039 0.4710196 #> 5:lag3  0.3375246 0.3886579 0.3777085 0.4274637 0.4679673 0.2970670 0.4095819 #> 6:lag3  0.3307465 0.3206004 0.3534423 0.3338039 0.2970670 0.4174042 0.3628051 #> 7:lag3  0.4058001 0.4470281 0.4410859 0.4710196 0.4095819 0.3628051 0.5302030 #> 8:lag3  0.2869567 0.3217771 0.3081920 0.3464822 0.3588357 0.2467054 0.3336345 #> 9:lag3  0.3904330 0.4013821 0.3526579 0.4011998 0.3518206 0.3090663 0.4095303 #> 10:lag3 0.3286525 0.3773011 0.3495361 0.4083913 0.4115941 0.2804974 0.3882452 #> 1:lag4  0.4020685 0.3448194 0.3201693 0.3474048 0.3041202 0.2980129 0.3656385 #> 2:lag4  0.3448194 0.4135528 0.3457964 0.4053566 0.3501929 0.2888709 0.4027863 #> 3:lag4  0.3201693 0.3457964 0.4370915 0.3724082 0.3403272 0.3184625 0.3974321 #> 4:lag4  0.3474048 0.4053566 0.3724082 0.4586038 0.3851581 0.3007677 0.4244033 #> 5:lag4  0.3041202 0.3501929 0.3403272 0.3851581 0.4216532 0.2676666 0.3690461 #> 6:lag4  0.2980129 0.2888709 0.3184625 0.3007677 0.2676666 0.3760942 0.3268987 #> 7:lag4  0.3656385 0.4027863 0.3974321 0.4244033 0.3690461 0.3268987 0.4777294 #> 8:lag4  0.2585569 0.2899311 0.2776906 0.3121913 0.3233221 0.2222893 0.3006151 #> 9:lag4  0.3517923 0.3616578 0.3177557 0.3614935 0.3170013 0.2784784 0.3689996 #> 10:lag4 0.2961261 0.3399600 0.3149429 0.3679732 0.3708591 0.2527369 0.3498210 #> 1:lag5  0.3682814 0.3158431 0.2932644 0.3182113 0.2785640 0.2729699 0.3349127 #> 2:lag5  0.3158431 0.3788006 0.3167380 0.3712931 0.3207650 0.2645962 0.3689388 #> 3:lag5  0.2932644 0.3167380 0.4003613 0.3411136 0.3117284 0.2917011 0.3640346 #> 4:lag5  0.3182113 0.3712931 0.3411136 0.4200659 0.3527920 0.2754933 0.3887393 #> 5:lag5  0.2785640 0.3207650 0.3117284 0.3527920 0.3862203 0.2451737 0.3380339 #> 6:lag5  0.2729699 0.2645962 0.2917011 0.2754933 0.2451737 0.3444898 0.2994283 #> 7:lag5  0.3349127 0.3689388 0.3640346 0.3887393 0.3380339 0.2994283 0.4375843 #> 8:lag5  0.2368296 0.2655673 0.2543553 0.2859568 0.2961523 0.2036096 0.2753534 #> 9:lag5  0.3222300 0.3312665 0.2910537 0.3311161 0.2903627 0.2550769 0.3379913 #> 10:lag5 0.2712417 0.3113921 0.2884772 0.3370513 0.3396946 0.2314986 0.3204244 #>             8:t+0     9:t+0    10:t+0    1:lag1    2:lag1    3:lag1    4:lag1 #> 1:t+0   0.5649151 0.7686230 0.6469992 0.6063761 0.5200364 0.4828605 0.5239356 #> 2:t+0   0.6334639 0.7901779 0.7427709 0.5200364 0.6236961 0.5215099 0.6113350 #> 3:t+0   0.6067197 0.6942573 0.6881115 0.4828605 0.5215099 0.6591957 0.5616442 #> 4:t+0   0.6820996 0.7898189 0.8039763 0.5239356 0.6113350 0.5616442 0.6916394 #> 5:t+0   0.7064192 0.6926089 0.8102816 0.4586563 0.5281404 0.5132614 0.5808728 #> 6:t+0   0.4856748 0.6084411 0.5521990 0.4494456 0.4356582 0.4802865 0.4536003 #> 7:t+0   0.6568070 0.8062188 0.7643159 0.5514345 0.6074586 0.5993838 0.6400602 #> 8:t+0   0.9495403 0.5888773 0.6834328 0.3899404 0.4372571 0.4187966 0.4708286 #> 9:t+0   0.5888773 0.8372873 0.6792741 0.5305525 0.5454311 0.4792206 0.5451833 #> 10:t+0  0.6834328 0.6792741 0.8418067 0.4466000 0.5127078 0.4749784 0.5549556 #> 1:lag1  0.3899404 0.5305525 0.4466000 0.8784702 0.7533880 0.6995305 0.7590369 #> 2:lag1  0.4372571 0.5454311 0.5127078 0.7533880 0.9035621 0.7555227 0.8856543 #> 3:lag1  0.4187966 0.4792206 0.4749784 0.6995305 0.7555227 0.9549912 0.8136662 #> 4:lag1  0.4708286 0.5451833 0.5549556 0.7590369 0.8856543 0.8136662 1.0019931 #> 5:lag1  0.4876155 0.4780828 0.5593080 0.6644653 0.7651284 0.7435730 0.8415231 #> 6:lag1  0.3352437 0.4199848 0.3811629 0.6511216 0.6311475 0.6958014 0.6571406 #> 7:lag1  0.4533700 0.5565035 0.5275795 0.7988752 0.8800385 0.8683404 0.9272691 #> 8:lag1  0.6554331 0.4064806 0.4717488 0.5649151 0.6334639 0.6067197 0.6820996 #> 9:lag1  0.4064806 0.5779490 0.4688782 0.7686230 0.7901779 0.6942573 0.7898189 #> 10:lag1 0.4717488 0.4688782 0.5810685 0.6469992 0.7427709 0.6881115 0.8039763 #> 1:lag2  0.3266984 0.4445055 0.3741688 0.6063761 0.5200364 0.4828605 0.5239356 #> 2:lag2  0.3663412 0.4569710 0.4295549 0.5200364 0.6236961 0.5215099 0.6113350 #> 3:lag2  0.3508746 0.4014988 0.3979446 0.4828605 0.5215099 0.6591957 0.5616442 #> 4:lag2  0.3944679 0.4567635 0.4649509 0.5239356 0.6113350 0.5616442 0.6916394 #> 5:lag2  0.4085322 0.4005455 0.4685973 0.4586563 0.5281404 0.5132614 0.5808728 #> 6:lag2  0.2808726 0.3518701 0.3193445 0.4494456 0.4356582 0.4802865 0.4536003 #> 7:lag2  0.3798408 0.4662477 0.4420147 0.5514345 0.6074586 0.5993838 0.6400602 #> 8:lag2  0.5491326 0.3405561 0.3952388 0.3899404 0.4372571 0.4187966 0.4708286 #> 9:lag2  0.3405561 0.4842151 0.3928338 0.5305525 0.5454311 0.4792206 0.5451833 #> 10:lag2 0.3952388 0.3928338 0.4868287 0.4466000 0.5127078 0.4749784 0.5549556 #> 1:lag3  0.2869567 0.3904330 0.3286525 0.5080317 0.4356949 0.4045484 0.4389617 #> 2:lag3  0.3217771 0.4013821 0.3773011 0.4356949 0.5225428 0.4369295 0.5121864 #> 3:lag3  0.3081920 0.3526579 0.3495361 0.4045484 0.4369295 0.5522849 0.4705547 #> 4:lag3  0.3464822 0.4011998 0.4083913 0.4389617 0.5121864 0.4705547 0.5794668 #> 5:lag3  0.3588357 0.3518206 0.4115941 0.3842697 0.4424846 0.4300188 0.4866647 #> 6:lag3  0.2467054 0.3090663 0.2804974 0.3765528 0.3650015 0.4023918 0.3800337 #> 7:lag3  0.3336345 0.4095303 0.3882452 0.4620008 0.5089387 0.5021735 0.5362528 #> 8:lag3  0.4823325 0.2991286 0.3471594 0.3266984 0.3663412 0.3508746 0.3944679 #> 9:lag3  0.2991286 0.4253121 0.3450470 0.4445055 0.4569710 0.4014988 0.4567635 #> 10:lag3 0.3471594 0.3450470 0.4276077 0.3741688 0.4295549 0.3979446 0.4649509 #> 1:lag4  0.2585569 0.3517923 0.2961261 0.4462315 0.3826942 0.3553365 0.3855636 #> 2:lag4  0.2899311 0.3616578 0.3399600 0.3826942 0.4589773 0.3837785 0.4498807 #> 3:lag4  0.2776906 0.3177557 0.3149429 0.3553365 0.3837785 0.4851014 0.4133134 #> 4:lag4  0.3121913 0.3614935 0.3679732 0.3855636 0.4498807 0.4133134 0.5089767 #> 5:lag4  0.3233221 0.3170013 0.3708591 0.3375246 0.3886579 0.3777085 0.4274637 #> 6:lag4  0.2222893 0.2784784 0.2527369 0.3307465 0.3206004 0.3534423 0.3338039 #> 7:lag4  0.3006151 0.3689996 0.3498210 0.4058001 0.4470281 0.4410859 0.4710196 #> 8:lag4  0.4345966 0.2695242 0.3128015 0.2869567 0.3217771 0.3081920 0.3464822 #> 9:lag4  0.2695242 0.3832194 0.3108981 0.3904330 0.4013821 0.3526579 0.4011998 #> 10:lag4 0.3128015 0.3108981 0.3852879 0.3286525 0.3773011 0.3495361 0.4083913 #> 1:lag5  0.2368296 0.3222300 0.2712417 0.4020685 0.3448194 0.3201693 0.3474048 #> 2:lag5  0.2655673 0.3312665 0.3113921 0.3448194 0.4135528 0.3457964 0.4053566 #> 3:lag5  0.2543553 0.2910537 0.2884772 0.3201693 0.3457964 0.4370915 0.3724082 #> 4:lag5  0.2859568 0.3311161 0.3370513 0.3474048 0.4053566 0.3724082 0.4586038 #> 5:lag5  0.2961523 0.2903627 0.3396946 0.3041202 0.3501929 0.3403272 0.3851581 #> 6:lag5  0.2036096 0.2550769 0.2314986 0.2980129 0.2888709 0.3184625 0.3007677 #> 7:lag5  0.2753534 0.3379913 0.3204244 0.3656385 0.4027863 0.3974321 0.4244033 #> 8:lag5  0.3980761 0.2468752 0.2865157 0.2585569 0.2899311 0.2776906 0.3121913 #> 9:lag5  0.2468752 0.3510162 0.2847723 0.3517923 0.3616578 0.3177557 0.3614935 #> 10:lag5 0.2865157 0.2847723 0.3529109 0.2961261 0.3399600 0.3149429 0.3679732 #>            5:lag1    6:lag1    7:lag1    8:lag1    9:lag1   10:lag1    1:lag2 #> 1:t+0   0.4586563 0.4494456 0.5514345 0.3899404 0.5305525 0.4466000 0.5080317 #> 2:t+0   0.5281404 0.4356582 0.6074586 0.4372571 0.5454311 0.5127078 0.4356949 #> 3:t+0   0.5132614 0.4802865 0.5993838 0.4187966 0.4792206 0.4749784 0.4045484 #> 4:t+0   0.5808728 0.4536003 0.6400602 0.4708286 0.5451833 0.5549556 0.4389617 #> 5:t+0   0.6359125 0.4036791 0.5565736 0.4876155 0.4780828 0.5593080 0.3842697 #> 6:t+0   0.4036791 0.5672032 0.4930094 0.3352437 0.4199848 0.3811629 0.3765528 #> 7:t+0   0.5565736 0.4930094 0.7204835 0.4533700 0.5565035 0.5275795 0.4620008 #> 8:t+0   0.4876155 0.3352437 0.4533700 0.6554331 0.4064806 0.4717488 0.3266984 #> 9:t+0   0.4780828 0.4199848 0.5565035 0.4064806 0.5779490 0.4688782 0.4445055 #> 10:t+0  0.5593080 0.3811629 0.5275795 0.4717488 0.4688782 0.5810685 0.3741688 #> 1:lag1  0.6644653 0.6511216 0.7988752 0.5649151 0.7686230 0.6469992 0.6063761 #> 2:lag1  0.7651284 0.6311475 0.8800385 0.6334639 0.7901779 0.7427709 0.5200364 #> 3:lag1  0.7435730 0.6958014 0.8683404 0.6067197 0.6942573 0.6881115 0.4828605 #> 4:lag1  0.8415231 0.6571406 0.9272691 0.6820996 0.7898189 0.8039763 0.5239356 #> 5:lag1  0.9212603 0.5848187 0.8063203 0.7064192 0.6926089 0.8102816 0.4586563 #> 6:lag1  0.5848187 0.8217197 0.7142335 0.4856748 0.6084411 0.5521990 0.4494456 #> 7:lag1  0.8063203 0.7142335 1.0437801 0.6568070 0.8062188 0.7643159 0.5514345 #> 8:lag1  0.7064192 0.4856748 0.6568070 0.9495403 0.5888773 0.6834328 0.3899404 #> 9:lag1  0.6926089 0.6084411 0.8062188 0.5888773 0.8372873 0.6792741 0.5305525 #> 10:lag1 0.8102816 0.5521990 0.7643159 0.6834328 0.6792741 0.8418067 0.4466000 #> 1:lag2  0.4586563 0.4494456 0.5514345 0.3899404 0.5305525 0.4466000 0.8784702 #> 2:lag2  0.5281404 0.4356582 0.6074586 0.4372571 0.5454311 0.5127078 0.7533880 #> 3:lag2  0.5132614 0.4802865 0.5993838 0.4187966 0.4792206 0.4749784 0.6995305 #> 4:lag2  0.5808728 0.4536003 0.6400602 0.4708286 0.5451833 0.5549556 0.7590369 #> 5:lag2  0.6359125 0.4036791 0.5565736 0.4876155 0.4780828 0.5593080 0.6644653 #> 6:lag2  0.4036791 0.5672032 0.4930094 0.3352437 0.4199848 0.3811629 0.6511216 #> 7:lag2  0.5565736 0.4930094 0.7204835 0.4533700 0.5565035 0.5275795 0.7988752 #> 8:lag2  0.4876155 0.3352437 0.4533700 0.6554331 0.4064806 0.4717488 0.5649151 #> 9:lag2  0.4780828 0.4199848 0.5565035 0.4064806 0.5779490 0.4688782 0.7686230 #> 10:lag2 0.5593080 0.3811629 0.5275795 0.4717488 0.4688782 0.5810685 0.6469992 #> 1:lag3  0.3842697 0.3765528 0.4620008 0.3266984 0.4445055 0.3741688 0.6063761 #> 2:lag3  0.4424846 0.3650015 0.5089387 0.3663412 0.4569710 0.4295549 0.5200364 #> 3:lag3  0.4300188 0.4023918 0.5021735 0.3508746 0.4014988 0.3979446 0.4828605 #> 4:lag3  0.4866647 0.3800337 0.5362528 0.3944679 0.4567635 0.4649509 0.5239356 #> 5:lag3  0.5327779 0.3382089 0.4663064 0.4085322 0.4005455 0.4685973 0.4586563 #> 6:lag3  0.3382089 0.4752121 0.4130513 0.2808726 0.3518701 0.3193445 0.4494456 #> 7:lag3  0.4663064 0.4130513 0.6036328 0.3798408 0.4662477 0.4420147 0.5514345 #> 8:lag3  0.4085322 0.2808726 0.3798408 0.5491326 0.3405561 0.3952388 0.3899404 #> 9:lag3  0.4005455 0.3518701 0.4662477 0.3405561 0.4842151 0.3928338 0.5305525 #> 10:lag3 0.4685973 0.3193445 0.4420147 0.3952388 0.3928338 0.4868287 0.4466000 #> 1:lag4  0.3375246 0.3307465 0.4058001 0.2869567 0.3904330 0.3286525 0.5080317 #> 2:lag4  0.3886579 0.3206004 0.4470281 0.3217771 0.4013821 0.3773011 0.4356949 #> 3:lag4  0.3777085 0.3534423 0.4410859 0.3081920 0.3526579 0.3495361 0.4045484 #> 4:lag4  0.4274637 0.3338039 0.4710196 0.3464822 0.4011998 0.4083913 0.4389617 #> 5:lag4  0.4679673 0.2970670 0.4095819 0.3588357 0.3518206 0.4115941 0.3842697 #> 6:lag4  0.2970670 0.4174042 0.3628051 0.2467054 0.3090663 0.2804974 0.3765528 #> 7:lag4  0.4095819 0.3628051 0.5302030 0.3336345 0.4095303 0.3882452 0.4620008 #> 8:lag4  0.3588357 0.2467054 0.3336345 0.4823325 0.2991286 0.3471594 0.3266984 #> 9:lag4  0.3518206 0.3090663 0.4095303 0.2991286 0.4253121 0.3450470 0.4445055 #> 10:lag4 0.4115941 0.2804974 0.3882452 0.3471594 0.3450470 0.4276077 0.3741688 #> 1:lag5  0.3041202 0.2980129 0.3656385 0.2585569 0.3517923 0.2961261 0.4462315 #> 2:lag5  0.3501929 0.2888709 0.4027863 0.2899311 0.3616578 0.3399600 0.3826942 #> 3:lag5  0.3403272 0.3184625 0.3974321 0.2776906 0.3177557 0.3149429 0.3553365 #> 4:lag5  0.3851581 0.3007677 0.4244033 0.3121913 0.3614935 0.3679732 0.3855636 #> 5:lag5  0.4216532 0.2676666 0.3690461 0.3233221 0.3170013 0.3708591 0.3375246 #> 6:lag5  0.2676666 0.3760942 0.3268987 0.2222893 0.2784784 0.2527369 0.3307465 #> 7:lag5  0.3690461 0.3268987 0.4777294 0.3006151 0.3689996 0.3498210 0.4058001 #> 8:lag5  0.3233221 0.2222893 0.3006151 0.4345966 0.2695242 0.3128015 0.2869567 #> 9:lag5  0.3170013 0.2784784 0.3689996 0.2695242 0.3832194 0.3108981 0.3904330 #> 10:lag5 0.3708591 0.2527369 0.3498210 0.3128015 0.3108981 0.3852879 0.3286525 #>            2:lag2    3:lag2    4:lag2    5:lag2    6:lag2    7:lag2    8:lag2 #> 1:t+0   0.4356949 0.4045484 0.4389617 0.3842697 0.3765528 0.4620008 0.3266984 #> 2:t+0   0.5225428 0.4369295 0.5121864 0.4424846 0.3650015 0.5089387 0.3663412 #> 3:t+0   0.4369295 0.5522849 0.4705547 0.4300188 0.4023918 0.5021735 0.3508746 #> 4:t+0   0.5121864 0.4705547 0.5794668 0.4866647 0.3800337 0.5362528 0.3944679 #> 5:t+0   0.4424846 0.4300188 0.4866647 0.5327779 0.3382089 0.4663064 0.4085322 #> 6:t+0   0.3650015 0.4023918 0.3800337 0.3382089 0.4752121 0.4130513 0.2808726 #> 7:t+0   0.5089387 0.5021735 0.5362528 0.4663064 0.4130513 0.6036328 0.3798408 #> 8:t+0   0.3663412 0.3508746 0.3944679 0.4085322 0.2808726 0.3798408 0.5491326 #> 9:t+0   0.4569710 0.4014988 0.4567635 0.4005455 0.3518701 0.4662477 0.3405561 #> 10:t+0  0.4295549 0.3979446 0.4649509 0.4685973 0.3193445 0.4420147 0.3952388 #> 1:lag1  0.5200364 0.4828605 0.5239356 0.4586563 0.4494456 0.5514345 0.3899404 #> 2:lag1  0.6236961 0.5215099 0.6113350 0.5281404 0.4356582 0.6074586 0.4372571 #> 3:lag1  0.5215099 0.6591957 0.5616442 0.5132614 0.4802865 0.5993838 0.4187966 #> 4:lag1  0.6113350 0.5616442 0.6916394 0.5808728 0.4536003 0.6400602 0.4708286 #> 5:lag1  0.5281404 0.5132614 0.5808728 0.6359125 0.4036791 0.5565736 0.4876155 #> 6:lag1  0.4356582 0.4802865 0.4536003 0.4036791 0.5672032 0.4930094 0.3352437 #> 7:lag1  0.6074586 0.5993838 0.6400602 0.5565736 0.4930094 0.7204835 0.4533700 #> 8:lag1  0.4372571 0.4187966 0.4708286 0.4876155 0.3352437 0.4533700 0.6554331 #> 9:lag1  0.5454311 0.4792206 0.5451833 0.4780828 0.4199848 0.5565035 0.4064806 #> 10:lag1 0.5127078 0.4749784 0.5549556 0.5593080 0.3811629 0.5275795 0.4717488 #> 1:lag2  0.7533880 0.6995305 0.7590369 0.6644653 0.6511216 0.7988752 0.5649151 #> 2:lag2  0.9035621 0.7555227 0.8856543 0.7651284 0.6311475 0.8800385 0.6334639 #> 3:lag2  0.7555227 0.9549912 0.8136662 0.7435730 0.6958014 0.8683404 0.6067197 #> 4:lag2  0.8856543 0.8136662 1.0019931 0.8415231 0.6571406 0.9272691 0.6820996 #> 5:lag2  0.7651284 0.7435730 0.8415231 0.9212603 0.5848187 0.8063203 0.7064192 #> 6:lag2  0.6311475 0.6958014 0.6571406 0.5848187 0.8217197 0.7142335 0.4856748 #> 7:lag2  0.8800385 0.8683404 0.9272691 0.8063203 0.7142335 1.0437801 0.6568070 #> 8:lag2  0.6334639 0.6067197 0.6820996 0.7064192 0.4856748 0.6568070 0.9495403 #> 9:lag2  0.7901779 0.6942573 0.7898189 0.6926089 0.6084411 0.8062188 0.5888773 #> 10:lag2 0.7427709 0.6881115 0.8039763 0.8102816 0.5521990 0.7643159 0.6834328 #> 1:lag3  0.5200364 0.4828605 0.5239356 0.4586563 0.4494456 0.5514345 0.3899404 #> 2:lag3  0.6236961 0.5215099 0.6113350 0.5281404 0.4356582 0.6074586 0.4372571 #> 3:lag3  0.5215099 0.6591957 0.5616442 0.5132614 0.4802865 0.5993838 0.4187966 #> 4:lag3  0.6113350 0.5616442 0.6916394 0.5808728 0.4536003 0.6400602 0.4708286 #> 5:lag3  0.5281404 0.5132614 0.5808728 0.6359125 0.4036791 0.5565736 0.4876155 #> 6:lag3  0.4356582 0.4802865 0.4536003 0.4036791 0.5672032 0.4930094 0.3352437 #> 7:lag3  0.6074586 0.5993838 0.6400602 0.5565736 0.4930094 0.7204835 0.4533700 #> 8:lag3  0.4372571 0.4187966 0.4708286 0.4876155 0.3352437 0.4533700 0.6554331 #> 9:lag3  0.5454311 0.4792206 0.5451833 0.4780828 0.4199848 0.5565035 0.4064806 #> 10:lag3 0.5127078 0.4749784 0.5549556 0.5593080 0.3811629 0.5275795 0.4717488 #> 1:lag4  0.4356949 0.4045484 0.4389617 0.3842697 0.3765528 0.4620008 0.3266984 #> 2:lag4  0.5225428 0.4369295 0.5121864 0.4424846 0.3650015 0.5089387 0.3663412 #> 3:lag4  0.4369295 0.5522849 0.4705547 0.4300188 0.4023918 0.5021735 0.3508746 #> 4:lag4  0.5121864 0.4705547 0.5794668 0.4866647 0.3800337 0.5362528 0.3944679 #> 5:lag4  0.4424846 0.4300188 0.4866647 0.5327779 0.3382089 0.4663064 0.4085322 #> 6:lag4  0.3650015 0.4023918 0.3800337 0.3382089 0.4752121 0.4130513 0.2808726 #> 7:lag4  0.5089387 0.5021735 0.5362528 0.4663064 0.4130513 0.6036328 0.3798408 #> 8:lag4  0.3663412 0.3508746 0.3944679 0.4085322 0.2808726 0.3798408 0.5491326 #> 9:lag4  0.4569710 0.4014988 0.4567635 0.4005455 0.3518701 0.4662477 0.3405561 #> 10:lag4 0.4295549 0.3979446 0.4649509 0.4685973 0.3193445 0.4420147 0.3952388 #> 1:lag5  0.3826942 0.3553365 0.3855636 0.3375246 0.3307465 0.4058001 0.2869567 #> 2:lag5  0.4589773 0.3837785 0.4498807 0.3886579 0.3206004 0.4470281 0.3217771 #> 3:lag5  0.3837785 0.4851014 0.4133134 0.3777085 0.3534423 0.4410859 0.3081920 #> 4:lag5  0.4498807 0.4133134 0.5089767 0.4274637 0.3338039 0.4710196 0.3464822 #> 5:lag5  0.3886579 0.3777085 0.4274637 0.4679673 0.2970670 0.4095819 0.3588357 #> 6:lag5  0.3206004 0.3534423 0.3338039 0.2970670 0.4174042 0.3628051 0.2467054 #> 7:lag5  0.4470281 0.4410859 0.4710196 0.4095819 0.3628051 0.5302030 0.3336345 #> 8:lag5  0.3217771 0.3081920 0.3464822 0.3588357 0.2467054 0.3336345 0.4823325 #> 9:lag5  0.4013821 0.3526579 0.4011998 0.3518206 0.3090663 0.4095303 0.2991286 #> 10:lag5 0.3773011 0.3495361 0.4083913 0.4115941 0.2804974 0.3882452 0.3471594 #>            9:lag2   10:lag2    1:lag3    2:lag3    3:lag3    4:lag3    5:lag3 #> 1:t+0   0.4445055 0.3741688 0.4462315 0.3826942 0.3553365 0.3855636 0.3375246 #> 2:t+0   0.4569710 0.4295549 0.3826942 0.4589773 0.3837785 0.4498807 0.3886579 #> 3:t+0   0.4014988 0.3979446 0.3553365 0.3837785 0.4851014 0.4133134 0.3777085 #> 4:t+0   0.4567635 0.4649509 0.3855636 0.4498807 0.4133134 0.5089767 0.4274637 #> 5:t+0   0.4005455 0.4685973 0.3375246 0.3886579 0.3777085 0.4274637 0.4679673 #> 6:t+0   0.3518701 0.3193445 0.3307465 0.3206004 0.3534423 0.3338039 0.2970670 #> 7:t+0   0.4662477 0.4420147 0.4058001 0.4470281 0.4410859 0.4710196 0.4095819 #> 8:t+0   0.3405561 0.3952388 0.2869567 0.3217771 0.3081920 0.3464822 0.3588357 #> 9:t+0   0.4842151 0.3928338 0.3904330 0.4013821 0.3526579 0.4011998 0.3518206 #> 10:t+0  0.3928338 0.4868287 0.3286525 0.3773011 0.3495361 0.4083913 0.4115941 #> 1:lag1  0.5305525 0.4466000 0.5080317 0.4356949 0.4045484 0.4389617 0.3842697 #> 2:lag1  0.5454311 0.5127078 0.4356949 0.5225428 0.4369295 0.5121864 0.4424846 #> 3:lag1  0.4792206 0.4749784 0.4045484 0.4369295 0.5522849 0.4705547 0.4300188 #> 4:lag1  0.5451833 0.5549556 0.4389617 0.5121864 0.4705547 0.5794668 0.4866647 #> 5:lag1  0.4780828 0.5593080 0.3842697 0.4424846 0.4300188 0.4866647 0.5327779 #> 6:lag1  0.4199848 0.3811629 0.3765528 0.3650015 0.4023918 0.3800337 0.3382089 #> 7:lag1  0.5565035 0.5275795 0.4620008 0.5089387 0.5021735 0.5362528 0.4663064 #> 8:lag1  0.4064806 0.4717488 0.3266984 0.3663412 0.3508746 0.3944679 0.4085322 #> 9:lag1  0.5779490 0.4688782 0.4445055 0.4569710 0.4014988 0.4567635 0.4005455 #> 10:lag1 0.4688782 0.5810685 0.3741688 0.4295549 0.3979446 0.4649509 0.4685973 #> 1:lag2  0.7686230 0.6469992 0.6063761 0.5200364 0.4828605 0.5239356 0.4586563 #> 2:lag2  0.7901779 0.7427709 0.5200364 0.6236961 0.5215099 0.6113350 0.5281404 #> 3:lag2  0.6942573 0.6881115 0.4828605 0.5215099 0.6591957 0.5616442 0.5132614 #> 4:lag2  0.7898189 0.8039763 0.5239356 0.6113350 0.5616442 0.6916394 0.5808728 #> 5:lag2  0.6926089 0.8102816 0.4586563 0.5281404 0.5132614 0.5808728 0.6359125 #> 6:lag2  0.6084411 0.5521990 0.4494456 0.4356582 0.4802865 0.4536003 0.4036791 #> 7:lag2  0.8062188 0.7643159 0.5514345 0.6074586 0.5993838 0.6400602 0.5565736 #> 8:lag2  0.5888773 0.6834328 0.3899404 0.4372571 0.4187966 0.4708286 0.4876155 #> 9:lag2  0.8372873 0.6792741 0.5305525 0.5454311 0.4792206 0.5451833 0.4780828 #> 10:lag2 0.6792741 0.8418067 0.4466000 0.5127078 0.4749784 0.5549556 0.5593080 #> 1:lag3  0.5305525 0.4466000 0.8784702 0.7533880 0.6995305 0.7590369 0.6644653 #> 2:lag3  0.5454311 0.5127078 0.7533880 0.9035621 0.7555227 0.8856543 0.7651284 #> 3:lag3  0.4792206 0.4749784 0.6995305 0.7555227 0.9549912 0.8136662 0.7435730 #> 4:lag3  0.5451833 0.5549556 0.7590369 0.8856543 0.8136662 1.0019931 0.8415231 #> 5:lag3  0.4780828 0.5593080 0.6644653 0.7651284 0.7435730 0.8415231 0.9212603 #> 6:lag3  0.4199848 0.3811629 0.6511216 0.6311475 0.6958014 0.6571406 0.5848187 #> 7:lag3  0.5565035 0.5275795 0.7988752 0.8800385 0.8683404 0.9272691 0.8063203 #> 8:lag3  0.4064806 0.4717488 0.5649151 0.6334639 0.6067197 0.6820996 0.7064192 #> 9:lag3  0.5779490 0.4688782 0.7686230 0.7901779 0.6942573 0.7898189 0.6926089 #> 10:lag3 0.4688782 0.5810685 0.6469992 0.7427709 0.6881115 0.8039763 0.8102816 #> 1:lag4  0.4445055 0.3741688 0.6063761 0.5200364 0.4828605 0.5239356 0.4586563 #> 2:lag4  0.4569710 0.4295549 0.5200364 0.6236961 0.5215099 0.6113350 0.5281404 #> 3:lag4  0.4014988 0.3979446 0.4828605 0.5215099 0.6591957 0.5616442 0.5132614 #> 4:lag4  0.4567635 0.4649509 0.5239356 0.6113350 0.5616442 0.6916394 0.5808728 #> 5:lag4  0.4005455 0.4685973 0.4586563 0.5281404 0.5132614 0.5808728 0.6359125 #> 6:lag4  0.3518701 0.3193445 0.4494456 0.4356582 0.4802865 0.4536003 0.4036791 #> 7:lag4  0.4662477 0.4420147 0.5514345 0.6074586 0.5993838 0.6400602 0.5565736 #> 8:lag4  0.3405561 0.3952388 0.3899404 0.4372571 0.4187966 0.4708286 0.4876155 #> 9:lag4  0.4842151 0.3928338 0.5305525 0.5454311 0.4792206 0.5451833 0.4780828 #> 10:lag4 0.3928338 0.4868287 0.4466000 0.5127078 0.4749784 0.5549556 0.5593080 #> 1:lag5  0.3904330 0.3286525 0.5080317 0.4356949 0.4045484 0.4389617 0.3842697 #> 2:lag5  0.4013821 0.3773011 0.4356949 0.5225428 0.4369295 0.5121864 0.4424846 #> 3:lag5  0.3526579 0.3495361 0.4045484 0.4369295 0.5522849 0.4705547 0.4300188 #> 4:lag5  0.4011998 0.4083913 0.4389617 0.5121864 0.4705547 0.5794668 0.4866647 #> 5:lag5  0.3518206 0.4115941 0.3842697 0.4424846 0.4300188 0.4866647 0.5327779 #> 6:lag5  0.3090663 0.2804974 0.3765528 0.3650015 0.4023918 0.3800337 0.3382089 #> 7:lag5  0.4095303 0.3882452 0.4620008 0.5089387 0.5021735 0.5362528 0.4663064 #> 8:lag5  0.2991286 0.3471594 0.3266984 0.3663412 0.3508746 0.3944679 0.4085322 #> 9:lag5  0.4253121 0.3450470 0.4445055 0.4569710 0.4014988 0.4567635 0.4005455 #> 10:lag5 0.3450470 0.4276077 0.3741688 0.4295549 0.3979446 0.4649509 0.4685973 #>            6:lag3    7:lag3    8:lag3    9:lag3   10:lag3    1:lag4    2:lag4 #> 1:t+0   0.3307465 0.4058001 0.2869567 0.3904330 0.3286525 0.4020685 0.3448194 #> 2:t+0   0.3206004 0.4470281 0.3217771 0.4013821 0.3773011 0.3448194 0.4135528 #> 3:t+0   0.3534423 0.4410859 0.3081920 0.3526579 0.3495361 0.3201693 0.3457964 #> 4:t+0   0.3338039 0.4710196 0.3464822 0.4011998 0.4083913 0.3474048 0.4053566 #> 5:t+0   0.2970670 0.4095819 0.3588357 0.3518206 0.4115941 0.3041202 0.3501929 #> 6:t+0   0.4174042 0.3628051 0.2467054 0.3090663 0.2804974 0.2980129 0.2888709 #> 7:t+0   0.3628051 0.5302030 0.3336345 0.4095303 0.3882452 0.3656385 0.4027863 #> 8:t+0   0.2467054 0.3336345 0.4823325 0.2991286 0.3471594 0.2585569 0.2899311 #> 9:t+0   0.3090663 0.4095303 0.2991286 0.4253121 0.3450470 0.3517923 0.3616578 #> 10:t+0  0.2804974 0.3882452 0.3471594 0.3450470 0.4276077 0.2961261 0.3399600 #> 1:lag1  0.3765528 0.4620008 0.3266984 0.4445055 0.3741688 0.4462315 0.3826942 #> 2:lag1  0.3650015 0.5089387 0.3663412 0.4569710 0.4295549 0.3826942 0.4589773 #> 3:lag1  0.4023918 0.5021735 0.3508746 0.4014988 0.3979446 0.3553365 0.3837785 #> 4:lag1  0.3800337 0.5362528 0.3944679 0.4567635 0.4649509 0.3855636 0.4498807 #> 5:lag1  0.3382089 0.4663064 0.4085322 0.4005455 0.4685973 0.3375246 0.3886579 #> 6:lag1  0.4752121 0.4130513 0.2808726 0.3518701 0.3193445 0.3307465 0.3206004 #> 7:lag1  0.4130513 0.6036328 0.3798408 0.4662477 0.4420147 0.4058001 0.4470281 #> 8:lag1  0.2808726 0.3798408 0.5491326 0.3405561 0.3952388 0.2869567 0.3217771 #> 9:lag1  0.3518701 0.4662477 0.3405561 0.4842151 0.3928338 0.3904330 0.4013821 #> 10:lag1 0.3193445 0.4420147 0.3952388 0.3928338 0.4868287 0.3286525 0.3773011 #> 1:lag2  0.4494456 0.5514345 0.3899404 0.5305525 0.4466000 0.5080317 0.4356949 #> 2:lag2  0.4356582 0.6074586 0.4372571 0.5454311 0.5127078 0.4356949 0.5225428 #> 3:lag2  0.4802865 0.5993838 0.4187966 0.4792206 0.4749784 0.4045484 0.4369295 #> 4:lag2  0.4536003 0.6400602 0.4708286 0.5451833 0.5549556 0.4389617 0.5121864 #> 5:lag2  0.4036791 0.5565736 0.4876155 0.4780828 0.5593080 0.3842697 0.4424846 #> 6:lag2  0.5672032 0.4930094 0.3352437 0.4199848 0.3811629 0.3765528 0.3650015 #> 7:lag2  0.4930094 0.7204835 0.4533700 0.5565035 0.5275795 0.4620008 0.5089387 #> 8:lag2  0.3352437 0.4533700 0.6554331 0.4064806 0.4717488 0.3266984 0.3663412 #> 9:lag2  0.4199848 0.5565035 0.4064806 0.5779490 0.4688782 0.4445055 0.4569710 #> 10:lag2 0.3811629 0.5275795 0.4717488 0.4688782 0.5810685 0.3741688 0.4295549 #> 1:lag3  0.6511216 0.7988752 0.5649151 0.7686230 0.6469992 0.6063761 0.5200364 #> 2:lag3  0.6311475 0.8800385 0.6334639 0.7901779 0.7427709 0.5200364 0.6236961 #> 3:lag3  0.6958014 0.8683404 0.6067197 0.6942573 0.6881115 0.4828605 0.5215099 #> 4:lag3  0.6571406 0.9272691 0.6820996 0.7898189 0.8039763 0.5239356 0.6113350 #> 5:lag3  0.5848187 0.8063203 0.7064192 0.6926089 0.8102816 0.4586563 0.5281404 #> 6:lag3  0.8217197 0.7142335 0.4856748 0.6084411 0.5521990 0.4494456 0.4356582 #> 7:lag3  0.7142335 1.0437801 0.6568070 0.8062188 0.7643159 0.5514345 0.6074586 #> 8:lag3  0.4856748 0.6568070 0.9495403 0.5888773 0.6834328 0.3899404 0.4372571 #> 9:lag3  0.6084411 0.8062188 0.5888773 0.8372873 0.6792741 0.5305525 0.5454311 #> 10:lag3 0.5521990 0.7643159 0.6834328 0.6792741 0.8418067 0.4466000 0.5127078 #> 1:lag4  0.4494456 0.5514345 0.3899404 0.5305525 0.4466000 0.8784702 0.7533880 #> 2:lag4  0.4356582 0.6074586 0.4372571 0.5454311 0.5127078 0.7533880 0.9035621 #> 3:lag4  0.4802865 0.5993838 0.4187966 0.4792206 0.4749784 0.6995305 0.7555227 #> 4:lag4  0.4536003 0.6400602 0.4708286 0.5451833 0.5549556 0.7590369 0.8856543 #> 5:lag4  0.4036791 0.5565736 0.4876155 0.4780828 0.5593080 0.6644653 0.7651284 #> 6:lag4  0.5672032 0.4930094 0.3352437 0.4199848 0.3811629 0.6511216 0.6311475 #> 7:lag4  0.4930094 0.7204835 0.4533700 0.5565035 0.5275795 0.7988752 0.8800385 #> 8:lag4  0.3352437 0.4533700 0.6554331 0.4064806 0.4717488 0.5649151 0.6334639 #> 9:lag4  0.4199848 0.5565035 0.4064806 0.5779490 0.4688782 0.7686230 0.7901779 #> 10:lag4 0.3811629 0.5275795 0.4717488 0.4688782 0.5810685 0.6469992 0.7427709 #> 1:lag5  0.3765528 0.4620008 0.3266984 0.4445055 0.3741688 0.6063761 0.5200364 #> 2:lag5  0.3650015 0.5089387 0.3663412 0.4569710 0.4295549 0.5200364 0.6236961 #> 3:lag5  0.4023918 0.5021735 0.3508746 0.4014988 0.3979446 0.4828605 0.5215099 #> 4:lag5  0.3800337 0.5362528 0.3944679 0.4567635 0.4649509 0.5239356 0.6113350 #> 5:lag5  0.3382089 0.4663064 0.4085322 0.4005455 0.4685973 0.4586563 0.5281404 #> 6:lag5  0.4752121 0.4130513 0.2808726 0.3518701 0.3193445 0.4494456 0.4356582 #> 7:lag5  0.4130513 0.6036328 0.3798408 0.4662477 0.4420147 0.5514345 0.6074586 #> 8:lag5  0.2808726 0.3798408 0.5491326 0.3405561 0.3952388 0.3899404 0.4372571 #> 9:lag5  0.3518701 0.4662477 0.3405561 0.4842151 0.3928338 0.5305525 0.5454311 #> 10:lag5 0.3193445 0.4420147 0.3952388 0.3928338 0.4868287 0.4466000 0.5127078 #>            3:lag4    4:lag4    5:lag4    6:lag4    7:lag4    8:lag4    9:lag4 #> 1:t+0   0.3201693 0.3474048 0.3041202 0.2980129 0.3656385 0.2585569 0.3517923 #> 2:t+0   0.3457964 0.4053566 0.3501929 0.2888709 0.4027863 0.2899311 0.3616578 #> 3:t+0   0.4370915 0.3724082 0.3403272 0.3184625 0.3974321 0.2776906 0.3177557 #> 4:t+0   0.3724082 0.4586038 0.3851581 0.3007677 0.4244033 0.3121913 0.3614935 #> 5:t+0   0.3403272 0.3851581 0.4216532 0.2676666 0.3690461 0.3233221 0.3170013 #> 6:t+0   0.3184625 0.3007677 0.2676666 0.3760942 0.3268987 0.2222893 0.2784784 #> 7:t+0   0.3974321 0.4244033 0.3690461 0.3268987 0.4777294 0.3006151 0.3689996 #> 8:t+0   0.2776906 0.3121913 0.3233221 0.2222893 0.3006151 0.4345966 0.2695242 #> 9:t+0   0.3177557 0.3614935 0.3170013 0.2784784 0.3689996 0.2695242 0.3832194 #> 10:t+0  0.3149429 0.3679732 0.3708591 0.2527369 0.3498210 0.3128015 0.3108981 #> 1:lag1  0.3553365 0.3855636 0.3375246 0.3307465 0.4058001 0.2869567 0.3904330 #> 2:lag1  0.3837785 0.4498807 0.3886579 0.3206004 0.4470281 0.3217771 0.4013821 #> 3:lag1  0.4851014 0.4133134 0.3777085 0.3534423 0.4410859 0.3081920 0.3526579 #> 4:lag1  0.4133134 0.5089767 0.4274637 0.3338039 0.4710196 0.3464822 0.4011998 #> 5:lag1  0.3777085 0.4274637 0.4679673 0.2970670 0.4095819 0.3588357 0.3518206 #> 6:lag1  0.3534423 0.3338039 0.2970670 0.4174042 0.3628051 0.2467054 0.3090663 #> 7:lag1  0.4410859 0.4710196 0.4095819 0.3628051 0.5302030 0.3336345 0.4095303 #> 8:lag1  0.3081920 0.3464822 0.3588357 0.2467054 0.3336345 0.4823325 0.2991286 #> 9:lag1  0.3526579 0.4011998 0.3518206 0.3090663 0.4095303 0.2991286 0.4253121 #> 10:lag1 0.3495361 0.4083913 0.4115941 0.2804974 0.3882452 0.3471594 0.3450470 #> 1:lag2  0.4045484 0.4389617 0.3842697 0.3765528 0.4620008 0.3266984 0.4445055 #> 2:lag2  0.4369295 0.5121864 0.4424846 0.3650015 0.5089387 0.3663412 0.4569710 #> 3:lag2  0.5522849 0.4705547 0.4300188 0.4023918 0.5021735 0.3508746 0.4014988 #> 4:lag2  0.4705547 0.5794668 0.4866647 0.3800337 0.5362528 0.3944679 0.4567635 #> 5:lag2  0.4300188 0.4866647 0.5327779 0.3382089 0.4663064 0.4085322 0.4005455 #> 6:lag2  0.4023918 0.3800337 0.3382089 0.4752121 0.4130513 0.2808726 0.3518701 #> 7:lag2  0.5021735 0.5362528 0.4663064 0.4130513 0.6036328 0.3798408 0.4662477 #> 8:lag2  0.3508746 0.3944679 0.4085322 0.2808726 0.3798408 0.5491326 0.3405561 #> 9:lag2  0.4014988 0.4567635 0.4005455 0.3518701 0.4662477 0.3405561 0.4842151 #> 10:lag2 0.3979446 0.4649509 0.4685973 0.3193445 0.4420147 0.3952388 0.3928338 #> 1:lag3  0.4828605 0.5239356 0.4586563 0.4494456 0.5514345 0.3899404 0.5305525 #> 2:lag3  0.5215099 0.6113350 0.5281404 0.4356582 0.6074586 0.4372571 0.5454311 #> 3:lag3  0.6591957 0.5616442 0.5132614 0.4802865 0.5993838 0.4187966 0.4792206 #> 4:lag3  0.5616442 0.6916394 0.5808728 0.4536003 0.6400602 0.4708286 0.5451833 #> 5:lag3  0.5132614 0.5808728 0.6359125 0.4036791 0.5565736 0.4876155 0.4780828 #> 6:lag3  0.4802865 0.4536003 0.4036791 0.5672032 0.4930094 0.3352437 0.4199848 #> 7:lag3  0.5993838 0.6400602 0.5565736 0.4930094 0.7204835 0.4533700 0.5565035 #> 8:lag3  0.4187966 0.4708286 0.4876155 0.3352437 0.4533700 0.6554331 0.4064806 #> 9:lag3  0.4792206 0.5451833 0.4780828 0.4199848 0.5565035 0.4064806 0.5779490 #> 10:lag3 0.4749784 0.5549556 0.5593080 0.3811629 0.5275795 0.4717488 0.4688782 #> 1:lag4  0.6995305 0.7590369 0.6644653 0.6511216 0.7988752 0.5649151 0.7686230 #> 2:lag4  0.7555227 0.8856543 0.7651284 0.6311475 0.8800385 0.6334639 0.7901779 #> 3:lag4  0.9549912 0.8136662 0.7435730 0.6958014 0.8683404 0.6067197 0.6942573 #> 4:lag4  0.8136662 1.0019931 0.8415231 0.6571406 0.9272691 0.6820996 0.7898189 #> 5:lag4  0.7435730 0.8415231 0.9212603 0.5848187 0.8063203 0.7064192 0.6926089 #> 6:lag4  0.6958014 0.6571406 0.5848187 0.8217197 0.7142335 0.4856748 0.6084411 #> 7:lag4  0.8683404 0.9272691 0.8063203 0.7142335 1.0437801 0.6568070 0.8062188 #> 8:lag4  0.6067197 0.6820996 0.7064192 0.4856748 0.6568070 0.9495403 0.5888773 #> 9:lag4  0.6942573 0.7898189 0.6926089 0.6084411 0.8062188 0.5888773 0.8372873 #> 10:lag4 0.6881115 0.8039763 0.8102816 0.5521990 0.7643159 0.6834328 0.6792741 #> 1:lag5  0.4828605 0.5239356 0.4586563 0.4494456 0.5514345 0.3899404 0.5305525 #> 2:lag5  0.5215099 0.6113350 0.5281404 0.4356582 0.6074586 0.4372571 0.5454311 #> 3:lag5  0.6591957 0.5616442 0.5132614 0.4802865 0.5993838 0.4187966 0.4792206 #> 4:lag5  0.5616442 0.6916394 0.5808728 0.4536003 0.6400602 0.4708286 0.5451833 #> 5:lag5  0.5132614 0.5808728 0.6359125 0.4036791 0.5565736 0.4876155 0.4780828 #> 6:lag5  0.4802865 0.4536003 0.4036791 0.5672032 0.4930094 0.3352437 0.4199848 #> 7:lag5  0.5993838 0.6400602 0.5565736 0.4930094 0.7204835 0.4533700 0.5565035 #> 8:lag5  0.4187966 0.4708286 0.4876155 0.3352437 0.4533700 0.6554331 0.4064806 #> 9:lag5  0.4792206 0.5451833 0.4780828 0.4199848 0.5565035 0.4064806 0.5779490 #> 10:lag5 0.4749784 0.5549556 0.5593080 0.3811629 0.5275795 0.4717488 0.4688782 #>           10:lag4    1:lag5    2:lag5    3:lag5    4:lag5    5:lag5    6:lag5 #> 1:t+0   0.2961261 0.3682814 0.3158431 0.2932644 0.3182113 0.2785640 0.2729699 #> 2:t+0   0.3399600 0.3158431 0.3788006 0.3167380 0.3712931 0.3207650 0.2645962 #> 3:t+0   0.3149429 0.2932644 0.3167380 0.4003613 0.3411136 0.3117284 0.2917011 #> 4:t+0   0.3679732 0.3182113 0.3712931 0.3411136 0.4200659 0.3527920 0.2754933 #> 5:t+0   0.3708591 0.2785640 0.3207650 0.3117284 0.3527920 0.3862203 0.2451737 #> 6:t+0   0.2527369 0.2729699 0.2645962 0.2917011 0.2754933 0.2451737 0.3444898 #> 7:t+0   0.3498210 0.3349127 0.3689388 0.3640346 0.3887393 0.3380339 0.2994283 #> 8:t+0   0.3128015 0.2368296 0.2655673 0.2543553 0.2859568 0.2961523 0.2036096 #> 9:t+0   0.3108981 0.3222300 0.3312665 0.2910537 0.3311161 0.2903627 0.2550769 #> 10:t+0  0.3852879 0.2712417 0.3113921 0.2884772 0.3370513 0.3396946 0.2314986 #> 1:lag1  0.3286525 0.4020685 0.3448194 0.3201693 0.3474048 0.3041202 0.2980129 #> 2:lag1  0.3773011 0.3448194 0.4135528 0.3457964 0.4053566 0.3501929 0.2888709 #> 3:lag1  0.3495361 0.3201693 0.3457964 0.4370915 0.3724082 0.3403272 0.3184625 #> 4:lag1  0.4083913 0.3474048 0.4053566 0.3724082 0.4586038 0.3851581 0.3007677 #> 5:lag1  0.4115941 0.3041202 0.3501929 0.3403272 0.3851581 0.4216532 0.2676666 #> 6:lag1  0.2804974 0.2980129 0.2888709 0.3184625 0.3007677 0.2676666 0.3760942 #> 7:lag1  0.3882452 0.3656385 0.4027863 0.3974321 0.4244033 0.3690461 0.3268987 #> 8:lag1  0.3471594 0.2585569 0.2899311 0.2776906 0.3121913 0.3233221 0.2222893 #> 9:lag1  0.3450470 0.3517923 0.3616578 0.3177557 0.3614935 0.3170013 0.2784784 #> 10:lag1 0.4276077 0.2961261 0.3399600 0.3149429 0.3679732 0.3708591 0.2527369 #> 1:lag2  0.3741688 0.4462315 0.3826942 0.3553365 0.3855636 0.3375246 0.3307465 #> 2:lag2  0.4295549 0.3826942 0.4589773 0.3837785 0.4498807 0.3886579 0.3206004 #> 3:lag2  0.3979446 0.3553365 0.3837785 0.4851014 0.4133134 0.3777085 0.3534423 #> 4:lag2  0.4649509 0.3855636 0.4498807 0.4133134 0.5089767 0.4274637 0.3338039 #> 5:lag2  0.4685973 0.3375246 0.3886579 0.3777085 0.4274637 0.4679673 0.2970670 #> 6:lag2  0.3193445 0.3307465 0.3206004 0.3534423 0.3338039 0.2970670 0.4174042 #> 7:lag2  0.4420147 0.4058001 0.4470281 0.4410859 0.4710196 0.4095819 0.3628051 #> 8:lag2  0.3952388 0.2869567 0.3217771 0.3081920 0.3464822 0.3588357 0.2467054 #> 9:lag2  0.3928338 0.3904330 0.4013821 0.3526579 0.4011998 0.3518206 0.3090663 #> 10:lag2 0.4868287 0.3286525 0.3773011 0.3495361 0.4083913 0.4115941 0.2804974 #> 1:lag3  0.4466000 0.5080317 0.4356949 0.4045484 0.4389617 0.3842697 0.3765528 #> 2:lag3  0.5127078 0.4356949 0.5225428 0.4369295 0.5121864 0.4424846 0.3650015 #> 3:lag3  0.4749784 0.4045484 0.4369295 0.5522849 0.4705547 0.4300188 0.4023918 #> 4:lag3  0.5549556 0.4389617 0.5121864 0.4705547 0.5794668 0.4866647 0.3800337 #> 5:lag3  0.5593080 0.3842697 0.4424846 0.4300188 0.4866647 0.5327779 0.3382089 #> 6:lag3  0.3811629 0.3765528 0.3650015 0.4023918 0.3800337 0.3382089 0.4752121 #> 7:lag3  0.5275795 0.4620008 0.5089387 0.5021735 0.5362528 0.4663064 0.4130513 #> 8:lag3  0.4717488 0.3266984 0.3663412 0.3508746 0.3944679 0.4085322 0.2808726 #> 9:lag3  0.4688782 0.4445055 0.4569710 0.4014988 0.4567635 0.4005455 0.3518701 #> 10:lag3 0.5810685 0.3741688 0.4295549 0.3979446 0.4649509 0.4685973 0.3193445 #> 1:lag4  0.6469992 0.6063761 0.5200364 0.4828605 0.5239356 0.4586563 0.4494456 #> 2:lag4  0.7427709 0.5200364 0.6236961 0.5215099 0.6113350 0.5281404 0.4356582 #> 3:lag4  0.6881115 0.4828605 0.5215099 0.6591957 0.5616442 0.5132614 0.4802865 #> 4:lag4  0.8039763 0.5239356 0.6113350 0.5616442 0.6916394 0.5808728 0.4536003 #> 5:lag4  0.8102816 0.4586563 0.5281404 0.5132614 0.5808728 0.6359125 0.4036791 #> 6:lag4  0.5521990 0.4494456 0.4356582 0.4802865 0.4536003 0.4036791 0.5672032 #> 7:lag4  0.7643159 0.5514345 0.6074586 0.5993838 0.6400602 0.5565736 0.4930094 #> 8:lag4  0.6834328 0.3899404 0.4372571 0.4187966 0.4708286 0.4876155 0.3352437 #> 9:lag4  0.6792741 0.5305525 0.5454311 0.4792206 0.5451833 0.4780828 0.4199848 #> 10:lag4 0.8418067 0.4466000 0.5127078 0.4749784 0.5549556 0.5593080 0.3811629 #> 1:lag5  0.4466000 0.8784702 0.7533880 0.6995305 0.7590369 0.6644653 0.6511216 #> 2:lag5  0.5127078 0.7533880 0.9035621 0.7555227 0.8856543 0.7651284 0.6311475 #> 3:lag5  0.4749784 0.6995305 0.7555227 0.9549912 0.8136662 0.7435730 0.6958014 #> 4:lag5  0.5549556 0.7590369 0.8856543 0.8136662 1.0019931 0.8415231 0.6571406 #> 5:lag5  0.5593080 0.6644653 0.7651284 0.7435730 0.8415231 0.9212603 0.5848187 #> 6:lag5  0.3811629 0.6511216 0.6311475 0.6958014 0.6571406 0.5848187 0.8217197 #> 7:lag5  0.5275795 0.7988752 0.8800385 0.8683404 0.9272691 0.8063203 0.7142335 #> 8:lag5  0.4717488 0.5649151 0.6334639 0.6067197 0.6820996 0.7064192 0.4856748 #> 9:lag5  0.4688782 0.7686230 0.7901779 0.6942573 0.7898189 0.6926089 0.6084411 #> 10:lag5 0.5810685 0.6469992 0.7427709 0.6881115 0.8039763 0.8102816 0.5521990 #>            7:lag5    8:lag5    9:lag5   10:lag5 #> 1:t+0   0.3349127 0.2368296 0.3222300 0.2712417 #> 2:t+0   0.3689388 0.2655673 0.3312665 0.3113921 #> 3:t+0   0.3640346 0.2543553 0.2910537 0.2884772 #> 4:t+0   0.3887393 0.2859568 0.3311161 0.3370513 #> 5:t+0   0.3380339 0.2961523 0.2903627 0.3396946 #> 6:t+0   0.2994283 0.2036096 0.2550769 0.2314986 #> 7:t+0   0.4375843 0.2753534 0.3379913 0.3204244 #> 8:t+0   0.2753534 0.3980761 0.2468752 0.2865157 #> 9:t+0   0.3379913 0.2468752 0.3510162 0.2847723 #> 10:t+0  0.3204244 0.2865157 0.2847723 0.3529109 #> 1:lag1  0.3656385 0.2585569 0.3517923 0.2961261 #> 2:lag1  0.4027863 0.2899311 0.3616578 0.3399600 #> 3:lag1  0.3974321 0.2776906 0.3177557 0.3149429 #> 4:lag1  0.4244033 0.3121913 0.3614935 0.3679732 #> 5:lag1  0.3690461 0.3233221 0.3170013 0.3708591 #> 6:lag1  0.3268987 0.2222893 0.2784784 0.2527369 #> 7:lag1  0.4777294 0.3006151 0.3689996 0.3498210 #> 8:lag1  0.3006151 0.4345966 0.2695242 0.3128015 #> 9:lag1  0.3689996 0.2695242 0.3832194 0.3108981 #> 10:lag1 0.3498210 0.3128015 0.3108981 0.3852879 #> 1:lag2  0.4058001 0.2869567 0.3904330 0.3286525 #> 2:lag2  0.4470281 0.3217771 0.4013821 0.3773011 #> 3:lag2  0.4410859 0.3081920 0.3526579 0.3495361 #> 4:lag2  0.4710196 0.3464822 0.4011998 0.4083913 #> 5:lag2  0.4095819 0.3588357 0.3518206 0.4115941 #> 6:lag2  0.3628051 0.2467054 0.3090663 0.2804974 #> 7:lag2  0.5302030 0.3336345 0.4095303 0.3882452 #> 8:lag2  0.3336345 0.4823325 0.2991286 0.3471594 #> 9:lag2  0.4095303 0.2991286 0.4253121 0.3450470 #> 10:lag2 0.3882452 0.3471594 0.3450470 0.4276077 #> 1:lag3  0.4620008 0.3266984 0.4445055 0.3741688 #> 2:lag3  0.5089387 0.3663412 0.4569710 0.4295549 #> 3:lag3  0.5021735 0.3508746 0.4014988 0.3979446 #> 4:lag3  0.5362528 0.3944679 0.4567635 0.4649509 #> 5:lag3  0.4663064 0.4085322 0.4005455 0.4685973 #> 6:lag3  0.4130513 0.2808726 0.3518701 0.3193445 #> 7:lag3  0.6036328 0.3798408 0.4662477 0.4420147 #> 8:lag3  0.3798408 0.5491326 0.3405561 0.3952388 #> 9:lag3  0.4662477 0.3405561 0.4842151 0.3928338 #> 10:lag3 0.4420147 0.3952388 0.3928338 0.4868287 #> 1:lag4  0.5514345 0.3899404 0.5305525 0.4466000 #> 2:lag4  0.6074586 0.4372571 0.5454311 0.5127078 #> 3:lag4  0.5993838 0.4187966 0.4792206 0.4749784 #> 4:lag4  0.6400602 0.4708286 0.5451833 0.5549556 #> 5:lag4  0.5565736 0.4876155 0.4780828 0.5593080 #> 6:lag4  0.4930094 0.3352437 0.4199848 0.3811629 #> 7:lag4  0.7204835 0.4533700 0.5565035 0.5275795 #> 8:lag4  0.4533700 0.6554331 0.4064806 0.4717488 #> 9:lag4  0.5565035 0.4064806 0.5779490 0.4688782 #> 10:lag4 0.5275795 0.4717488 0.4688782 0.5810685 #> 1:lag5  0.7988752 0.5649151 0.7686230 0.6469992 #> 2:lag5  0.8800385 0.6334639 0.7901779 0.7427709 #> 3:lag5  0.8683404 0.6067197 0.6942573 0.6881115 #> 4:lag5  0.9272691 0.6820996 0.7898189 0.8039763 #> 5:lag5  0.8063203 0.7064192 0.6926089 0.8102816 #> 6:lag5  0.7142335 0.4856748 0.6084411 0.5521990 #> 7:lag5  1.0437801 0.6568070 0.8062188 0.7643159 #> 8:lag5  0.6568070 0.9495403 0.5888773 0.6834328 #> 9:lag5  0.8062188 0.5888773 0.8372873 0.6792741 #> 10:lag5 0.7643159 0.6834328 0.6792741 0.8418067 #>  #> $`Regime 2` #>              1:t+0      2:t+0      3:t+0      4:t+0      5:t+0      6:t+0 #> 1:t+0   0.74243608 0.57772076 0.40057075 0.51891242 0.38438119 0.41163761 #> 2:t+0   0.57772076 0.97441576 0.55587564 0.86755428 0.64831598 0.40836953 #> 3:t+0   0.40057075 0.55587564 0.86070590 0.60595197 0.51631009 0.47825034 #> 4:t+0   0.51891242 0.86755428 0.60595197 1.01580343 0.74652335 0.40186735 #> 5:t+0   0.38438119 0.64831598 0.51631009 0.74652335 0.98011610 0.30766916 #> 6:t+0   0.41163761 0.40836953 0.47825034 0.40186735 0.30766916 0.88957103 #> 7:t+0   0.51744949 0.74114574 0.62575685 0.75781660 0.57009754 0.44763230 #> 8:t+0   0.22193107 0.36048101 0.26537164 0.39665675 0.50056402 0.15796924 #> 9:t+0   0.64230349 0.76153813 0.45902896 0.67809094 0.51385984 0.38993004 #> 10:t+0  0.39239624 0.65172694 0.44972077 0.71740432 0.80029073 0.28387999 #> 1:lag1  0.55436738 0.43137658 0.29910097 0.38746516 0.28701244 0.30736446 #> 2:lag1  0.43137658 0.72758359 0.41506512 0.64779151 0.48408912 0.30492422 #> 3:lag1  0.29910097 0.41506512 0.64267791 0.45245647 0.38552204 0.35710332 #> 4:lag1  0.38746516 0.64779151 0.45245647 0.75848723 0.55741929 0.30006913 #> 5:lag1  0.28701244 0.48408912 0.38552204 0.55741929 0.73183996 0.22973256 #> 6:lag1  0.30736446 0.30492422 0.35710332 0.30006913 0.22973256 0.66423113 #> 7:lag1  0.38637281 0.55340390 0.46724451 0.56585181 0.42568443 0.33424122 #> 8:lag1  0.16571305 0.26916648 0.19814955 0.29617844 0.37376465 0.11795358 #> 9:lag1  0.47959967 0.56863063 0.34275096 0.50632169 0.38369247 0.29115569 #> 10:lag1 0.29299718 0.48663604 0.33580066 0.53567649 0.59756669 0.21196950 #> 1:lag2  0.35320095 0.27484052 0.19056451 0.24686348 0.18286261 0.19582938 #> 2:lag2  0.27484052 0.46356121 0.26444809 0.41272374 0.30842496 0.19427464 #> 3:lag2  0.19056451 0.26444809 0.40946574 0.28827103 0.24562548 0.22751922 #> 4:lag2  0.24686348 0.41272374 0.28827103 0.48325067 0.35514539 0.19118135 #> 5:lag2  0.18286261 0.30842496 0.24562548 0.35514539 0.46627305 0.14636821 #> 6:lag2  0.19582938 0.19427464 0.22751922 0.19118135 0.14636821 0.42319782 #> 7:lag2  0.24616752 0.35258709 0.29769285 0.36051796 0.27121391 0.21295322 #> 8:lag2  0.10557981 0.17149252 0.12624590 0.18870249 0.23813455 0.07515110 #> 9:lag2  0.30556462 0.36228841 0.21837498 0.32258987 0.24445981 0.18550238 #> 10:lag2 0.18667563 0.31004766 0.21394677 0.34129253 0.38072428 0.13505093 #> 1:lag3  0.23235077 0.18080191 0.12536153 0.16239741 0.12029489 0.12882498 #> 2:lag3  0.18080191 0.30495050 0.17396532 0.27150742 0.20289520 0.12780221 #> 3:lag3  0.12536153 0.17396532 0.26936417 0.18963708 0.16158300 0.14967192 #> 4:lag3  0.16239741 0.27150742 0.18963708 0.31790307 0.23362991 0.12576731 #> 5:lag3  0.12029489 0.20289520 0.16158300 0.23362991 0.30673446 0.09628730 #> 6:lag3  0.12882498 0.12780221 0.14967192 0.12576731 0.09628730 0.27839772 #> 7:lag3  0.16193958 0.23194695 0.19583516 0.23716422 0.17841617 0.14008978 #> 8:lag3  0.06945494 0.11281515 0.08304998 0.12413661 0.15665515 0.04943762 #> 9:lag3  0.20101355 0.23832889 0.14365645 0.21221349 0.16081617 0.12203144 #> 10:lag3 0.12280326 0.20396268 0.14074339 0.22451690 0.25045681 0.08884231 #> 1:lag4  0.16211023 0.12614480 0.08746425 0.11330405 0.08392928 0.08988069 #> 2:lag4  0.12614480 0.21276278 0.12137493 0.18942968 0.14155920 0.08916711 #> 3:lag4  0.08746425 0.12137493 0.18793434 0.13230906 0.11273583 0.10442552 #> 4:lag4  0.11330405 0.18942968 0.13230906 0.22179974 0.16300269 0.08774737 #> 5:lag4  0.08392928 0.14155920 0.11273583 0.16300269 0.21400745 0.06717928 #> 6:lag4  0.08988069 0.08916711 0.10442552 0.08774737 0.06717928 0.19423702 #> 7:lag4  0.11298462 0.16182849 0.13663343 0.16546856 0.12448027 0.09774010 #> 8:lag4  0.04845844 0.07871070 0.05794365 0.08660964 0.10929769 0.03449244 #> 9:lag4  0.14024638 0.16628115 0.10022855 0.14806053 0.11220082 0.08514086 #> 10:lag4 0.08567936 0.14230398 0.09819612 0.15664457 0.17474275 0.06198493 #> 1:lag5  0.11915243 0.09271752 0.06428698 0.08327946 0.06168875 0.06606309 #> 2:lag5  0.09271752 0.15638249 0.08921163 0.13923245 0.10404724 0.06553860 #> 3:lag5  0.06428698 0.08921163 0.13813337 0.09724830 0.08286181 0.07675366 #> 4:lag5  0.08327946 0.13923245 0.09724830 0.16302473 0.11980839 0.06449507 #> 5:lag5  0.06168875 0.10404724 0.08286181 0.11980839 0.15729733 0.04937735 #> 6:lag5  0.06606309 0.06553860 0.07675366 0.06449507 0.04937735 0.14276589 #> 7:lag5  0.08304467 0.11894534 0.10042676 0.12162082 0.09149408 0.07183982 #> 8:lag5  0.03561738 0.05785304 0.04258909 0.06365883 0.08033475 0.02535224 #> 9:lag5  0.10308230 0.12221808 0.07366885 0.10882577 0.08246858 0.06257927 #> 10:lag5 0.06297507 0.10459466 0.07217500 0.11513512 0.12843743 0.04555946 #>              7:t+0      8:t+0      9:t+0     10:t+0     1:lag1     2:lag1 #> 1:t+0   0.51744949 0.22193107 0.64230349 0.39239624 0.55436738 0.43137658 #> 2:t+0   0.74114574 0.36048101 0.76153813 0.65172694 0.43137658 0.72758359 #> 3:t+0   0.62575685 0.26537164 0.45902896 0.44972077 0.29910097 0.41506512 #> 4:t+0   0.75781660 0.39665675 0.67809094 0.71740432 0.38746516 0.64779151 #> 5:t+0   0.57009754 0.50056402 0.51385984 0.80029073 0.28701244 0.48408912 #> 6:t+0   0.44763230 0.15796924 0.38993004 0.28387999 0.30736446 0.30492422 #> 7:t+0   0.84413453 0.29673987 0.61835070 0.53530964 0.38637281 0.55340390 #> 8:t+0   0.29673987 1.09194000 0.30409368 0.50030824 0.16571305 0.26916648 #> 9:t+0   0.61835070 0.30409368 0.88011587 0.53423011 0.47959967 0.56863063 #> 10:t+0  0.53530964 0.50030824 0.53423011 0.90780347 0.29299718 0.48663604 #> 1:lag1  0.38637281 0.16571305 0.47959967 0.29299718 0.74243608 0.57772076 #> 2:lag1  0.55340390 0.26916648 0.56863063 0.48663604 0.57772076 0.97441576 #> 3:lag1  0.46724451 0.19814955 0.34275096 0.33580066 0.40057075 0.55587564 #> 4:lag1  0.56585181 0.29617844 0.50632169 0.53567649 0.51891242 0.86755428 #> 5:lag1  0.42568443 0.37376465 0.38369247 0.59756669 0.38438119 0.64831598 #> 6:lag1  0.33424122 0.11795358 0.29115569 0.21196950 0.41163761 0.40836953 #> 7:lag1  0.63030429 0.22157181 0.46171443 0.39970875 0.51744949 0.74114574 #> 8:lag1  0.22157181 0.81533741 0.22706280 0.37357366 0.22193107 0.36048101 #> 9:lag1  0.46171443 0.22706280 0.65717109 0.39890269 0.64230349 0.76153813 #> 10:lag1 0.39970875 0.37357366 0.39890269 0.67784505 0.39239624 0.65172694 #> 1:lag2  0.24616752 0.10557981 0.30556462 0.18667563 0.55436738 0.43137658 #> 2:lag2  0.35258709 0.17149252 0.36228841 0.31004766 0.43137658 0.72758359 #> 3:lag2  0.29769285 0.12624590 0.21837498 0.21394677 0.29910097 0.41506512 #> 4:lag2  0.36051796 0.18870249 0.32258987 0.34129253 0.38746516 0.64779151 #> 5:lag2  0.27121391 0.23813455 0.24445981 0.38072428 0.28701244 0.48408912 #> 6:lag2  0.21295322 0.07515110 0.18550238 0.13505093 0.30736446 0.30492422 #> 7:lag2  0.40158220 0.14116879 0.29416950 0.25466417 0.38637281 0.55340390 #> 8:lag2  0.14116879 0.51947131 0.14466724 0.23801287 0.16571305 0.26916648 #> 9:lag2  0.29416950 0.14466724 0.41869970 0.25415061 0.47959967 0.56863063 #> 10:lag2 0.25466417 0.23801287 0.25415061 0.43187158 0.29299718 0.48663604 #> 1:lag3  0.16193958 0.06945494 0.20101355 0.12280326 0.35320095 0.27484052 #> 2:lag3  0.23194695 0.11281515 0.23832889 0.20396268 0.27484052 0.46356121 #> 3:lag3  0.19583516 0.08304998 0.14365645 0.14074339 0.19056451 0.26444809 #> 4:lag3  0.23716422 0.12413661 0.21221349 0.22451690 0.24686348 0.41272374 #> 5:lag3  0.17841617 0.15665515 0.16081617 0.25045681 0.18286261 0.30842496 #> 6:lag3  0.14008978 0.04943762 0.12203144 0.08884231 0.19582938 0.19427464 #> 7:lag3  0.26417804 0.09286690 0.19351735 0.16752904 0.24616752 0.35258709 #> 8:lag3  0.09286690 0.34173056 0.09516833 0.15657510 0.10557981 0.17149252 #> 9:lag3  0.19351735 0.09516833 0.27543866 0.16719120 0.30556462 0.36228841 #> 10:lag3 0.16752904 0.15657510 0.16719120 0.28410370 0.18667563 0.31004766 #> 1:lag4  0.11298462 0.04845844 0.14024638 0.08567936 0.23235077 0.18080191 #> 2:lag4  0.16182849 0.07871070 0.16628115 0.14230398 0.18080191 0.30495050 #> 3:lag4  0.13663343 0.05794365 0.10022855 0.09819612 0.12536153 0.17396532 #> 4:lag4  0.16546856 0.08660964 0.14806053 0.15664457 0.16239741 0.27150742 #> 5:lag4  0.12448027 0.10929769 0.11220082 0.17474275 0.12029489 0.20289520 #> 6:lag4  0.09774010 0.03449244 0.08514086 0.06198493 0.12882498 0.12780221 #> 7:lag4  0.18431600 0.06479288 0.13501631 0.11688437 0.16193958 0.23194695 #> 8:lag4  0.06479288 0.23842409 0.06639858 0.10924184 0.06945494 0.11281515 #> 9:lag4  0.13501631 0.06639858 0.19217249 0.11664865 0.20101355 0.23832889 #> 10:lag4 0.11688437 0.10924184 0.11664865 0.19821805 0.12280326 0.20396268 #> 1:lag5  0.08304467 0.03561738 0.10308230 0.06297507 0.16211023 0.12614480 #> 2:lag5  0.11894534 0.05785304 0.12221808 0.10459466 0.12614480 0.21276278 #> 3:lag5  0.10042676 0.04258909 0.07366885 0.07217500 0.08746425 0.12137493 #> 4:lag5  0.12162082 0.06365883 0.10882577 0.11513512 0.11330405 0.18942968 #> 5:lag5  0.09149408 0.08033475 0.08246858 0.12843743 0.08392928 0.14155920 #> 6:lag5  0.07183982 0.02535224 0.06257927 0.04555946 0.08988069 0.08916711 #> 7:lag5  0.13547385 0.04762333 0.09923815 0.08591102 0.11298462 0.16182849 #> 8:lag5  0.04762333 0.17524377 0.04880353 0.08029370 0.04845844 0.07871070 #> 9:lag5  0.09923815 0.04880353 0.14124844 0.08573777 0.14024638 0.16628115 #> 10:lag5 0.08591102 0.08029370 0.08573777 0.14569198 0.08567936 0.14230398 #>             3:lag1     4:lag1     5:lag1     6:lag1     7:lag1     8:lag1 #> 1:t+0   0.29910097 0.38746516 0.28701244 0.30736446 0.38637281 0.16571305 #> 2:t+0   0.41506512 0.64779151 0.48408912 0.30492422 0.55340390 0.26916648 #> 3:t+0   0.64267791 0.45245647 0.38552204 0.35710332 0.46724451 0.19814955 #> 4:t+0   0.45245647 0.75848723 0.55741929 0.30006913 0.56585181 0.29617844 #> 5:t+0   0.38552204 0.55741929 0.73183996 0.22973256 0.42568443 0.37376465 #> 6:t+0   0.35710332 0.30006913 0.22973256 0.66423113 0.33424122 0.11795358 #> 7:t+0   0.46724451 0.56585181 0.42568443 0.33424122 0.63030429 0.22157181 #> 8:t+0   0.19814955 0.29617844 0.37376465 0.11795358 0.22157181 0.81533741 #> 9:t+0   0.34275096 0.50632169 0.38369247 0.29115569 0.46171443 0.22706280 #> 10:t+0  0.33580066 0.53567649 0.59756669 0.21196950 0.39970875 0.37357366 #> 1:lag1  0.40057075 0.51891242 0.38438119 0.41163761 0.51744949 0.22193107 #> 2:lag1  0.55587564 0.86755428 0.64831598 0.40836953 0.74114574 0.36048101 #> 3:lag1  0.86070590 0.60595197 0.51631009 0.47825034 0.62575685 0.26537164 #> 4:lag1  0.60595197 1.01580343 0.74652335 0.40186735 0.75781660 0.39665675 #> 5:lag1  0.51631009 0.74652335 0.98011610 0.30766916 0.57009754 0.50056402 #> 6:lag1  0.47825034 0.40186735 0.30766916 0.88957103 0.44763230 0.15796924 #> 7:lag1  0.62575685 0.75781660 0.57009754 0.44763230 0.84413453 0.29673987 #> 8:lag1  0.26537164 0.39665675 0.50056402 0.15796924 0.29673987 1.09194000 #> 9:lag1  0.45902896 0.67809094 0.51385984 0.38993004 0.61835070 0.30409368 #> 10:lag1 0.44972077 0.71740432 0.80029073 0.28387999 0.53530964 0.50030824 #> 1:lag2  0.29910097 0.38746516 0.28701244 0.30736446 0.38637281 0.16571305 #> 2:lag2  0.41506512 0.64779151 0.48408912 0.30492422 0.55340390 0.26916648 #> 3:lag2  0.64267791 0.45245647 0.38552204 0.35710332 0.46724451 0.19814955 #> 4:lag2  0.45245647 0.75848723 0.55741929 0.30006913 0.56585181 0.29617844 #> 5:lag2  0.38552204 0.55741929 0.73183996 0.22973256 0.42568443 0.37376465 #> 6:lag2  0.35710332 0.30006913 0.22973256 0.66423113 0.33424122 0.11795358 #> 7:lag2  0.46724451 0.56585181 0.42568443 0.33424122 0.63030429 0.22157181 #> 8:lag2  0.19814955 0.29617844 0.37376465 0.11795358 0.22157181 0.81533741 #> 9:lag2  0.34275096 0.50632169 0.38369247 0.29115569 0.46171443 0.22706280 #> 10:lag2 0.33580066 0.53567649 0.59756669 0.21196950 0.39970875 0.37357366 #> 1:lag3  0.19056451 0.24686348 0.18286261 0.19582938 0.24616752 0.10557981 #> 2:lag3  0.26444809 0.41272374 0.30842496 0.19427464 0.35258709 0.17149252 #> 3:lag3  0.40946574 0.28827103 0.24562548 0.22751922 0.29769285 0.12624590 #> 4:lag3  0.28827103 0.48325067 0.35514539 0.19118135 0.36051796 0.18870249 #> 5:lag3  0.24562548 0.35514539 0.46627305 0.14636821 0.27121391 0.23813455 #> 6:lag3  0.22751922 0.19118135 0.14636821 0.42319782 0.21295322 0.07515110 #> 7:lag3  0.29769285 0.36051796 0.27121391 0.21295322 0.40158220 0.14116879 #> 8:lag3  0.12624590 0.18870249 0.23813455 0.07515110 0.14116879 0.51947131 #> 9:lag3  0.21837498 0.32258987 0.24445981 0.18550238 0.29416950 0.14466724 #> 10:lag3 0.21394677 0.34129253 0.38072428 0.13505093 0.25466417 0.23801287 #> 1:lag4  0.12536153 0.16239741 0.12029489 0.12882498 0.16193958 0.06945494 #> 2:lag4  0.17396532 0.27150742 0.20289520 0.12780221 0.23194695 0.11281515 #> 3:lag4  0.26936417 0.18963708 0.16158300 0.14967192 0.19583516 0.08304998 #> 4:lag4  0.18963708 0.31790307 0.23362991 0.12576731 0.23716422 0.12413661 #> 5:lag4  0.16158300 0.23362991 0.30673446 0.09628730 0.17841617 0.15665515 #> 6:lag4  0.14967192 0.12576731 0.09628730 0.27839772 0.14008978 0.04943762 #> 7:lag4  0.19583516 0.23716422 0.17841617 0.14008978 0.26417804 0.09286690 #> 8:lag4  0.08304998 0.12413661 0.15665515 0.04943762 0.09286690 0.34173056 #> 9:lag4  0.14365645 0.21221349 0.16081617 0.12203144 0.19351735 0.09516833 #> 10:lag4 0.14074339 0.22451690 0.25045681 0.08884231 0.16752904 0.15657510 #> 1:lag5  0.08746425 0.11330405 0.08392928 0.08988069 0.11298462 0.04845844 #> 2:lag5  0.12137493 0.18942968 0.14155920 0.08916711 0.16182849 0.07871070 #> 3:lag5  0.18793434 0.13230906 0.11273583 0.10442552 0.13663343 0.05794365 #> 4:lag5  0.13230906 0.22179974 0.16300269 0.08774737 0.16546856 0.08660964 #> 5:lag5  0.11273583 0.16300269 0.21400745 0.06717928 0.12448027 0.10929769 #> 6:lag5  0.10442552 0.08774737 0.06717928 0.19423702 0.09774010 0.03449244 #> 7:lag5  0.13663343 0.16546856 0.12448027 0.09774010 0.18431600 0.06479288 #> 8:lag5  0.05794365 0.08660964 0.10929769 0.03449244 0.06479288 0.23842409 #> 9:lag5  0.10022855 0.14806053 0.11220082 0.08514086 0.13501631 0.06639858 #> 10:lag5 0.09819612 0.15664457 0.17474275 0.06198493 0.11688437 0.10924184 #>             9:lag1    10:lag1     1:lag2    2:lag2     3:lag2    4:lag2 #> 1:t+0   0.47959967 0.29299718 0.35320095 0.2748405 0.19056451 0.2468635 #> 2:t+0   0.56863063 0.48663604 0.27484052 0.4635612 0.26444809 0.4127237 #> 3:t+0   0.34275096 0.33580066 0.19056451 0.2644481 0.40946574 0.2882710 #> 4:t+0   0.50632169 0.53567649 0.24686348 0.4127237 0.28827103 0.4832507 #> 5:t+0   0.38369247 0.59756669 0.18286261 0.3084250 0.24562548 0.3551454 #> 6:t+0   0.29115569 0.21196950 0.19582938 0.1942746 0.22751922 0.1911813 #> 7:t+0   0.46171443 0.39970875 0.24616752 0.3525871 0.29769285 0.3605180 #> 8:t+0   0.22706280 0.37357366 0.10557981 0.1714925 0.12624590 0.1887025 #> 9:t+0   0.65717109 0.39890269 0.30556462 0.3622884 0.21837498 0.3225899 #> 10:t+0  0.39890269 0.67784505 0.18667563 0.3100477 0.21394677 0.3412925 #> 1:lag1  0.64230349 0.39239624 0.55436738 0.4313766 0.29910097 0.3874652 #> 2:lag1  0.76153813 0.65172694 0.43137658 0.7275836 0.41506512 0.6477915 #> 3:lag1  0.45902896 0.44972077 0.29910097 0.4150651 0.64267791 0.4524565 #> 4:lag1  0.67809094 0.71740432 0.38746516 0.6477915 0.45245647 0.7584872 #> 5:lag1  0.51385984 0.80029073 0.28701244 0.4840891 0.38552204 0.5574193 #> 6:lag1  0.38993004 0.28387999 0.30736446 0.3049242 0.35710332 0.3000691 #> 7:lag1  0.61835070 0.53530964 0.38637281 0.5534039 0.46724451 0.5658518 #> 8:lag1  0.30409368 0.50030824 0.16571305 0.2691665 0.19814955 0.2961784 #> 9:lag1  0.88011587 0.53423011 0.47959967 0.5686306 0.34275096 0.5063217 #> 10:lag1 0.53423011 0.90780347 0.29299718 0.4866360 0.33580066 0.5356765 #> 1:lag2  0.47959967 0.29299718 0.74243608 0.5777208 0.40057075 0.5189124 #> 2:lag2  0.56863063 0.48663604 0.57772076 0.9744158 0.55587564 0.8675543 #> 3:lag2  0.34275096 0.33580066 0.40057075 0.5558756 0.86070590 0.6059520 #> 4:lag2  0.50632169 0.53567649 0.51891242 0.8675543 0.60595197 1.0158034 #> 5:lag2  0.38369247 0.59756669 0.38438119 0.6483160 0.51631009 0.7465233 #> 6:lag2  0.29115569 0.21196950 0.41163761 0.4083695 0.47825034 0.4018674 #> 7:lag2  0.46171443 0.39970875 0.51744949 0.7411457 0.62575685 0.7578166 #> 8:lag2  0.22706280 0.37357366 0.22193107 0.3604810 0.26537164 0.3966567 #> 9:lag2  0.65717109 0.39890269 0.64230349 0.7615381 0.45902896 0.6780909 #> 10:lag2 0.39890269 0.67784505 0.39239624 0.6517269 0.44972077 0.7174043 #> 1:lag3  0.30556462 0.18667563 0.55436738 0.4313766 0.29910097 0.3874652 #> 2:lag3  0.36228841 0.31004766 0.43137658 0.7275836 0.41506512 0.6477915 #> 3:lag3  0.21837498 0.21394677 0.29910097 0.4150651 0.64267791 0.4524565 #> 4:lag3  0.32258987 0.34129253 0.38746516 0.6477915 0.45245647 0.7584872 #> 5:lag3  0.24445981 0.38072428 0.28701244 0.4840891 0.38552204 0.5574193 #> 6:lag3  0.18550238 0.13505093 0.30736446 0.3049242 0.35710332 0.3000691 #> 7:lag3  0.29416950 0.25466417 0.38637281 0.5534039 0.46724451 0.5658518 #> 8:lag3  0.14466724 0.23801287 0.16571305 0.2691665 0.19814955 0.2961784 #> 9:lag3  0.41869970 0.25415061 0.47959967 0.5686306 0.34275096 0.5063217 #> 10:lag3 0.25415061 0.43187158 0.29299718 0.4866360 0.33580066 0.5356765 #> 1:lag4  0.20101355 0.12280326 0.35320095 0.2748405 0.19056451 0.2468635 #> 2:lag4  0.23832889 0.20396268 0.27484052 0.4635612 0.26444809 0.4127237 #> 3:lag4  0.14365645 0.14074339 0.19056451 0.2644481 0.40946574 0.2882710 #> 4:lag4  0.21221349 0.22451690 0.24686348 0.4127237 0.28827103 0.4832507 #> 5:lag4  0.16081617 0.25045681 0.18286261 0.3084250 0.24562548 0.3551454 #> 6:lag4  0.12203144 0.08884231 0.19582938 0.1942746 0.22751922 0.1911813 #> 7:lag4  0.19351735 0.16752904 0.24616752 0.3525871 0.29769285 0.3605180 #> 8:lag4  0.09516833 0.15657510 0.10557981 0.1714925 0.12624590 0.1887025 #> 9:lag4  0.27543866 0.16719120 0.30556462 0.3622884 0.21837498 0.3225899 #> 10:lag4 0.16719120 0.28410370 0.18667563 0.3100477 0.21394677 0.3412925 #> 1:lag5  0.14024638 0.08567936 0.23235077 0.1808019 0.12536153 0.1623974 #> 2:lag5  0.16628115 0.14230398 0.18080191 0.3049505 0.17396532 0.2715074 #> 3:lag5  0.10022855 0.09819612 0.12536153 0.1739653 0.26936417 0.1896371 #> 4:lag5  0.14806053 0.15664457 0.16239741 0.2715074 0.18963708 0.3179031 #> 5:lag5  0.11220082 0.17474275 0.12029489 0.2028952 0.16158300 0.2336299 #> 6:lag5  0.08514086 0.06198493 0.12882498 0.1278022 0.14967192 0.1257673 #> 7:lag5  0.13501631 0.11688437 0.16193958 0.2319470 0.19583516 0.2371642 #> 8:lag5  0.06639858 0.10924184 0.06945494 0.1128152 0.08304998 0.1241366 #> 9:lag5  0.19217249 0.11664865 0.20101355 0.2383289 0.14365645 0.2122135 #> 10:lag5 0.11664865 0.19821805 0.12280326 0.2039627 0.14074339 0.2245169 #>            5:lag2     6:lag2    7:lag2     8:lag2     9:lag2    10:lag2 #> 1:t+0   0.1828626 0.19582938 0.2461675 0.10557981 0.30556462 0.18667563 #> 2:t+0   0.3084250 0.19427464 0.3525871 0.17149252 0.36228841 0.31004766 #> 3:t+0   0.2456255 0.22751922 0.2976928 0.12624590 0.21837498 0.21394677 #> 4:t+0   0.3551454 0.19118135 0.3605180 0.18870249 0.32258987 0.34129253 #> 5:t+0   0.4662730 0.14636821 0.2712139 0.23813455 0.24445981 0.38072428 #> 6:t+0   0.1463682 0.42319782 0.2129532 0.07515110 0.18550238 0.13505093 #> 7:t+0   0.2712139 0.21295322 0.4015822 0.14116879 0.29416950 0.25466417 #> 8:t+0   0.2381346 0.07515110 0.1411688 0.51947131 0.14466724 0.23801287 #> 9:t+0   0.2444598 0.18550238 0.2941695 0.14466724 0.41869970 0.25415061 #> 10:t+0  0.3807243 0.13505093 0.2546642 0.23801287 0.25415061 0.43187158 #> 1:lag1  0.2870124 0.30736446 0.3863728 0.16571305 0.47959967 0.29299718 #> 2:lag1  0.4840891 0.30492422 0.5534039 0.26916648 0.56863063 0.48663604 #> 3:lag1  0.3855220 0.35710332 0.4672445 0.19814955 0.34275096 0.33580066 #> 4:lag1  0.5574193 0.30006913 0.5658518 0.29617844 0.50632169 0.53567649 #> 5:lag1  0.7318400 0.22973256 0.4256844 0.37376465 0.38369247 0.59756669 #> 6:lag1  0.2297326 0.66423113 0.3342412 0.11795358 0.29115569 0.21196950 #> 7:lag1  0.4256844 0.33424122 0.6303043 0.22157181 0.46171443 0.39970875 #> 8:lag1  0.3737646 0.11795358 0.2215718 0.81533741 0.22706280 0.37357366 #> 9:lag1  0.3836925 0.29115569 0.4617144 0.22706280 0.65717109 0.39890269 #> 10:lag1 0.5975667 0.21196950 0.3997088 0.37357366 0.39890269 0.67784505 #> 1:lag2  0.3843812 0.41163761 0.5174495 0.22193107 0.64230349 0.39239624 #> 2:lag2  0.6483160 0.40836953 0.7411457 0.36048101 0.76153813 0.65172694 #> 3:lag2  0.5163101 0.47825034 0.6257568 0.26537164 0.45902896 0.44972077 #> 4:lag2  0.7465233 0.40186735 0.7578166 0.39665675 0.67809094 0.71740432 #> 5:lag2  0.9801161 0.30766916 0.5700975 0.50056402 0.51385984 0.80029073 #> 6:lag2  0.3076692 0.88957103 0.4476323 0.15796924 0.38993004 0.28387999 #> 7:lag2  0.5700975 0.44763230 0.8441345 0.29673987 0.61835070 0.53530964 #> 8:lag2  0.5005640 0.15796924 0.2967399 1.09194000 0.30409368 0.50030824 #> 9:lag2  0.5138598 0.38993004 0.6183507 0.30409368 0.88011587 0.53423011 #> 10:lag2 0.8002907 0.28387999 0.5353096 0.50030824 0.53423011 0.90780347 #> 1:lag3  0.2870124 0.30736446 0.3863728 0.16571305 0.47959967 0.29299718 #> 2:lag3  0.4840891 0.30492422 0.5534039 0.26916648 0.56863063 0.48663604 #> 3:lag3  0.3855220 0.35710332 0.4672445 0.19814955 0.34275096 0.33580066 #> 4:lag3  0.5574193 0.30006913 0.5658518 0.29617844 0.50632169 0.53567649 #> 5:lag3  0.7318400 0.22973256 0.4256844 0.37376465 0.38369247 0.59756669 #> 6:lag3  0.2297326 0.66423113 0.3342412 0.11795358 0.29115569 0.21196950 #> 7:lag3  0.4256844 0.33424122 0.6303043 0.22157181 0.46171443 0.39970875 #> 8:lag3  0.3737646 0.11795358 0.2215718 0.81533741 0.22706280 0.37357366 #> 9:lag3  0.3836925 0.29115569 0.4617144 0.22706280 0.65717109 0.39890269 #> 10:lag3 0.5975667 0.21196950 0.3997088 0.37357366 0.39890269 0.67784505 #> 1:lag4  0.1828626 0.19582938 0.2461675 0.10557981 0.30556462 0.18667563 #> 2:lag4  0.3084250 0.19427464 0.3525871 0.17149252 0.36228841 0.31004766 #> 3:lag4  0.2456255 0.22751922 0.2976928 0.12624590 0.21837498 0.21394677 #> 4:lag4  0.3551454 0.19118135 0.3605180 0.18870249 0.32258987 0.34129253 #> 5:lag4  0.4662730 0.14636821 0.2712139 0.23813455 0.24445981 0.38072428 #> 6:lag4  0.1463682 0.42319782 0.2129532 0.07515110 0.18550238 0.13505093 #> 7:lag4  0.2712139 0.21295322 0.4015822 0.14116879 0.29416950 0.25466417 #> 8:lag4  0.2381346 0.07515110 0.1411688 0.51947131 0.14466724 0.23801287 #> 9:lag4  0.2444598 0.18550238 0.2941695 0.14466724 0.41869970 0.25415061 #> 10:lag4 0.3807243 0.13505093 0.2546642 0.23801287 0.25415061 0.43187158 #> 1:lag5  0.1202949 0.12882498 0.1619396 0.06945494 0.20101355 0.12280326 #> 2:lag5  0.2028952 0.12780221 0.2319470 0.11281515 0.23832889 0.20396268 #> 3:lag5  0.1615830 0.14967192 0.1958352 0.08304998 0.14365645 0.14074339 #> 4:lag5  0.2336299 0.12576731 0.2371642 0.12413661 0.21221349 0.22451690 #> 5:lag5  0.3067345 0.09628730 0.1784162 0.15665515 0.16081617 0.25045681 #> 6:lag5  0.0962873 0.27839772 0.1400898 0.04943762 0.12203144 0.08884231 #> 7:lag5  0.1784162 0.14008978 0.2641780 0.09286690 0.19351735 0.16752904 #> 8:lag5  0.1566551 0.04943762 0.0928669 0.34173056 0.09516833 0.15657510 #> 9:lag5  0.1608162 0.12203144 0.1935173 0.09516833 0.27543866 0.16719120 #> 10:lag5 0.2504568 0.08884231 0.1675290 0.15657510 0.16719120 0.28410370 #>             1:lag3    2:lag3     3:lag3    4:lag3    5:lag3     6:lag3 #> 1:t+0   0.23235077 0.1808019 0.12536153 0.1623974 0.1202949 0.12882498 #> 2:t+0   0.18080191 0.3049505 0.17396532 0.2715074 0.2028952 0.12780221 #> 3:t+0   0.12536153 0.1739653 0.26936417 0.1896371 0.1615830 0.14967192 #> 4:t+0   0.16239741 0.2715074 0.18963708 0.3179031 0.2336299 0.12576731 #> 5:t+0   0.12029489 0.2028952 0.16158300 0.2336299 0.3067345 0.09628730 #> 6:t+0   0.12882498 0.1278022 0.14967192 0.1257673 0.0962873 0.27839772 #> 7:t+0   0.16193958 0.2319470 0.19583516 0.2371642 0.1784162 0.14008978 #> 8:t+0   0.06945494 0.1128152 0.08304998 0.1241366 0.1566551 0.04943762 #> 9:t+0   0.20101355 0.2383289 0.14365645 0.2122135 0.1608162 0.12203144 #> 10:t+0  0.12280326 0.2039627 0.14074339 0.2245169 0.2504568 0.08884231 #> 1:lag1  0.35320095 0.2748405 0.19056451 0.2468635 0.1828626 0.19582938 #> 2:lag1  0.27484052 0.4635612 0.26444809 0.4127237 0.3084250 0.19427464 #> 3:lag1  0.19056451 0.2644481 0.40946574 0.2882710 0.2456255 0.22751922 #> 4:lag1  0.24686348 0.4127237 0.28827103 0.4832507 0.3551454 0.19118135 #> 5:lag1  0.18286261 0.3084250 0.24562548 0.3551454 0.4662730 0.14636821 #> 6:lag1  0.19582938 0.1942746 0.22751922 0.1911813 0.1463682 0.42319782 #> 7:lag1  0.24616752 0.3525871 0.29769285 0.3605180 0.2712139 0.21295322 #> 8:lag1  0.10557981 0.1714925 0.12624590 0.1887025 0.2381346 0.07515110 #> 9:lag1  0.30556462 0.3622884 0.21837498 0.3225899 0.2444598 0.18550238 #> 10:lag1 0.18667563 0.3100477 0.21394677 0.3412925 0.3807243 0.13505093 #> 1:lag2  0.55436738 0.4313766 0.29910097 0.3874652 0.2870124 0.30736446 #> 2:lag2  0.43137658 0.7275836 0.41506512 0.6477915 0.4840891 0.30492422 #> 3:lag2  0.29910097 0.4150651 0.64267791 0.4524565 0.3855220 0.35710332 #> 4:lag2  0.38746516 0.6477915 0.45245647 0.7584872 0.5574193 0.30006913 #> 5:lag2  0.28701244 0.4840891 0.38552204 0.5574193 0.7318400 0.22973256 #> 6:lag2  0.30736446 0.3049242 0.35710332 0.3000691 0.2297326 0.66423113 #> 7:lag2  0.38637281 0.5534039 0.46724451 0.5658518 0.4256844 0.33424122 #> 8:lag2  0.16571305 0.2691665 0.19814955 0.2961784 0.3737646 0.11795358 #> 9:lag2  0.47959967 0.5686306 0.34275096 0.5063217 0.3836925 0.29115569 #> 10:lag2 0.29299718 0.4866360 0.33580066 0.5356765 0.5975667 0.21196950 #> 1:lag3  0.74243608 0.5777208 0.40057075 0.5189124 0.3843812 0.41163761 #> 2:lag3  0.57772076 0.9744158 0.55587564 0.8675543 0.6483160 0.40836953 #> 3:lag3  0.40057075 0.5558756 0.86070590 0.6059520 0.5163101 0.47825034 #> 4:lag3  0.51891242 0.8675543 0.60595197 1.0158034 0.7465233 0.40186735 #> 5:lag3  0.38438119 0.6483160 0.51631009 0.7465233 0.9801161 0.30766916 #> 6:lag3  0.41163761 0.4083695 0.47825034 0.4018674 0.3076692 0.88957103 #> 7:lag3  0.51744949 0.7411457 0.62575685 0.7578166 0.5700975 0.44763230 #> 8:lag3  0.22193107 0.3604810 0.26537164 0.3966567 0.5005640 0.15796924 #> 9:lag3  0.64230349 0.7615381 0.45902896 0.6780909 0.5138598 0.38993004 #> 10:lag3 0.39239624 0.6517269 0.44972077 0.7174043 0.8002907 0.28387999 #> 1:lag4  0.55436738 0.4313766 0.29910097 0.3874652 0.2870124 0.30736446 #> 2:lag4  0.43137658 0.7275836 0.41506512 0.6477915 0.4840891 0.30492422 #> 3:lag4  0.29910097 0.4150651 0.64267791 0.4524565 0.3855220 0.35710332 #> 4:lag4  0.38746516 0.6477915 0.45245647 0.7584872 0.5574193 0.30006913 #> 5:lag4  0.28701244 0.4840891 0.38552204 0.5574193 0.7318400 0.22973256 #> 6:lag4  0.30736446 0.3049242 0.35710332 0.3000691 0.2297326 0.66423113 #> 7:lag4  0.38637281 0.5534039 0.46724451 0.5658518 0.4256844 0.33424122 #> 8:lag4  0.16571305 0.2691665 0.19814955 0.2961784 0.3737646 0.11795358 #> 9:lag4  0.47959967 0.5686306 0.34275096 0.5063217 0.3836925 0.29115569 #> 10:lag4 0.29299718 0.4866360 0.33580066 0.5356765 0.5975667 0.21196950 #> 1:lag5  0.35320095 0.2748405 0.19056451 0.2468635 0.1828626 0.19582938 #> 2:lag5  0.27484052 0.4635612 0.26444809 0.4127237 0.3084250 0.19427464 #> 3:lag5  0.19056451 0.2644481 0.40946574 0.2882710 0.2456255 0.22751922 #> 4:lag5  0.24686348 0.4127237 0.28827103 0.4832507 0.3551454 0.19118135 #> 5:lag5  0.18286261 0.3084250 0.24562548 0.3551454 0.4662730 0.14636821 #> 6:lag5  0.19582938 0.1942746 0.22751922 0.1911813 0.1463682 0.42319782 #> 7:lag5  0.24616752 0.3525871 0.29769285 0.3605180 0.2712139 0.21295322 #> 8:lag5  0.10557981 0.1714925 0.12624590 0.1887025 0.2381346 0.07515110 #> 9:lag5  0.30556462 0.3622884 0.21837498 0.3225899 0.2444598 0.18550238 #> 10:lag5 0.18667563 0.3100477 0.21394677 0.3412925 0.3807243 0.13505093 #>            7:lag3     8:lag3     9:lag3    10:lag3     1:lag4     2:lag4 #> 1:t+0   0.1619396 0.06945494 0.20101355 0.12280326 0.16211023 0.12614480 #> 2:t+0   0.2319470 0.11281515 0.23832889 0.20396268 0.12614480 0.21276278 #> 3:t+0   0.1958352 0.08304998 0.14365645 0.14074339 0.08746425 0.12137493 #> 4:t+0   0.2371642 0.12413661 0.21221349 0.22451690 0.11330405 0.18942968 #> 5:t+0   0.1784162 0.15665515 0.16081617 0.25045681 0.08392928 0.14155920 #> 6:t+0   0.1400898 0.04943762 0.12203144 0.08884231 0.08988069 0.08916711 #> 7:t+0   0.2641780 0.09286690 0.19351735 0.16752904 0.11298462 0.16182849 #> 8:t+0   0.0928669 0.34173056 0.09516833 0.15657510 0.04845844 0.07871070 #> 9:t+0   0.1935173 0.09516833 0.27543866 0.16719120 0.14024638 0.16628115 #> 10:t+0  0.1675290 0.15657510 0.16719120 0.28410370 0.08567936 0.14230398 #> 1:lag1  0.2461675 0.10557981 0.30556462 0.18667563 0.23235077 0.18080191 #> 2:lag1  0.3525871 0.17149252 0.36228841 0.31004766 0.18080191 0.30495050 #> 3:lag1  0.2976928 0.12624590 0.21837498 0.21394677 0.12536153 0.17396532 #> 4:lag1  0.3605180 0.18870249 0.32258987 0.34129253 0.16239741 0.27150742 #> 5:lag1  0.2712139 0.23813455 0.24445981 0.38072428 0.12029489 0.20289520 #> 6:lag1  0.2129532 0.07515110 0.18550238 0.13505093 0.12882498 0.12780221 #> 7:lag1  0.4015822 0.14116879 0.29416950 0.25466417 0.16193958 0.23194695 #> 8:lag1  0.1411688 0.51947131 0.14466724 0.23801287 0.06945494 0.11281515 #> 9:lag1  0.2941695 0.14466724 0.41869970 0.25415061 0.20101355 0.23832889 #> 10:lag1 0.2546642 0.23801287 0.25415061 0.43187158 0.12280326 0.20396268 #> 1:lag2  0.3863728 0.16571305 0.47959967 0.29299718 0.35320095 0.27484052 #> 2:lag2  0.5534039 0.26916648 0.56863063 0.48663604 0.27484052 0.46356121 #> 3:lag2  0.4672445 0.19814955 0.34275096 0.33580066 0.19056451 0.26444809 #> 4:lag2  0.5658518 0.29617844 0.50632169 0.53567649 0.24686348 0.41272374 #> 5:lag2  0.4256844 0.37376465 0.38369247 0.59756669 0.18286261 0.30842496 #> 6:lag2  0.3342412 0.11795358 0.29115569 0.21196950 0.19582938 0.19427464 #> 7:lag2  0.6303043 0.22157181 0.46171443 0.39970875 0.24616752 0.35258709 #> 8:lag2  0.2215718 0.81533741 0.22706280 0.37357366 0.10557981 0.17149252 #> 9:lag2  0.4617144 0.22706280 0.65717109 0.39890269 0.30556462 0.36228841 #> 10:lag2 0.3997088 0.37357366 0.39890269 0.67784505 0.18667563 0.31004766 #> 1:lag3  0.5174495 0.22193107 0.64230349 0.39239624 0.55436738 0.43137658 #> 2:lag3  0.7411457 0.36048101 0.76153813 0.65172694 0.43137658 0.72758359 #> 3:lag3  0.6257568 0.26537164 0.45902896 0.44972077 0.29910097 0.41506512 #> 4:lag3  0.7578166 0.39665675 0.67809094 0.71740432 0.38746516 0.64779151 #> 5:lag3  0.5700975 0.50056402 0.51385984 0.80029073 0.28701244 0.48408912 #> 6:lag3  0.4476323 0.15796924 0.38993004 0.28387999 0.30736446 0.30492422 #> 7:lag3  0.8441345 0.29673987 0.61835070 0.53530964 0.38637281 0.55340390 #> 8:lag3  0.2967399 1.09194000 0.30409368 0.50030824 0.16571305 0.26916648 #> 9:lag3  0.6183507 0.30409368 0.88011587 0.53423011 0.47959967 0.56863063 #> 10:lag3 0.5353096 0.50030824 0.53423011 0.90780347 0.29299718 0.48663604 #> 1:lag4  0.3863728 0.16571305 0.47959967 0.29299718 0.74243608 0.57772076 #> 2:lag4  0.5534039 0.26916648 0.56863063 0.48663604 0.57772076 0.97441576 #> 3:lag4  0.4672445 0.19814955 0.34275096 0.33580066 0.40057075 0.55587564 #> 4:lag4  0.5658518 0.29617844 0.50632169 0.53567649 0.51891242 0.86755428 #> 5:lag4  0.4256844 0.37376465 0.38369247 0.59756669 0.38438119 0.64831598 #> 6:lag4  0.3342412 0.11795358 0.29115569 0.21196950 0.41163761 0.40836953 #> 7:lag4  0.6303043 0.22157181 0.46171443 0.39970875 0.51744949 0.74114574 #> 8:lag4  0.2215718 0.81533741 0.22706280 0.37357366 0.22193107 0.36048101 #> 9:lag4  0.4617144 0.22706280 0.65717109 0.39890269 0.64230349 0.76153813 #> 10:lag4 0.3997088 0.37357366 0.39890269 0.67784505 0.39239624 0.65172694 #> 1:lag5  0.2461675 0.10557981 0.30556462 0.18667563 0.55436738 0.43137658 #> 2:lag5  0.3525871 0.17149252 0.36228841 0.31004766 0.43137658 0.72758359 #> 3:lag5  0.2976928 0.12624590 0.21837498 0.21394677 0.29910097 0.41506512 #> 4:lag5  0.3605180 0.18870249 0.32258987 0.34129253 0.38746516 0.64779151 #> 5:lag5  0.2712139 0.23813455 0.24445981 0.38072428 0.28701244 0.48408912 #> 6:lag5  0.2129532 0.07515110 0.18550238 0.13505093 0.30736446 0.30492422 #> 7:lag5  0.4015822 0.14116879 0.29416950 0.25466417 0.38637281 0.55340390 #> 8:lag5  0.1411688 0.51947131 0.14466724 0.23801287 0.16571305 0.26916648 #> 9:lag5  0.2941695 0.14466724 0.41869970 0.25415061 0.47959967 0.56863063 #> 10:lag5 0.2546642 0.23801287 0.25415061 0.43187158 0.29299718 0.48663604 #>             3:lag4     4:lag4     5:lag4     6:lag4     7:lag4     8:lag4 #> 1:t+0   0.08746425 0.11330405 0.08392928 0.08988069 0.11298462 0.04845844 #> 2:t+0   0.12137493 0.18942968 0.14155920 0.08916711 0.16182849 0.07871070 #> 3:t+0   0.18793434 0.13230906 0.11273583 0.10442552 0.13663343 0.05794365 #> 4:t+0   0.13230906 0.22179974 0.16300269 0.08774737 0.16546856 0.08660964 #> 5:t+0   0.11273583 0.16300269 0.21400745 0.06717928 0.12448027 0.10929769 #> 6:t+0   0.10442552 0.08774737 0.06717928 0.19423702 0.09774010 0.03449244 #> 7:t+0   0.13663343 0.16546856 0.12448027 0.09774010 0.18431600 0.06479288 #> 8:t+0   0.05794365 0.08660964 0.10929769 0.03449244 0.06479288 0.23842409 #> 9:t+0   0.10022855 0.14806053 0.11220082 0.08514086 0.13501631 0.06639858 #> 10:t+0  0.09819612 0.15664457 0.17474275 0.06198493 0.11688437 0.10924184 #> 1:lag1  0.12536153 0.16239741 0.12029489 0.12882498 0.16193958 0.06945494 #> 2:lag1  0.17396532 0.27150742 0.20289520 0.12780221 0.23194695 0.11281515 #> 3:lag1  0.26936417 0.18963708 0.16158300 0.14967192 0.19583516 0.08304998 #> 4:lag1  0.18963708 0.31790307 0.23362991 0.12576731 0.23716422 0.12413661 #> 5:lag1  0.16158300 0.23362991 0.30673446 0.09628730 0.17841617 0.15665515 #> 6:lag1  0.14967192 0.12576731 0.09628730 0.27839772 0.14008978 0.04943762 #> 7:lag1  0.19583516 0.23716422 0.17841617 0.14008978 0.26417804 0.09286690 #> 8:lag1  0.08304998 0.12413661 0.15665515 0.04943762 0.09286690 0.34173056 #> 9:lag1  0.14365645 0.21221349 0.16081617 0.12203144 0.19351735 0.09516833 #> 10:lag1 0.14074339 0.22451690 0.25045681 0.08884231 0.16752904 0.15657510 #> 1:lag2  0.19056451 0.24686348 0.18286261 0.19582938 0.24616752 0.10557981 #> 2:lag2  0.26444809 0.41272374 0.30842496 0.19427464 0.35258709 0.17149252 #> 3:lag2  0.40946574 0.28827103 0.24562548 0.22751922 0.29769285 0.12624590 #> 4:lag2  0.28827103 0.48325067 0.35514539 0.19118135 0.36051796 0.18870249 #> 5:lag2  0.24562548 0.35514539 0.46627305 0.14636821 0.27121391 0.23813455 #> 6:lag2  0.22751922 0.19118135 0.14636821 0.42319782 0.21295322 0.07515110 #> 7:lag2  0.29769285 0.36051796 0.27121391 0.21295322 0.40158220 0.14116879 #> 8:lag2  0.12624590 0.18870249 0.23813455 0.07515110 0.14116879 0.51947131 #> 9:lag2  0.21837498 0.32258987 0.24445981 0.18550238 0.29416950 0.14466724 #> 10:lag2 0.21394677 0.34129253 0.38072428 0.13505093 0.25466417 0.23801287 #> 1:lag3  0.29910097 0.38746516 0.28701244 0.30736446 0.38637281 0.16571305 #> 2:lag3  0.41506512 0.64779151 0.48408912 0.30492422 0.55340390 0.26916648 #> 3:lag3  0.64267791 0.45245647 0.38552204 0.35710332 0.46724451 0.19814955 #> 4:lag3  0.45245647 0.75848723 0.55741929 0.30006913 0.56585181 0.29617844 #> 5:lag3  0.38552204 0.55741929 0.73183996 0.22973256 0.42568443 0.37376465 #> 6:lag3  0.35710332 0.30006913 0.22973256 0.66423113 0.33424122 0.11795358 #> 7:lag3  0.46724451 0.56585181 0.42568443 0.33424122 0.63030429 0.22157181 #> 8:lag3  0.19814955 0.29617844 0.37376465 0.11795358 0.22157181 0.81533741 #> 9:lag3  0.34275096 0.50632169 0.38369247 0.29115569 0.46171443 0.22706280 #> 10:lag3 0.33580066 0.53567649 0.59756669 0.21196950 0.39970875 0.37357366 #> 1:lag4  0.40057075 0.51891242 0.38438119 0.41163761 0.51744949 0.22193107 #> 2:lag4  0.55587564 0.86755428 0.64831598 0.40836953 0.74114574 0.36048101 #> 3:lag4  0.86070590 0.60595197 0.51631009 0.47825034 0.62575685 0.26537164 #> 4:lag4  0.60595197 1.01580343 0.74652335 0.40186735 0.75781660 0.39665675 #> 5:lag4  0.51631009 0.74652335 0.98011610 0.30766916 0.57009754 0.50056402 #> 6:lag4  0.47825034 0.40186735 0.30766916 0.88957103 0.44763230 0.15796924 #> 7:lag4  0.62575685 0.75781660 0.57009754 0.44763230 0.84413453 0.29673987 #> 8:lag4  0.26537164 0.39665675 0.50056402 0.15796924 0.29673987 1.09194000 #> 9:lag4  0.45902896 0.67809094 0.51385984 0.38993004 0.61835070 0.30409368 #> 10:lag4 0.44972077 0.71740432 0.80029073 0.28387999 0.53530964 0.50030824 #> 1:lag5  0.29910097 0.38746516 0.28701244 0.30736446 0.38637281 0.16571305 #> 2:lag5  0.41506512 0.64779151 0.48408912 0.30492422 0.55340390 0.26916648 #> 3:lag5  0.64267791 0.45245647 0.38552204 0.35710332 0.46724451 0.19814955 #> 4:lag5  0.45245647 0.75848723 0.55741929 0.30006913 0.56585181 0.29617844 #> 5:lag5  0.38552204 0.55741929 0.73183996 0.22973256 0.42568443 0.37376465 #> 6:lag5  0.35710332 0.30006913 0.22973256 0.66423113 0.33424122 0.11795358 #> 7:lag5  0.46724451 0.56585181 0.42568443 0.33424122 0.63030429 0.22157181 #> 8:lag5  0.19814955 0.29617844 0.37376465 0.11795358 0.22157181 0.81533741 #> 9:lag5  0.34275096 0.50632169 0.38369247 0.29115569 0.46171443 0.22706280 #> 10:lag5 0.33580066 0.53567649 0.59756669 0.21196950 0.39970875 0.37357366 #>             9:lag4    10:lag4     1:lag5     2:lag5     3:lag5     4:lag5 #> 1:t+0   0.14024638 0.08567936 0.11915243 0.09271752 0.06428698 0.08327946 #> 2:t+0   0.16628115 0.14230398 0.09271752 0.15638249 0.08921163 0.13923245 #> 3:t+0   0.10022855 0.09819612 0.06428698 0.08921163 0.13813337 0.09724830 #> 4:t+0   0.14806053 0.15664457 0.08327946 0.13923245 0.09724830 0.16302473 #> 5:t+0   0.11220082 0.17474275 0.06168875 0.10404724 0.08286181 0.11980839 #> 6:t+0   0.08514086 0.06198493 0.06606309 0.06553860 0.07675366 0.06449507 #> 7:t+0   0.13501631 0.11688437 0.08304467 0.11894534 0.10042676 0.12162082 #> 8:t+0   0.06639858 0.10924184 0.03561738 0.05785304 0.04258909 0.06365883 #> 9:t+0   0.19217249 0.11664865 0.10308230 0.12221808 0.07366885 0.10882577 #> 10:t+0  0.11664865 0.19821805 0.06297507 0.10459466 0.07217500 0.11513512 #> 1:lag1  0.20101355 0.12280326 0.16211023 0.12614480 0.08746425 0.11330405 #> 2:lag1  0.23832889 0.20396268 0.12614480 0.21276278 0.12137493 0.18942968 #> 3:lag1  0.14365645 0.14074339 0.08746425 0.12137493 0.18793434 0.13230906 #> 4:lag1  0.21221349 0.22451690 0.11330405 0.18942968 0.13230906 0.22179974 #> 5:lag1  0.16081617 0.25045681 0.08392928 0.14155920 0.11273583 0.16300269 #> 6:lag1  0.12203144 0.08884231 0.08988069 0.08916711 0.10442552 0.08774737 #> 7:lag1  0.19351735 0.16752904 0.11298462 0.16182849 0.13663343 0.16546856 #> 8:lag1  0.09516833 0.15657510 0.04845844 0.07871070 0.05794365 0.08660964 #> 9:lag1  0.27543866 0.16719120 0.14024638 0.16628115 0.10022855 0.14806053 #> 10:lag1 0.16719120 0.28410370 0.08567936 0.14230398 0.09819612 0.15664457 #> 1:lag2  0.30556462 0.18667563 0.23235077 0.18080191 0.12536153 0.16239741 #> 2:lag2  0.36228841 0.31004766 0.18080191 0.30495050 0.17396532 0.27150742 #> 3:lag2  0.21837498 0.21394677 0.12536153 0.17396532 0.26936417 0.18963708 #> 4:lag2  0.32258987 0.34129253 0.16239741 0.27150742 0.18963708 0.31790307 #> 5:lag2  0.24445981 0.38072428 0.12029489 0.20289520 0.16158300 0.23362991 #> 6:lag2  0.18550238 0.13505093 0.12882498 0.12780221 0.14967192 0.12576731 #> 7:lag2  0.29416950 0.25466417 0.16193958 0.23194695 0.19583516 0.23716422 #> 8:lag2  0.14466724 0.23801287 0.06945494 0.11281515 0.08304998 0.12413661 #> 9:lag2  0.41869970 0.25415061 0.20101355 0.23832889 0.14365645 0.21221349 #> 10:lag2 0.25415061 0.43187158 0.12280326 0.20396268 0.14074339 0.22451690 #> 1:lag3  0.47959967 0.29299718 0.35320095 0.27484052 0.19056451 0.24686348 #> 2:lag3  0.56863063 0.48663604 0.27484052 0.46356121 0.26444809 0.41272374 #> 3:lag3  0.34275096 0.33580066 0.19056451 0.26444809 0.40946574 0.28827103 #> 4:lag3  0.50632169 0.53567649 0.24686348 0.41272374 0.28827103 0.48325067 #> 5:lag3  0.38369247 0.59756669 0.18286261 0.30842496 0.24562548 0.35514539 #> 6:lag3  0.29115569 0.21196950 0.19582938 0.19427464 0.22751922 0.19118135 #> 7:lag3  0.46171443 0.39970875 0.24616752 0.35258709 0.29769285 0.36051796 #> 8:lag3  0.22706280 0.37357366 0.10557981 0.17149252 0.12624590 0.18870249 #> 9:lag3  0.65717109 0.39890269 0.30556462 0.36228841 0.21837498 0.32258987 #> 10:lag3 0.39890269 0.67784505 0.18667563 0.31004766 0.21394677 0.34129253 #> 1:lag4  0.64230349 0.39239624 0.55436738 0.43137658 0.29910097 0.38746516 #> 2:lag4  0.76153813 0.65172694 0.43137658 0.72758359 0.41506512 0.64779151 #> 3:lag4  0.45902896 0.44972077 0.29910097 0.41506512 0.64267791 0.45245647 #> 4:lag4  0.67809094 0.71740432 0.38746516 0.64779151 0.45245647 0.75848723 #> 5:lag4  0.51385984 0.80029073 0.28701244 0.48408912 0.38552204 0.55741929 #> 6:lag4  0.38993004 0.28387999 0.30736446 0.30492422 0.35710332 0.30006913 #> 7:lag4  0.61835070 0.53530964 0.38637281 0.55340390 0.46724451 0.56585181 #> 8:lag4  0.30409368 0.50030824 0.16571305 0.26916648 0.19814955 0.29617844 #> 9:lag4  0.88011587 0.53423011 0.47959967 0.56863063 0.34275096 0.50632169 #> 10:lag4 0.53423011 0.90780347 0.29299718 0.48663604 0.33580066 0.53567649 #> 1:lag5  0.47959967 0.29299718 0.74243608 0.57772076 0.40057075 0.51891242 #> 2:lag5  0.56863063 0.48663604 0.57772076 0.97441576 0.55587564 0.86755428 #> 3:lag5  0.34275096 0.33580066 0.40057075 0.55587564 0.86070590 0.60595197 #> 4:lag5  0.50632169 0.53567649 0.51891242 0.86755428 0.60595197 1.01580343 #> 5:lag5  0.38369247 0.59756669 0.38438119 0.64831598 0.51631009 0.74652335 #> 6:lag5  0.29115569 0.21196950 0.41163761 0.40836953 0.47825034 0.40186735 #> 7:lag5  0.46171443 0.39970875 0.51744949 0.74114574 0.62575685 0.75781660 #> 8:lag5  0.22706280 0.37357366 0.22193107 0.36048101 0.26537164 0.39665675 #> 9:lag5  0.65717109 0.39890269 0.64230349 0.76153813 0.45902896 0.67809094 #> 10:lag5 0.39890269 0.67784505 0.39239624 0.65172694 0.44972077 0.71740432 #>             5:lag5     6:lag5     7:lag5     8:lag5     9:lag5    10:lag5 #> 1:t+0   0.06168875 0.06606309 0.08304467 0.03561738 0.10308230 0.06297507 #> 2:t+0   0.10404724 0.06553860 0.11894534 0.05785304 0.12221808 0.10459466 #> 3:t+0   0.08286181 0.07675366 0.10042676 0.04258909 0.07366885 0.07217500 #> 4:t+0   0.11980839 0.06449507 0.12162082 0.06365883 0.10882577 0.11513512 #> 5:t+0   0.15729733 0.04937735 0.09149408 0.08033475 0.08246858 0.12843743 #> 6:t+0   0.04937735 0.14276589 0.07183982 0.02535224 0.06257927 0.04555946 #> 7:t+0   0.09149408 0.07183982 0.13547385 0.04762333 0.09923815 0.08591102 #> 8:t+0   0.08033475 0.02535224 0.04762333 0.17524377 0.04880353 0.08029370 #> 9:t+0   0.08246858 0.06257927 0.09923815 0.04880353 0.14124844 0.08573777 #> 10:t+0  0.12843743 0.04555946 0.08591102 0.08029370 0.08573777 0.14569198 #> 1:lag1  0.08392928 0.08988069 0.11298462 0.04845844 0.14024638 0.08567936 #> 2:lag1  0.14155920 0.08916711 0.16182849 0.07871070 0.16628115 0.14230398 #> 3:lag1  0.11273583 0.10442552 0.13663343 0.05794365 0.10022855 0.09819612 #> 4:lag1  0.16300269 0.08774737 0.16546856 0.08660964 0.14806053 0.15664457 #> 5:lag1  0.21400745 0.06717928 0.12448027 0.10929769 0.11220082 0.17474275 #> 6:lag1  0.06717928 0.19423702 0.09774010 0.03449244 0.08514086 0.06198493 #> 7:lag1  0.12448027 0.09774010 0.18431600 0.06479288 0.13501631 0.11688437 #> 8:lag1  0.10929769 0.03449244 0.06479288 0.23842409 0.06639858 0.10924184 #> 9:lag1  0.11220082 0.08514086 0.13501631 0.06639858 0.19217249 0.11664865 #> 10:lag1 0.17474275 0.06198493 0.11688437 0.10924184 0.11664865 0.19821805 #> 1:lag2  0.12029489 0.12882498 0.16193958 0.06945494 0.20101355 0.12280326 #> 2:lag2  0.20289520 0.12780221 0.23194695 0.11281515 0.23832889 0.20396268 #> 3:lag2  0.16158300 0.14967192 0.19583516 0.08304998 0.14365645 0.14074339 #> 4:lag2  0.23362991 0.12576731 0.23716422 0.12413661 0.21221349 0.22451690 #> 5:lag2  0.30673446 0.09628730 0.17841617 0.15665515 0.16081617 0.25045681 #> 6:lag2  0.09628730 0.27839772 0.14008978 0.04943762 0.12203144 0.08884231 #> 7:lag2  0.17841617 0.14008978 0.26417804 0.09286690 0.19351735 0.16752904 #> 8:lag2  0.15665515 0.04943762 0.09286690 0.34173056 0.09516833 0.15657510 #> 9:lag2  0.16081617 0.12203144 0.19351735 0.09516833 0.27543866 0.16719120 #> 10:lag2 0.25045681 0.08884231 0.16752904 0.15657510 0.16719120 0.28410370 #> 1:lag3  0.18286261 0.19582938 0.24616752 0.10557981 0.30556462 0.18667563 #> 2:lag3  0.30842496 0.19427464 0.35258709 0.17149252 0.36228841 0.31004766 #> 3:lag3  0.24562548 0.22751922 0.29769285 0.12624590 0.21837498 0.21394677 #> 4:lag3  0.35514539 0.19118135 0.36051796 0.18870249 0.32258987 0.34129253 #> 5:lag3  0.46627305 0.14636821 0.27121391 0.23813455 0.24445981 0.38072428 #> 6:lag3  0.14636821 0.42319782 0.21295322 0.07515110 0.18550238 0.13505093 #> 7:lag3  0.27121391 0.21295322 0.40158220 0.14116879 0.29416950 0.25466417 #> 8:lag3  0.23813455 0.07515110 0.14116879 0.51947131 0.14466724 0.23801287 #> 9:lag3  0.24445981 0.18550238 0.29416950 0.14466724 0.41869970 0.25415061 #> 10:lag3 0.38072428 0.13505093 0.25466417 0.23801287 0.25415061 0.43187158 #> 1:lag4  0.28701244 0.30736446 0.38637281 0.16571305 0.47959967 0.29299718 #> 2:lag4  0.48408912 0.30492422 0.55340390 0.26916648 0.56863063 0.48663604 #> 3:lag4  0.38552204 0.35710332 0.46724451 0.19814955 0.34275096 0.33580066 #> 4:lag4  0.55741929 0.30006913 0.56585181 0.29617844 0.50632169 0.53567649 #> 5:lag4  0.73183996 0.22973256 0.42568443 0.37376465 0.38369247 0.59756669 #> 6:lag4  0.22973256 0.66423113 0.33424122 0.11795358 0.29115569 0.21196950 #> 7:lag4  0.42568443 0.33424122 0.63030429 0.22157181 0.46171443 0.39970875 #> 8:lag4  0.37376465 0.11795358 0.22157181 0.81533741 0.22706280 0.37357366 #> 9:lag4  0.38369247 0.29115569 0.46171443 0.22706280 0.65717109 0.39890269 #> 10:lag4 0.59756669 0.21196950 0.39970875 0.37357366 0.39890269 0.67784505 #> 1:lag5  0.38438119 0.41163761 0.51744949 0.22193107 0.64230349 0.39239624 #> 2:lag5  0.64831598 0.40836953 0.74114574 0.36048101 0.76153813 0.65172694 #> 3:lag5  0.51631009 0.47825034 0.62575685 0.26537164 0.45902896 0.44972077 #> 4:lag5  0.74652335 0.40186735 0.75781660 0.39665675 0.67809094 0.71740432 #> 5:lag5  0.98011610 0.30766916 0.57009754 0.50056402 0.51385984 0.80029073 #> 6:lag5  0.30766916 0.88957103 0.44763230 0.15796924 0.38993004 0.28387999 #> 7:lag5  0.57009754 0.44763230 0.84413453 0.29673987 0.61835070 0.53530964 #> 8:lag5  0.50056402 0.15796924 0.29673987 1.09194000 0.30409368 0.50030824 #> 9:lag5  0.51385984 0.38993004 0.61835070 0.30409368 0.88011587 0.53423011 #> 10:lag5 0.80029073 0.28387999 0.53530964 0.50030824 0.53423011 0.90780347 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if valid distance — check_dist","title":"Check if valid distance — check_dist","text":"Check valid distance","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if valid distance — check_dist","text":"","code":"check_dist(x, name = \"x\", check_sym = TRUE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if valid distance — check_dist","text":"x Distance matrix array. name Name x displaying errors. check_sym Logical; TRUE matrix (slice) must symmetric.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if valid distance — check_dist","text":"NULL.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if valid distance — check_dist","text":"Check x valid distance vector, matrix array. errors elements x negative, x symmetric matrix array symmetric matrices.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist_sign.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if valid signed distance — check_dist_sign","title":"Check if valid signed distance — check_dist_sign","text":"Check valid signed distance","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist_sign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if valid signed distance — check_dist_sign","text":"","code":"check_dist_sign(x, name, check_sym = TRUE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist_sign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if valid signed distance — check_dist_sign","text":"x Distance matrix array. name Name x displaying errors. check_sym Logical; TRUE matrix (slice) must symmetric.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist_sign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if valid signed distance — check_dist_sign","text":"NULL.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dist_sign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if valid signed distance — check_dist_sign","text":"Check x valid signed distance vector, matrix array. errors x absolute value symmetric matrix array symmetric matrices.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if valid dists attribute for an mcgf object — check_dists","title":"Check if valid dists attribute for an mcgf object — check_dists","text":"Check valid dists attribute mcgf object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if valid dists attribute for an mcgf object — check_dists","text":"","code":"check_dists(dists, n_var, names, name_dists = \"dists\")"},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if valid dists attribute for an mcgf object — check_dists","text":"dists List scaler vector n_var Scaler, number variables. names column row names matrices dists. name_dists name_dists dists.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if valid dists attribute for an mcgf object — check_dists","text":"dists.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_dists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if valid dists attribute for an mcgf object — check_dists","text":"Check dists valid dists attribute mcgf object. errors 1) dists contain h1 h2, 2) dimensions match, 3) contains elements h, h1 h2. h computed given.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if valid input length — check_length","title":"Check if valid input length — check_length","text":"Check valid input length","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if valid input length — check_length","text":"","code":"check_length(x, length, name)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if valid input length — check_length","text":"x Scaler vector length Length x. name Name x displaying errors.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if valid input length — check_length","text":"x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if valid input length — check_length","text":"Check x approprate length. length x 1 x replicated match length. length x neither 1 length error signaled.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if valid input length — check_length_ls","title":"Check if valid input length — check_length_ls","text":"Check valid input length","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if valid input length — check_length_ls","text":"","code":"check_length_ls(x_ls, length, name)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if valid input length — check_length_ls","text":"x_ls List scaler vector length List length x_ls. name Name x displaying errors.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if valid input length — check_length_ls","text":"x_ls.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/check_length_ls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if valid input length — check_length_ls","text":"Check elements x_ls approprate length. length elements x_ls 1 replicated match length. length elements neither 1 length error signaled.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor2cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert correlation to covariance — cor2cov","title":"Convert correlation to covariance — cor2cov","text":"Convert correlation covariance","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor2cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert correlation to covariance — cor2cov","text":"","code":"cor2cov(V, sd, empirical = FALSE)  cor2cov_ar(V, sd, empirical = FALSE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor2cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert correlation to covariance — cor2cov","text":"V correlation matrix, usually positive semi-definite. sd vector standard deviations. empirical Logical; TRUE V empirical correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor2cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert correlation to covariance — cor2cov","text":"correlation matrix.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor2cov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert correlation to covariance — cor2cov","text":"cor2cov converts matrix. cor2cov_ar converts 3-D array.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor2cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert correlation to covariance — cor2cov","text":"","code":"V <- matrix(c(1, 0.5, 0.5, 1), ncol = 2) sd <- 1:2 cor2cov(V, sd) #>      [,1] [,2] #> [1,]    1    1 #> [2,]    1    4  V_ar <- array(c(1, 0.5, 0.5, 1), dim = c(2, 2, 2)) cor2cov_ar(V_ar, sd) #> , , 1 #>  #>      [,1] [,2] #> [1,]    1    1 #> [2,]    1    4 #>  #> , , 2 #>  #>      [,1] [,2] #> [1,]    1    1 #> [2,]    1    4 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cauchy correlation — cor_cauchy","title":"Calculate Cauchy correlation — cor_cauchy","text":"Calculate Cauchy correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cauchy correlation — cor_cauchy","text":"","code":"cor_cauchy(x, a, alpha, nu = 1, nugget = 0, is.dist = FALSE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cauchy correlation — cor_cauchy","text":"x numeric vector, matrix, array. Smooth parameter, \\(>0\\). alpha Scale parameter, \\(\\alpha\\(0, 1]\\). nu Power parameter, \\(\\nu>0\\). Default 1. nugget nugget effect \\(\\[0, 1]\\). .dist Logical; TRUE, x distance matrix array distance matrices.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cauchy correlation — cor_cauchy","text":"Correlations dimension x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cauchy correlation — cor_cauchy","text":"Cauchy correlation function scale parameter \\(\\) smooth parameter \\(\\alpha\\) form $$C(x)=(1-\\text{nugget})(|x|^{2\\alpha} + 1)^{-\\nu}+\\text{nugget}\\cdot \\delta_{x=0},$$ \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Cauchy correlation — cor_cauchy","text":"Gneiting, T., Schlather, M. (2004). Stochastic Models Separate Fractal Dimension Hurst Effect. SIAM Review, 46(2), 269–282.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_cauchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cauchy correlation — cor_cauchy","text":"","code":"x <- matrix(c(0, 5, 5, 0), nrow = 2) cor_cauchy(x, a = 1, alpha = 0.5) #>           [,1]      [,2] #> [1,] 1.0000000 0.1666667 #> [2,] 0.1666667 1.0000000  x <- matrix(c(0, 5, 5, 0), nrow = 2) cor_cauchy(x, a = 1, alpha = 0.5, nugget = 0.3, is.dist = TRUE) #>           [,1]      [,2] #> [1,] 1.0000000 0.1166667 #> [2,] 0.1166667 1.0000000"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate exponential correlation — cor_exp","title":"Calculate exponential correlation — cor_exp","text":"Calculate exponential correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate exponential correlation — cor_exp","text":"","code":"cor_exp(x, c, gamma = 1/2, nugget = 0, is.dist = FALSE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate exponential correlation — cor_exp","text":"x numeric vector, matrix, array. c Smooth parameter, \\(c>0\\). gamma Scale parameter, \\(\\gamma\\(0, 1/2]\\). Default 1/2. nugget nugget effect \\(\\[0, 1]\\). .dist Logical; TRUE, x distance matrix array distance matrices.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate exponential correlation — cor_exp","text":"Correlations dimension x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate exponential correlation — cor_exp","text":"exponential correlation function scale parameter \\(c\\) smooth parameter \\(\\gamma\\) form $$C(x)=(1-\\text{nugget})\\exp(-c|x|^{2\\gamma})+\\text{nugget}\\cdot \\delta_{x=0},$$ \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate exponential correlation — cor_exp","text":"Diggle, P. J., Tawn, J. ., & Moyeed, R. . (1998). Model-Based Geostatistics. Journal Royal Statistical Society. Series C (Applied Statistics), 47(3), 299–350.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate exponential correlation — cor_exp","text":"","code":"x <- matrix(c(0, 5, 5, 0), nrow = 2) cor_exp(x, c = 0.01, gamma = 0.5) #>           [,1]      [,2] #> [1,] 1.0000000 0.9512294 #> [2,] 0.9512294 1.0000000  x <- matrix(c(0, 5, 5, 0), nrow = 2) cor_exp(x, c = 0.01, gamma = 0.5, nugget = 0.3, is.dist = TRUE) #>           [,1]      [,2] #> [1,] 1.0000000 0.6658606 #> [2,] 0.6658606 1.0000000"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation for fully symmetric model — cor_fs","title":"Calculate correlation for fully symmetric model — cor_fs","text":"Calculate correlation fully symmetric model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation for fully symmetric model — cor_fs","text":"","code":"cor_fs(nugget = 0, c, gamma = 1/2, a, alpha, beta = 0, h, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation for fully symmetric model — cor_fs","text":"nugget nugget effect \\(\\[0, 1]\\). c Scale parameter cor_exp, \\(c>0\\). gamma Smooth parameter cor_exp, \\(\\gamma\\(0, 1/2]\\). Scale parameter cor_cauchy, \\(>0\\). alpha Smooth parameter cor_cauchy, \\(\\alpha\\(0, 1]\\). beta Interaction parameter, \\(\\beta\\[0, 1]\\). h Euclidean distance matrix array. u Time lag, dimension h.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation for fully symmetric model — cor_fs","text":"Correlations dimension h u.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correlation for fully symmetric model — cor_fs","text":"fully symmetric correlation function interaction parameter \\(\\beta\\) form $$C(\\mathbf{h}, u)=\\dfrac{1}{(|u|^{2\\alpha} + 1)} \\left((1-\\text{nugget})\\exp\\left(\\dfrac{-c\\|\\mathbf{h}\\|^{2\\gamma}} {(|u|^{2\\alpha}+1)^{\\beta\\gamma}}\\right)+ \\text{nugget}\\cdot \\delta_{\\mathbf{h}=\\boldsymbol 0}\\right),$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise. \\(\\mathbf{h}\\\\mathbb{R}^2\\) \\(u\\\\mathbb{R}\\). default beta = 0 reduces separable model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate correlation for fully symmetric model — cor_fs","text":"Gneiting, T. (2002). Nonseparable, Stationary Covariance Functions Space–Time Data, Journal American Statistical Association, 97:458, 590-600.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate correlation for fully symmetric model — cor_fs","text":"","code":"h <- matrix(c(0, 5, 5, 0), nrow = 2) u <- matrix(0, nrow = 2, ncol = 2) cor_fs(c = 0.01, gamma = 0.5, a = 1, alpha = 0.5, beta = 0.5, h = h, u = u) #>           [,1]      [,2] #> [1,] 1.0000000 0.9512294 #> [2,] 0.9512294 1.0000000  h <- array(c(0, 5, 5, 0), dim = c(2, 2, 3)) u <- array(rep(0:2, each = 4), dim = c(2, 2, 3)) cor_fs(c = 0.01, gamma = 0.5, a = 1, alpha = 0.5, beta = 0.5, h = h, u = u) #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.9512294 #> [2,] 0.9512294 1.0000000 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.5000000 0.4794134 #> [2,] 0.4794134 0.5000000 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.3333333 0.3209070 #> [2,] 0.3209070 0.3333333 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"Calculate Lagrangian correlation Askey form","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"","code":"cor_lagr_askey(v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"Correlations dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"Lagrangian correlation function Askey form parameters \\(\\boldsymbol v = (v_1, v_2)^\\top\\\\mathbb{R}^2\\) form $$C(\\mathbf{h}, u)=\\left(1-\\dfrac{1}{k\\|\\boldsymbol v\\|} \\left\\|\\mathbf{h}-u\\boldsymbol v\\right\\|\\right)^{3/2}_+,$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(x_+=\\max(x,0), \\mathbf{h} = (\\mathrm{h}_1, \\mathrm{h}_2)^\\top\\\\mathbb{R}^2\\), \\(k > 0\\) scale parameter controlling magnitude asymmetry correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"Askey, R. (1973). Radial characteristic functions, Tech. Report . 1262, Math. Research Center, University Wisconsin-Madison.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_askey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Lagrangian correlation of the Askey form — cor_lagr_askey","text":"","code":"h1 <- matrix(c(0, -5, 5, 0), nrow = 2) h2 <- matrix(c(0, -8, 8, 0), nrow = 2) u <- matrix(0.1, nrow = 2, ncol = 2) cor_lagr_askey(v1 = 5, v2 = 10, h1 = h1, h2 = h2, u = u) #>           [,1]      [,2] #> [1,] 0.9259455 0.4974824 #> [2,] 0.3839919 0.9259455  h1 <- array(c(0, -10, 10, 0), dim = c(2, 2, 3)) h2 <- array(c(0, -10, 10, 0), dim = c(2, 2, 3)) u <- array(rep(-c(1, 2, 3), each = 4), dim = c(2, 2, 3)) cor_lagr_askey(v1 = 10, v2 = 10, h1 = h1, h2 = h2, u = u) #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.3535534 0.0000000 #> [2,] 1.0000000 0.3535534 #>  #> , , 2 #>  #>           [,1] [,2] #> [1,] 0.0000000    0 #> [2,] 0.3535534    0 #>  #> , , 3 #>  #>      [,1] [,2] #> [1,]    0    0 #> [2,]    0    0 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"Calculate Lagrangian correlation exponential form","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"","code":"cor_lagr_exp(v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"Correlations dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"Lagrangian correlation function exponential form parameters \\(\\boldsymbol v = (v_1, v_2)^\\top\\\\mathbb{R}^2\\) form $$C(\\mathbf{h}, u)=\\exp\\left(-\\dfrac{1}{k\\|\\boldsymbol v\\|} \\left\\|\\mathbf{h}-u\\boldsymbol v\\right\\|\\right),$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(\\mathbf{h} = (\\mathrm{h}_1, \\mathrm{h}_2)^\\top\\\\mathbb{R}^2\\), \\(k > 0\\) scale parameter controlling magnitude asymmetry correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"Diggle, P. J., Tawn, J. ., & Moyeed, R. . (1998). Model-Based Geostatistics. Journal Royal Statistical Society. Series C (Applied Statistics), 47(3), 299–350.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Lagrangian correlation of the exponential form — cor_lagr_exp","text":"","code":"h1 <- matrix(c(0, -5, 5, 0), nrow = 2) h2 <- matrix(c(0, -8, 8, 0), nrow = 2) u <- matrix(0.1, nrow = 2, ncol = 2) cor_lagr_exp(v1 = 5, v2 = 10, h1 = h1, h2 = h2, u = u) #>           [,1]      [,2] #> [1,] 0.9512294 0.6892468 #> [2,] 0.6239413 0.9512294  h1 <- array(c(0, -10, 10, 0), dim = c(2, 2, 3)) h2 <- array(c(0, -10, 10, 0), dim = c(2, 2, 3)) u <- array(rep(-c(1, 2, 3), each = 4), dim = c(2, 2, 3)) cor_lagr_exp(v1 = 10, v2 = 10, h1 = h1, h2 = h2, u = u) #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.6065307 0.3678794 #> [2,] 1.0000000 0.6065307 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.3678794 0.2231302 #> [2,] 0.6065307 0.3678794 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.2231302 0.1353353 #> [2,] 0.3678794 0.2231302 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","title":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","text":"Calculate Lagrangian correlation triangular form","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","text":"","code":"cor_lagr_tri(v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","text":"v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","text":"Correlations dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_tri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","text":"Lagrangian correlation function triangular form parameters \\(\\boldsymbol v = (v_1, v_2)^\\top\\\\mathbb{R}^2\\) form $$C(\\mathbf{h}, u)=\\left(1-\\dfrac{1}{k\\|\\boldsymbol v\\|} \\left|\\dfrac{\\mathbf{h}^\\top\\boldsymbol v}{\\|\\boldsymbol v\\|}- u\\|\\boldsymbol v\\|\\right|\\right)_+,$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(x_+=\\max(x,0), \\mathbf{h} = (\\mathrm{h}_1, \\mathrm{h}_2)^\\top\\\\mathbb{R}^2\\), \\(k > 0\\) scale parameter controlling magnitude asymmetry correlation.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_lagr_tri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Lagrangian correlation of the triangular form — cor_lagr_tri","text":"","code":"h1 <- matrix(c(0, -5, 5, 0), nrow = 2) h2 <- matrix(c(0, -8, 8, 0), nrow = 2) u <- matrix(0.1, nrow = 2, ncol = 2) cor_lagr_tri(v1 = 5, v2 = 10, h1 = h1, h2 = h2, u = u) #>      [,1] [,2] #> [1,] 0.95 0.63 #> [2,] 0.53 0.95  h1 <- array(c(0, -10, 10, 0), dim = c(2, 2, 3)) h2 <- array(c(0, -10, 10, 0), dim = c(2, 2, 3)) u <- array(rep(-c(1, 2, 3), each = 4), dim = c(2, 2, 3)) cor_lagr_tri(v1 = 10, v2 = 10, h1 = h1, h2 = h2, u = u) #> , , 1 #>  #>      [,1] [,2] #> [1,]  0.5  0.0 #> [2,]  1.0  0.5 #>  #> , , 2 #>  #>      [,1] [,2] #> [1,]  0.0    0 #> [2,]  0.5    0 #>  #> , , 3 #>  #>      [,1] [,2] #> [1,]    0    0 #> [2,]    0    0 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation for separable model — cor_sep","title":"Calculate correlation for separable model — cor_sep","text":"Calculate correlation separable model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation for separable model — cor_sep","text":"","code":"cor_sep(   spatial = c(\"exp\", \"cauchy\"),   temporal = c(\"exp\", \"cauchy\"),   par_s,   par_t,   h,   u )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation for separable model — cor_sep","text":"spatial Pure spatial model, exp cauchy now. temporal Pure temporal model, exp cauchy now. par_s Parameters pure spatial model. Nugget effect supported. par_t Parameters pure temporal model. h Euclidean distance matrix array. u Time lag, dimension h.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation for separable model — cor_sep","text":"Correlations dimension h u.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correlation for separable model — cor_sep","text":"separable model product pure temporal model, \\(C_T(u)\\), pure spatial model, \\(C_S(\\mathbf{h})\\). form $$C(\\mathbf{h}, u)=C_{T}(u) \\left[(1-\\text{nugget})C_{S}(\\mathbf{h})+\\text{nugget} \\delta_{\\mathbf{h}=0}\\right],$$ \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise. \\(\\mathbf{h}\\\\mathbb{R}^2\\) \\(u\\\\mathbb{R}\\). Now exponential Cauchy correlation models available.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate correlation for separable model — cor_sep","text":"Gneiting, T. (2002). Nonseparable, Stationary Covariance Functions Space–Time Data, Journal American Statistical Association, 97:458, 590-600.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate correlation for separable model — cor_sep","text":"","code":"h <- matrix(c(0, 5, 5, 0), nrow = 2) par_s <- list(nugget = 0.5, c = 0.01, gamma = 0.5) u <- matrix(0, nrow = 2, ncol = 2) par_t <- list(a = 1, alpha = 0.5) cor_sep(     spatial = \"exp\", temporal = \"cauchy\", par_s = par_s, par_t = par_t,     h = h, u = u ) #>           [,1]      [,2] #> [1,] 1.0000000 0.4756147 #> [2,] 0.4756147 1.0000000  h <- array(c(0, 5, 5, 0), dim = c(2, 2, 3)) par_s <- list(nugget = 0.5, c = 0.01, gamma = 0.5) u <- array(rep(0:2, each = 4), dim = c(2, 2, 3)) par_t <- list(a = 1, alpha = 0.5) cor_sep(     spatial = \"exp\", temporal = \"cauchy\", par_s = par_s, par_t = par_t,     h = h, u = u ) #> , , 1 #>  #>           [,1]      [,2] #> [1,] 1.0000000 0.4756147 #> [2,] 0.4756147 1.0000000 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.5000000 0.2378074 #> [2,] 0.2378074 0.5000000 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.3333333 0.1585382 #> [2,] 0.1585382 0.3333333 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate general stationary correlation. — cor_stat","title":"Calculate general stationary correlation. — cor_stat","text":"Calculate general stationary correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate general stationary correlation. — cor_stat","text":"","code":"cor_stat(   base = c(\"sep\", \"fs\"),   lagrangian = c(\"none\", \"lagr_tri\", \"lagr_askey\"),   par_base,   par_lagr,   lambda,   h,   h1,   h2,   u,   base_fixed = FALSE )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate general stationary correlation. — cor_stat","text":"base Base model, sep fs now. correlation matrix/array. lagrangian Lagrangian model, none, lagr_tri, lagr_askey. par_base Parameters base model (symmetric), used base_fixed = FALSE. par_lagr Parameters Lagrangian model. Used lagrangian none. lambda Weight Lagrangian term, \\(\\lambda\\[0, 1]\\). h Euclidean distance matrix array, used base_fixed = FALSE. h1 Horizontal distance matrix array, dimension h. Used lagrangian none. h2 Vertical distance matrix array, dimension h. Used lagrangian none. u Time lag, dimension h. base_fixed Logical; TRUE, base correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate general stationary correlation. — cor_stat","text":"Correlations general stationary model. dimension base base_fixed = FALSE.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate general stationary correlation. — cor_stat","text":"general station model, convex combination base model Lagrangian model, form $$C(\\mathbf{h}, u)=(1-\\lambda)C_{\\text{Base}}(\\mathbf{h}, u)+ \\lambda C_{\\text{Lagr}}(\\mathbf{h}, u),$$ \\(\\lambda\\) weight Lagrangian term. base_fixed = TRUE, correlation form $$C(\\mathbf{h}, u)=(1-\\lambda)C_{\\text{Base}}+ \\lambda C_{\\text{Lagr}}(\\mathbf{h}, u),$$ base correlation matrix/array par_base h used. lagrangian = \"none\", lambda must 0.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate general stationary correlation. — cor_stat","text":"","code":"par_s <- list(nugget = 0.5, c = 0.01, gamma = 0.5) par_t <- list(a = 1, alpha = 0.5) par_base <- list(par_s = par_s, par_t = par_t) par_lagr <- list(v1 = 5, v2 = 10) h1 <- matrix(c(0, 5, -5, 0), nrow = 2) h2 <- matrix(c(0, 8, -8, 0), nrow = 2) h <- sqrt(h1^2 + h2^2) u <- matrix(0.1, nrow = 2, ncol = 2) cor_stat(     base = \"sep\", lagrangian = \"lagr_tri\", par_base = par_base,     par_lagr = par_lagr, lambda = 0.8, h = h, h1 = h1, h2 = h2, u = u ) #>           [,1]      [,2] #> [1,] 0.9418182 0.5067249 #> [2,] 0.5867249 0.9418182  h1 <- array(c(0, 5, -5, 0), dim = c(2, 2, 3)) h2 <- array(c(0, 8, -8, 0), dim = c(2, 2, 3)) h <- sqrt(h1^2 + h2^2) u <- array(rep(c(0.1, 0.2, 0.3), each = 4), dim = c(2, 2, 3)) fit_base <- cor_fs(     nugget = 0.5, c = 0.01, gamma = 0.5, a = 1, alpha = 0.5,     beta = 0.0, h = h, u = u ) par_lagr <- list(v1 = 5, v2 = 10) cor_stat(     base = fit_base, lagrangian = \"lagr_askey\", par_lagr = par_lagr,     h1 = h1, h2 = h2, u = u, lambda = 0.8, base_fixed = TRUE ) #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.9225746 0.3899184 #> [2,] 0.4807108 0.9225746 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.8497186 0.3405980 #> [2,] 0.5219630 0.8497186 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.7807752 0.2944717 #> [2,] 0.5659495 0.7807752 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate general stationary correlation. — cor_stat_rs","title":"Calculate general stationary correlation. — cor_stat_rs","text":"Calculate general stationary correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate general stationary correlation. — cor_stat_rs","text":"","code":"cor_stat_rs(   n_regime,   base_ls,   lagrangian_ls,   par_base_ls,   par_lagr_ls,   lambda_ls,   h_ls,   h1_ls,   h2_ls,   u_ls,   base_fixed = FALSE )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate general stationary correlation. — cor_stat_rs","text":"n_regime Integer, number regimes. base_ls List base model, sep fs now. list correlation matrices/arrays. lagrangian_ls List Lagrangian model, lagr_tri lagr_askey now. par_base_ls List parameters base model, used base_fixed = FALSE. par_lagr_ls List parameters Lagrangian model.  Used lagrangian_ls none. lambda_ls List weight Lagrangian term, \\(\\lambda\\[0, 1]\\). h_ls List Euclidean distance matrix array, used base_fixed = FALSE. h1_ls List horizontal distance matrix array, dimension h_ls. Used lagrangian_ls none. h2_ls List vertical distance matrix array, dimension h_ls. Used lagrangian_ls none. u_ls List time lag, dimension h_ls. base_fixed Logical; TRUE, base_ls list correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate general stationary correlation. — cor_stat_rs","text":"Correlations general stationary model. dimension base_ls base_fixed = TRUE.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate general stationary correlation. — cor_stat_rs","text":"gives list general stationary correlation n_regime regimes. See cor_stat model details. Model parameters lists length 1 n_regime. length 1, values used regimes. base_fixed = TRUE, base list correlation par_base_ls h_ls used.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/cor_stat_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate general stationary correlation. — cor_stat_rs","text":"","code":"# Fit general stationary model with sep base. par_s <- list(nugget = 0.5, c = 0.01, gamma = 0.5) par_t <- list(a = 1, alpha = 0.5) par_base <- list(par_s = par_s, par_t = par_t) h1 <- array(c(0, 5, -5, 0), dim = c(2, 2, 3)) h2 <- array(c(0, 8, -8, 0), dim = c(2, 2, 3)) h <- sqrt(h1^2 + h2^2) u <- array(rep(c(1, 2, 3), each = 4), dim = c(2, 2, 3)) cor_stat_rs(     n_regime = 2,     base_ls = list(\"sep\"),     lagrangian_ls = list(\"none\", \"lagr_tri\"),     par_base_ls = list(par_base),     par_lagr_ls = list(NULL, list(v1 = 10, v2 = 20)),     lambda_ls = list(0, 0.2),     h_ls = list(h),     h1_ls = list(NULL, h1),     h2_ls = list(NULL, h2),     u_ls = list(u, u + 1) ) #> [[1]] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.5000000 0.2274934 #> [2,] 0.2274934 0.5000000 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.3333333 0.1516622 #> [2,] 0.1516622 0.3333333 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.2500000 0.1137467 #> [2,] 0.1137467 0.2500000 #>  #>  #> [[2]] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.2666667 0.1213298 #> [2,] 0.1633298 0.2666667 #>  #> , , 2 #>  #>            [,1]       [,2] #> [1,] 0.20000000 0.09099735 #> [2,] 0.09099735 0.20000000 #>  #> , , 3 #>  #>            [,1]       [,2] #> [1,] 0.16000000 0.07279788 #> [2,] 0.07279788 0.16000000 #>  #>   # Fit general stationary model given fs as the base model. h1 <- array(c(0, 5, -5, 0), dim = c(2, 2, 3)) h2 <- array(c(0, 8, -8, 0), dim = c(2, 2, 3)) h <- sqrt(h1^2 + h2^2) u <- array(rep(c(0.1, 0.2, 0.3), each = 4), dim = c(2, 2, 3)) fit_base <- cor_fs(     nugget = 0.5, c = 0.01, gamma = 0.5, a = 1, alpha = 0.5,     beta = 0.0, h = h, u = u ) par_lagr <- list(v1 = 5, v2 = 10) cor_stat_rs(     n_regime = 2,     par_lagr_ls = list(par_lagr),     h1_ls = list(h1),     h2_ls = list(h2),     u_ls = list(u, u + 1),     lambda_ls = list(0, 0.8),     base_ls = list(fit_base),     lagrangian = list(\"lagr_tri\", \"lagr_askey\"),     base_fixed = TRUE ) #> [[1]] #> , , 1 #>  #>           [,1]      [,2] #> [1,] 0.9090909 0.4136243 #> [2,] 0.4136243 0.9090909 #>  #> , , 2 #>  #>           [,1]      [,2] #> [1,] 0.8333333 0.3791556 #> [2,] 0.3791556 0.8333333 #>  #> , , 3 #>  #>           [,1]      [,2] #> [1,] 0.7692308 0.3499898 #> [2,] 0.3499898 0.7692308 #>  #>  #> [[2]] #> , , 1 #>  #>           [,1]       [,2] #> [1,] 0.4233135 0.08671162 #> [2,] 0.7251899 0.42331352 #>  #> , , 2 #>  #>           [,1]       [,2] #> [1,] 0.3690524 0.07583112 #> [2,] 0.6650994 0.36905244 #>  #> , , 3 #>  #>           [,1]       [,2] #> [1,] 0.3194964 0.06999796 #> [2,] 0.6069045 0.31949639 #>  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cov_joint.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance for joint distribution — cov_joint","title":"Covariance for joint distribution — cov_joint","text":"Covariance joint distribution","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cov_joint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance for joint distribution — cov_joint","text":"","code":"cov_joint(cov)  cov_par(cov, horizon = 1, n_var, joint = FALSE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/cov_joint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance for joint distribution — cov_joint","text":"cov Array covariance matrices. horizon Forecast horizon, default 1. n_var Number locations. joint Logical; True cov joint covariance matrix.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cov_joint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance for joint distribution — cov_joint","text":"joint covariance matrix joint distribution current values past values Markov chain Gaussian field.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/cov_joint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covariance for joint distribution — cov_joint","text":"covariance matrix joint distribution block toeplitz structure. Input cov assumed array cross-covariance matrices \\(\\)th matrix slice correspond \\((-1)\\)th time lag. example, cov[, , 1] cross-covariance matrix time lag 0. matrices cov used construct joint covariance matrix. cov_par gives weights covariance matrix current values..","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for calculating distance matrices — dists","title":"Generic function for calculating distance matrices — dists","text":"Generic function calculating distance matrices","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for calculating distance matrices — dists","text":"","code":"dists(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for calculating distance matrices — dists","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for calculating distance matrices — dists","text":"list signed distance matrices: h (Euclidean), h1 (horizontal), h2 (vertical) dimensions.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating distance matrices for an mcgf object — dists.mcgf","title":"Calculating distance matrices for an mcgf object — dists.mcgf","text":"Calculating distance matrices mcgf object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating distance matrices for an mcgf object — dists.mcgf","text":"","code":"# S3 method for mcgf dists(x, return_grid = FALSE, ...)  dists(x) <- value"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating distance matrices for an mcgf object — dists.mcgf","text":"x mcgf object. return_grid Logical; used locations x longitudes latitudes. ... Additional parameters attributes. value List signed distance matrices, outputted dists().","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating distance matrices for an mcgf object — dists.mcgf","text":"list signed distance matrices: h (Euclidean), h1 (horizontal), h2 (vertical).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculating distance matrices for an mcgf object — dists.mcgf","text":"dists attribute available x, printed. Otherwise dists calculated based locations attribute.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dists.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculating distance matrices for an mcgf object — dists.mcgf","text":"","code":"data <- cbind(S1 = 1:5, S2 = 4:8, S3 = 5:9) lon <- c(110, 120, 130) lat <- c(50, 55, 60) locations <- cbind(lon, lat)  # if locations are longitudes and latitudes obj <- mcgf(data = data, locations = locations) #> `time` is not provided, assuming rows are equally spaced temporally. obj #>   S1 S2 S3 #> 1  1  4  5 #> 2  2  5  6 #> 3  3  6  7 #> 4  4  7  8 #> 5  5  8  9 #>  #> Other attributes: locations, longlat, origin  dists(obj) #> $h #>           1        2        3 #> 1    0.0000 847.5798 1692.986 #> 2  847.5798   0.0000  845.408 #> 3 1692.9859 845.4080    0.000 #>  #> $h1 #>           1         2          3 #> 1    0.0000 -639.3934 -1275.5045 #> 2  639.3934    0.0000  -636.1111 #> 3 1275.5045  636.1111     0.0000 #>  #> $h2 #>          1         2          3 #> 1    0.000 -556.3880 -1113.2338 #> 2  556.388    0.0000  -556.8459 #> 3 1113.234  556.8459     0.0000 #>  dists(obj) <- dists(obj) obj #>   S1 S2 S3 #> 1  1  4  5 #> 2  2  5  6 #> 3  3  6  7 #> 4  4  7  8 #> 5  5  8  9 #>  #> Other attributes: locations, longlat, origin, dists   # if locations are just coordinates in a 2D plane: obj <- mcgf(data = data, locations = locations, longlat = FALSE) #> `time` is not provided, assuming rows are equally spaced temporally. obj #>   S1 S2 S3 #> 1  1  4  5 #> 2  2  5  6 #> 3  3  6  7 #> 4  4  7  8 #> 5  5  8  9 #>  #> Other attributes: locations, longlat, origin   # calculate distances dists(obj) #> $h #>          1        2        3 #> 1  0.00000 11.18034 22.36068 #> 2 11.18034  0.00000 11.18034 #> 3 22.36068 11.18034  0.00000 #>  #> $h1 #>    1   2   3 #> 1  0 -10 -20 #> 2 10   0 -10 #> 3 20  10   0 #>  #> $h2 #>    1  2   3 #> 1  0 -5 -10 #> 2  5  0  -5 #> 3 10  5   0 #>   # add distances to the `mcgf` object dists(obj) <- dists(obj) obj #>   S1 S2 S3 #> 1  1  4  5 #> 2  2  5  6 #> 3  3  6  7 #> 4  4  7  8 #> 5  5  8  9 #>  #> Other attributes: locations, longlat, origin, dists"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation for separable model — ..cor_sep","title":"Calculate correlation for separable model — ..cor_sep","text":"Calculate correlation separable model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation for separable model — ..cor_sep","text":"","code":"..cor_sep(nugget, c, gamma = 1/2, a, alpha, h, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation for separable model — ..cor_sep","text":"nugget nugget effect \\(\\[0, 1]\\). c Scale parameter cor_exp, \\(c>0\\). gamma Smooth parameter cor_exp, \\(\\gamma\\(0, 1/2]\\). Scale parameter cor_cauchy, \\(>0\\). alpha Smooth parameter cor_cauchy, \\(\\alpha\\(0, 1]\\). h Euclidean distance matrix array. u Time lag, dimension h.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation for separable model — ..cor_sep","text":"Correlations separable model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_sep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correlation for separable model — ..cor_sep","text":"function special case .cor_fs(). used inside fit_base().","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation for the general stationary model — ..cor_stat","title":"Calculate correlation for the general stationary model — ..cor_stat","text":"Calculate correlation general stationary model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation for the general stationary model — ..cor_stat","text":"","code":"..cor_stat(cor_base, lagrangian, lambda, v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation for the general stationary model — ..cor_stat","text":"cor_base array base cross-correlation matrices. lagrangian Lagrangian model, none, lagr_tri, lagr_askey. lambda Weight Lagrangian term, \\(\\lambda\\[0, 1]\\). v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation for the general stationary model — ..cor_stat","text":"Correlations general stationary model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-.cor_stat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correlation for the general stationary model — ..cor_stat","text":"function special case .cor_stat(). used inside fit_lagr().","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_cauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cauchy correlation — .cor_cauchy","title":"Calculate Cauchy correlation — .cor_cauchy","text":"Calculate Cauchy correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_cauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cauchy correlation — .cor_cauchy","text":"","code":".cor_cauchy(x, a, alpha, nu = 1, nugget = 0)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_cauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cauchy correlation — .cor_cauchy","text":"x numeric vector, matrix, array. Smooth parameter, \\(>0\\). alpha Scale parameter, \\(\\alpha\\(0, 1]\\). nu Power parameter, \\(\\nu>0\\). Default 1. nugget nugget effect \\(\\[0, 1]\\).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_cauchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cauchy correlation — .cor_cauchy","text":"Correlations dimension x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_cauchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cauchy correlation — .cor_cauchy","text":"Cauchy correlation function scale parameter \\(\\) smooth parameter \\(\\alpha\\) form $$C(x)=(1-\\text{nugget})(|x|^{2\\alpha} + 1)^{-\\nu}+\\text{nugget}\\cdot \\delta_{x=0},$$ \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_cauchy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Cauchy correlation — .cor_cauchy","text":"Gneiting, T., Schlather, M. (2004). Stochastic Models Separate Fractal Dimension Hurst Effect. SIAM Review, 46(2), 269–282.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate exponential correlation — .cor_exp","title":"Calculate exponential correlation — .cor_exp","text":"Calculate exponential correlation","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate exponential correlation — .cor_exp","text":"","code":".cor_exp(x, c, gamma = 1/2, nugget = 0)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate exponential correlation — .cor_exp","text":"x numeric vector, matrix, array. c Smooth parameter, \\(c>0\\). gamma Scale parameter, \\(\\gamma\\(0, 1/2]\\). Default 1/2. nugget nugget effect \\(\\[0, 1]\\).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate exponential correlation — .cor_exp","text":"Correlations dimension x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate exponential correlation — .cor_exp","text":"exponential correlation function scale parameter \\(c\\) smooth parameter \\(\\gamma\\) form $$C(x)=(1-\\text{nugget})\\exp(-c|x|^{2\\gamma})+\\text{nugget}\\cdot \\delta_{x=0},$$ \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_exp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate exponential correlation — .cor_exp","text":"Diggle, P. J., Tawn, J. ., & Moyeed, R. . (1998). Model-Based Geostatistics. Journal Royal Statistical Society. Series C (Applied Statistics), 47(3), 299–350.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation for fully symmetric model — .cor_fs","title":"Calculate correlation for fully symmetric model — .cor_fs","text":"Calculate correlation fully symmetric model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation for fully symmetric model — .cor_fs","text":"","code":".cor_fs(nugget, c, gamma = 1/2, a, alpha, beta = 0, h, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation for fully symmetric model — .cor_fs","text":"nugget nugget effect \\(\\[0, 1]\\). c Scale parameter cor_exp, \\(c>0\\). gamma Smooth parameter cor_exp, \\(\\gamma\\(0, 1/2]\\). Scale parameter cor_cauchy, \\(>0\\). alpha Smooth parameter cor_cauchy, \\(\\alpha\\(0, 1]\\). beta Interaction parameter, \\(\\beta\\[0, 1]\\). h Euclidean distance matrix array. u Time lag, dimension h.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation for fully symmetric model — .cor_fs","text":"Correlations dimension h u.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_fs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correlation for fully symmetric model — .cor_fs","text":"fully symmetric correlation function interaction parameter \\(\\beta\\) form $$C(\\mathbf{h}, u)=\\dfrac{1}{(|u|^{2\\alpha} + 1)} \\left((1-\\text{nugget})\\exp\\left(\\dfrac{-c\\|\\mathbf{h}\\|^{2\\gamma}} {(|u|^{2\\alpha}+1)^{\\beta\\gamma}}\\right)+ \\text{nugget}\\cdot \\delta_{\\mathbf{h}=\\boldsymbol 0}\\right),$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise. \\(\\mathbf{h}\\\\mathbb{R}^2\\) \\(u\\\\mathbb{R}\\). default beta = 0 reduces separable model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_fs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate correlation for fully symmetric model — .cor_fs","text":"Gneiting, T. (2002). Nonseparable, Stationary Covariance Functions Space–Time Data, Journal American Statistical Association, 97:458, 590-600.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_askey.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","title":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","text":"Calculate Lagrangian correlation Askey form","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_askey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","text":"","code":".cor_lagr_askey(v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_askey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","text":"v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_askey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","text":"Correlations dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_askey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","text":"Lagrangian correlation function Askey form parameters \\(\\boldsymbol v = (v_1, v_2)^\\top\\\\mathbb{R}^2\\) form $$C(\\mathbf{h}, u)=\\left(1-\\dfrac{1}{k\\|\\boldsymbol v\\|} \\left\\|\\mathbf{h}-u\\boldsymbol v\\right\\|\\right)^{3/2}_+,$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(x_+=\\max(x,0), \\mathbf{h} = (\\mathrm{h}_1, \\mathrm{h}_2)^\\top\\\\mathbb{R}^2\\), \\(k > 0\\) scale parameter controlling magnitude asymmetry correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_askey.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Lagrangian correlation of the Askey form — .cor_lagr_askey","text":"Askey, R. (1973). Radial characteristic functions, Tech. Report . 1262, Math. Research Center, University Wisconsin-Madison.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","title":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","text":"Calculate Lagrangian correlation exponential form","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","text":"","code":".cor_lagr_exp(v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","text":"v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","text":"Correlations dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","text":"Lagrangian correlation function exponential form parameters \\(\\boldsymbol v = (v_1, v_2)^\\top\\\\mathbb{R}^2\\) form $$C(\\mathbf{h}, u)=\\exp\\left(-\\dfrac{1}{k\\|\\boldsymbol v\\|} \\left\\|\\mathbf{h}-u\\boldsymbol v\\right\\|\\right),$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(\\mathbf{h} = (\\mathrm{h}_1, \\mathrm{h}_2)^\\top\\\\mathbb{R}^2\\), \\(k > 0\\) scale parameter controlling magnitude asymmetry correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_exp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Lagrangian correlation of the exponential form — .cor_lagr_exp","text":"Diggle, P. J., Tawn, J. ., & Moyeed, R. . (1998). Model-Based Geostatistics. Journal Royal Statistical Society. Series C (Applied Statistics), 47(3), 299–350.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_tri.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lagrangian correlation of the triangular form — .cor_lagr_tri","title":"Calculate Lagrangian correlation of the triangular form — .cor_lagr_tri","text":"Calculate Lagrangian correlation triangular form","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lagrangian correlation of the triangular form — .cor_lagr_tri","text":"","code":".cor_lagr_tri(v1, v2, k = 2, h1, h2, u)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Lagrangian correlation of the triangular form — .cor_lagr_tri","text":"v1 Prevailing wind, u-component. v2 Prevailing wind, v-component. k Scale parameter \\(\\|\\boldsymbol v\\|\\), \\(k>0\\). Default 2. h1 Horizontal distance matrix array. h2 Vertical distance matrix array, dimension h1. u Time lag, dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Lagrangian correlation of the triangular form — .cor_lagr_tri","text":"Correlations dimension h1.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_lagr_tri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Lagrangian correlation of the triangular form — .cor_lagr_tri","text":"Lagrangian correlation function triangular form parameters \\(\\boldsymbol v = (v_1, v_2)^\\top\\\\mathbb{R}^2\\) form $$C(\\mathbf{h}, u)=\\left(1-\\dfrac{1}{k\\|\\boldsymbol v\\|} \\left|\\dfrac{\\mathbf{h}^\\top\\boldsymbol v}{\\|\\boldsymbol v\\|}- u\\|\\boldsymbol v\\|\\right|\\right)_+,$$ \\(\\|\\cdot\\|\\) Euclidean distance, \\(x_+=\\max(x,0), \\mathbf{h} = (\\mathrm{h}_1, \\mathrm{h}_2)^\\top\\\\mathbb{R}^2\\), \\(k > 0\\) scale parameter controlling magnitude asymmetry correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correlation for separable model — .cor_sep","title":"Calculate correlation for separable model — .cor_sep","text":"Calculate correlation separable model","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correlation for separable model — .cor_sep","text":"","code":".cor_sep(spatial, temporal, par_s, par_t)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correlation for separable model — .cor_sep","text":"spatial Pure spatial model, exp cauchy now. temporal Pure temporal model, exp cauchy now. par_s Parameters pure spatial model. Nugget effect supported. par_t Parameters pure temporal model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correlation for separable model — .cor_sep","text":"Correlations separable model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_sep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correlation for separable model — .cor_sep","text":"separable model product pure temporal model, \\(C_T(u)\\), pure spatial model, \\(C_S(\\mathbf{h})\\). form $$C(\\mathbf{h}, u)=C_{T}(u) \\left[(1-\\text{nugget})C_{S}(\\mathbf{h})+\\text{nugget} \\delta_{\\mathbf{h}=0}\\right],$$ \\(\\delta_{x=0}\\) 1 \\(x=0\\) 0 otherwise. \\(\\mathbf{h}\\\\mathbb{R}^2\\) \\(u\\\\mathbb{R}\\). Now exponential Cauchy correlation models available.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_sep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate correlation for separable model — .cor_sep","text":"Gneiting, T. (2002). Nonseparable, Stationary Covariance Functions Space–Time Data, Journal American Statistical Association, 97:458, 590-600.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate general stationary correlation. — .cor_stat","title":"Calculate general stationary correlation. — .cor_stat","text":"Calculate general stationary correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate general stationary correlation. — .cor_stat","text":"","code":".cor_stat(base, lagrangian, par_base, par_lagr, lambda, base_fixed = FALSE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate general stationary correlation. — .cor_stat","text":"base Base model, sep fs now. correlation matrix/array. lagrangian Lagrangian model, none, lagr_tri, lagr_askey. par_base Parameters base model (symmetric), used base_fixed = FALSE. par_lagr Parameters Lagrangian model. Used lagrangian none. lambda Weight Lagrangian term, \\(\\lambda\\[0, 1]\\). base_fixed Logical; TRUE, base correlation.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate general stationary correlation. — .cor_stat","text":"Correlations general stationary model. dimension base base_fixed = FALSE.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_stat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate general stationary correlation. — .cor_stat","text":"general station model, convex combination base model Lagrangian model, form $$C(\\mathbf{h}, u)=(1-\\lambda)C_{\\text{Base}}(\\mathbf{h}, u)+ \\lambda C_{\\text{Lagr}}(\\mathbf{h}, u),$$ \\(\\lambda\\) weight Lagrangian term. base_fixed = TRUE, correlation form $$C(\\mathbf{h}, u)=(1-\\lambda)C_{\\text{Base}}+ \\lambda C_{\\text{Lagr}}(\\mathbf{h}, u),$$ base correlation matrix/array par_base h used. lagrangian = \"none\", lambda must 0.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-cor_stat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate general stationary correlation. — .cor_stat","text":"Gneiting, T., Genton, M., & Guttorp, P. (2006). Geostatistical Space-Time Models, Stationarity, Separability, Full Symmetry. C&H/CRC Monographs Statistics & Applied Probability (pp. 151–175). Chapman Hall/CRC.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate (signed) distances between coordinates — .find_dists","title":"Calculate (signed) distances between coordinates — .find_dists","text":"Calculate (signed) distances coordinates","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate (signed) distances between coordinates — .find_dists","text":"","code":".find_dists(   grid,   names = NULL,   longlat = TRUE,   origin = 1L,   return_grid = FALSE,   lon_ref,   lat_ref )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate (signed) distances between coordinates — .find_dists","text":"grid matrix 2D points, first column x/longitude, second column y/latitude. names Names locations. longlat Logical, TURE Great Circle (WGS84 ellipsoid) distance; FALSE, Euclidean distance. origin Optional; used longlat TRUE. integer index indicating reference location used origin. return_grid Logical; used longlat TRUE. TRUE mapped coordinates 2D plane returned. lon_ref Reference longitude computing longitudinal distances. Default mean longitudes grid. lat_ref Reference latitude computing latitudinal distances. Default mean latitudes grid.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate (signed) distances between coordinates — .find_dists","text":"List signed distances.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate (signed) distances between coordinates — .find_dists_new","title":"Calculate (signed) distances between coordinates — .find_dists_new","text":"Calculate (signed) distances coordinates","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate (signed) distances between coordinates — .find_dists_new","text":"","code":".find_dists_new(   grid,   grid_new,   names = NULL,   names_new = NULL,   longlat = TRUE,   origin = 1L,   return_grid = FALSE,   lon_ref,   lat_ref )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate (signed) distances between coordinates — .find_dists_new","text":"grid matrix 2D points, first column x/longitude, second column y/latitude. grid_new matrix 2D points, first column x/longitude, second column y/latitude. names Names locations. names_new Names new locations. longlat Logical, TURE Great Circle (WGS84 ellipsoid) distance; FALSE, Euclidean distance. origin Optional; used longlat TRUE. integer index indicating reference location used origin. return_grid Logical; used longlat TRUE. TRUE mapped coordinates 2D plane returned. lon_ref Reference longitude computing longitudinal distances. Default mean longitudes grid. lat_ref Reference latitude computing latitudinal distances. Default mean latitudes grid.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-find_dists_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate (signed) distances between coordinates — .find_dists_new","text":"List signed distances new locations old grid.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_rs_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate regime-switching Markov chain Gaussian field — .mcgf_rs_sim","title":"Simulate regime-switching Markov chain Gaussian field — .mcgf_rs_sim","text":"Simulate regime-switching Markov chain Gaussian field","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_rs_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate regime-switching Markov chain Gaussian field — .mcgf_rs_sim","text":"","code":".mcgf_rs_sim(   N,   label,   base_ls,   lagrangian_ls,   par_base_ls,   par_lagr_ls,   lambda_ls,   dists_ls,   sd_ls,   lag_ls,   scale_time = 1,   init = 0,   mu_c_ls,   mu_p_ls,   return_all = FALSE )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_rs_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate regime-switching Markov chain Gaussian field — .mcgf_rs_sim","text":"N Sample size. label Vector regime labels length N. base_ls List base model, sep fs now. lagrangian_ls List Lagrangian model, \"none\" lagr_tri now. par_base_ls List parameters base model. par_lagr_ls List parameters Lagrangian model. lambda_ls List weight Lagrangian term, \\(\\lambda\\[0, 1]\\). dists_ls List distance matrices arrays. sd_ls List standard deviation location. lag_ls List time lags. scale_time Scale time unit, default 1. Elements lag_ls divided scale_time. init Initial samples, default 0. mu_c_ls, mu_p_ls List means current past. return_all Logical; TRUE joint covariance matrix, arrays distances time lag returned.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_rs_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate regime-switching Markov chain Gaussian field — .mcgf_rs_sim","text":"Simulated regime-switching Markov chain Gaussian field user-specified covariance structures. simulation done kriging. output data space-wide format. element dists_ls must contain h symmetric models, h1 h2 general stationary models. init can scalar vector appropriate size. List elements sd_ls, mu_c_ls, mu_p_ls must vectors appropriate sizes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Markov chain Gaussian field — .mcgf_sim","title":"Simulate Markov chain Gaussian field — .mcgf_sim","text":"Simulate Markov chain Gaussian field","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Markov chain Gaussian field — .mcgf_sim","text":"","code":".mcgf_sim(   N,   base,   lagrangian,   par_base,   par_lagr,   lambda,   dists,   sd,   lag,   scale_time = 1,   horizon = 1,   init = 0,   mu_c,   mu_p,   return_all = FALSE )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Markov chain Gaussian field — .mcgf_sim","text":"N Sample size. base Base model, sep fs now. lagrangian Lagrangian model, \"none\" lagr_tri now. par_base Parameters base model (symmetric). par_lagr Parameters Lagrangian model. lambda Weight Lagrangian term, \\(\\lambda\\[0, 1]\\). dists Distance matrices arrays. sd Standard deviation location. lag Time lag. scale_time Scale time unit, default 1. lag divided scale_time. horizon Forecast horizon, default 1. init Initial samples, default 0. mu_c, mu_p Means current past. return_all Logical; TRUE joint covariance matrix, arrays distances time lag returned.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/dot-mcgf_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Markov chain Gaussian field — .mcgf_sim","text":"Simulated Markov chain Gaussian field user-specified covariance structure. simulation done kriging. output data space-wide format. dists must contain h symmetric models, h1 h2 general stationary models. horizon controls forecasting horizon. sd, mu_c, mu_p, init must vectors appropriate sizes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization for wls method — estimate","title":"Optimization for wls method — estimate","text":"Optimization wls method","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization for wls method — estimate","text":"","code":"estimate(par_init, method, optim_fn, cor_fn, par_fixed, lower, upper, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization for wls method — estimate","text":"par_init Initial values parameters optimized. method Parameter estimation method. \"wls\" \"mle\". optim_fn Optimization function. cor_fn Correlation function. par_fixed Fixed parameters cor_fn. lower Lower bound. upper Upper bound. ... Additional arguments passed optim_fn, obj_wls obj_mle.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimization for wls method — estimate","text":"list outputted optimization functions optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate (signed) distances between coordinates — find_dists","title":"Calculate (signed) distances between coordinates — find_dists","text":"Calculate (signed) distances coordinates","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate (signed) distances between coordinates — find_dists","text":"","code":"find_dists(locations, longlat = TRUE, origin = 1L, return_grid = FALSE, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate (signed) distances between coordinates — find_dists","text":"locations matrix data.frame 2D points, first column x/longitude, second column y/latitude. longlat Logical, TURE Great Circle (WGS84 ellipsoid) distance; FALSE, Euclidean distance. origin Optional; used longlat TRUE. integer index indicating reference location used origin. return_grid Logical; used longlat TRUE. TRUE mapped coordinates 2D plane returned. ... Optional arguments passed .find_dists().","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate (signed) distances between coordinates — find_dists","text":"list distance matrices. return_grid TRUE, list consists list distance matrices, mapped 2D grid, origin returned.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate (signed) distances between coordinates — find_dists","text":"locations must matrix data.frame containing 2 columns, first column x/longitude, second column y/latitude. row names locations used names locations. longlat TRUE, original coordinates mapped 2D Euclidean plane given reference location. First, Great Circle (WGS84 ellipsoid) signed distance matrices calculated, original latitudes replaced mean find signed longitudinal distances original longitudes replaced mean find signed latitudinal distances. given index reference location origin, new set coordinates 2D plane generated coordinates determined signed distances locations reference location. Finally distance matrices new coordinates outputted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate (signed) distances between coordinates — find_dists","text":"","code":"lon <- c(110, 120, 130) lat <- c(50, 55, 60) locations <- cbind(lon, lat) rownames(locations) <- paste(\"Site\", 1:3) find_dists(locations) #> $h #>           Site 1   Site 2   Site 3 #> Site 1    0.0000 847.5798 1692.986 #> Site 2  847.5798   0.0000  845.408 #> Site 3 1692.9859 845.4080    0.000 #>  #> $h1 #>           Site 1    Site 2     Site 3 #> Site 1    0.0000 -639.3934 -1275.5045 #> Site 2  639.3934    0.0000  -636.1111 #> Site 3 1275.5045  636.1111     0.0000 #>  #> $h2 #>          Site 1    Site 2     Site 3 #> Site 1    0.000 -556.3880 -1113.2338 #> Site 2  556.388    0.0000  -556.8459 #> Site 3 1113.234  556.8459     0.0000 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate (signed) distances between coordinates — find_dists_new","title":"Calculate (signed) distances between coordinates — find_dists_new","text":"Calculate (signed) distances coordinates","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate (signed) distances between coordinates — find_dists_new","text":"","code":"find_dists_new(   locations,   locations_new,   longlat = TRUE,   origin = 1L,   return_grid = FALSE,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate (signed) distances between coordinates — find_dists_new","text":"locations matrix data.frame 2D points, first column x/longitude, second column y/latitude. locations_new matrix data.frame 2D points, first column x/longitude, second column y/latitude. longlat Logical, TURE Great Circle (WGS84 ellipsoid) distance; FALSE, Euclidean distance. origin Optional; used longlat TRUE. integer index indicating reference location locations used origin. origin find_dists must used ensure consistancy outputs find_dists find_dists_new. return_grid Logical; used longlat TRUE. TRUE mapped coordinates 2D plane locations returned. ... Optional arguments passed .find_dists_new().","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate (signed) distances between coordinates — find_dists_new","text":"list distance matrices locations. return_grid TRUE, list consists list distance matrices locations, mapped 2D grid locations, origin returned.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists_new.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate (signed) distances between coordinates — find_dists_new","text":"locations locations_new must matrices data.frames containing 2 columns, first column x/longitude, second column y/latitude. row names locations locations_new used names locations. longlat TRUE, original coordinates mapped 2D Euclidean plane given reference location locations. First, Great Circle (WGS84 ellipsoid) signed distance matrices calculated, original latitudes replaced mean latitudes locations find signed longitudinal distances original longitudes replaced mean longitudes locations find signed latitudinal distances. given index reference location origin, new set coordinates 2D plane generated coordinates determined signed distances locations reference location. Finally distance matrices new coordinates stations outputted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/find_dists_new.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate (signed) distances between coordinates — find_dists_new","text":"","code":"lon <- c(110, 120, 130) lat <- c(50, 55, 60) locations <- cbind(lon, lat) rownames(locations) <- paste(\"Site\", 1:3) find_dists(locations) #> $h #>           Site 1   Site 2   Site 3 #> Site 1    0.0000 847.5798 1692.986 #> Site 2  847.5798   0.0000  845.408 #> Site 3 1692.9859 845.4080    0.000 #>  #> $h1 #>           Site 1    Site 2     Site 3 #> Site 1    0.0000 -639.3934 -1275.5045 #> Site 2  639.3934    0.0000  -636.1111 #> Site 3 1275.5045  636.1111     0.0000 #>  #> $h2 #>          Site 1    Site 2     Site 3 #> Site 1    0.000 -556.3880 -1113.2338 #> Site 2  556.388    0.0000  -556.8459 #> Site 3 1113.234  556.8459     0.0000 #>   locations_new <- c(115, 55) find_dists_new(locations, locations_new) #> $h #>           Site 1   Site 2   Site 3     New_1 #> Site 1    0.0000 847.5798 1692.986  641.7978 #> Site 2  847.5798   0.0000  845.408  319.4921 #> Site 3 1692.9859 845.4080    0.000 1106.0085 #> New_1   641.7978 319.4921 1106.009    0.0000 #>  #> $h1 #>           Site 1    Site 2     Site 3     New_1 #> Site 1    0.0000 -639.3934 -1275.5045 -319.9013 #> Site 2  639.3934    0.0000  -636.1111  319.4921 #> Site 3 1275.5045  636.1111     0.0000  955.6032 #> New_1   319.9013 -319.4921  -955.6032    0.0000 #>  #> $h2 #>          Site 1    Site 2     Site 3     New_1 #> Site 1    0.000 -556.3880 -1113.2338 -556.3880 #> Site 2  556.388    0.0000  -556.8459    0.0000 #> Site 3 1113.234  556.8459     0.0000  556.8459 #> New_1   556.388    0.0000  -556.8459    0.0000 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit correlation base models — fit_base","title":"Fit correlation base models — fit_base","text":"Fit correlation base models","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit correlation base models — fit_base","text":"","code":"fit_base(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit correlation base models — fit_base","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit correlation base models — fit_base","text":"vector estimated parameters.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit correlation base models — fit_base","text":"Refer fit_base.mcgf() fit_base.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","title":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","text":"Parameter estimation symmetric correlation functions mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","text":"","code":"# S3 method for mcgf fit_base(   x,   lag,   horizon = 1,   model = c(\"spatial\", \"temporal\", \"sep\", \"fs\", \"none\"),   method = c(\"wls\", \"mle\"),   optim_fn = c(\"nlminb\", \"optim\", \"other\"),   par_fixed = NULL,   par_init,   lower = NULL,   upper = NULL,   other_optim_fn = NULL,   dists_base = NULL,   scale_time = 1,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","text":"x mcgf object containing attributes dists, acfs, ccfs, sds. lag Integer time lag. horizon Integer forecast horizon. model Base model, one spatial, temporal, sep, fs, none. sep fs supported method = mle. none, NULLs returned. method Parameter estimation methods, weighted least square (wls) maximum likelihood estimation (mle). optim_fn Optimization functions, one nlminb, optim, . optim_fn = , supply other_optim_fn. par_fixed Fixed parameters. par_init Initial values parameters optimized. lower Optional; lower bounds parameters. upper Optional: upper bounds parameters. other_optim_fn Optional, optimization functions. first two arguments must initial values parameters function minimized respectively (optim nlminb). dists_base List distance matrices. NULL, dists(x) used. Must matrix array distance matrices. scale_time Scale time unit, default 1. lag divided scale_time parameter estimation. ... Additional arguments passed optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","text":"list containing outputs optimization functions optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","text":"function fits separable fully symmetric models using weighted least squares maximum likelihood estimation. Optimization functions nlminb optim supported. functions also supported setting optim_fn = \"\" supplying other_optim_fn. lower upper lower upper bounds parameters par_init default bounds used specified. Note wls mle heuristic approaches x contains observations subset discrete spatial domain, though estimation results close using full spatial domain large sample sizes.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter estimation for symmetric correlation functions for an mcgf object. — fit_base.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a pure spatial model fit_spatial <- fit_base(     sim1_mcgf,     model = \"spatial\",     lag = 5,     par_init = c(c = 0.001, gamma = 0.5),     par_fixed = c(nugget = 0) ) fit_spatial$fit #> $par #>           c       gamma  #> 0.001145201 0.500000000  #>  #> $objective #> [1] 1.385845 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 7 #>  #> $evaluations #> function gradient  #>       18       17  #>  #> $message #> [1] \"both X-convergence and relative convergence (5)\" #>   # Fit a pure temporal model fit_temporal <- fit_base(     sim1_mcgf,     model = \"temporal\",     lag = 5,     par_init = c(a = 0.3, alpha = 0.5) ) fit_temporal$fit #> $par #>         a     alpha  #> 0.6534102 0.7572530  #>  #> $objective #> [1] 0.004445817 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 16 #>  #> $evaluations #> function gradient  #>       18       38  #>  #> $message #> [1] \"relative convergence (4)\" #>   # Fit a separable model fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) fit_sep$fit #> $par #>           c       gamma           a       alpha  #> 0.001139264 0.500000000 0.627518829 0.734384140  #>  #> $objective #> [1] 3.196846 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 25 #>  #> $evaluations #> function gradient  #>       46      113  #>  #> $message #> [1] \"relative convergence (4)\" #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","title":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","text":"Parameter estimation symmetric correlation functions mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","text":"","code":"# S3 method for mcgf_rs fit_base(   x,   lag_ls,   horizon = 1,   model_ls,   method_ls = \"wls\",   optim_fn_ls = \"nlminb\",   par_fixed_ls = list(NULL),   par_init_ls,   lower_ls = list(NULL),   upper_ls = list(NULL),   other_optim_fn_ls = list(NULL),   dists_base_ls = list(NULL),   scale_time = 1,   rs = TRUE,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","text":"x mcgf_rs object containing attributes dists, acfs, ccfs, sds. lag_ls List integer time lags. horizon Integer forecast horizon. model_ls List base models, element must one spatial, temporal, sep, fs. sep fs supported mle used model_ls. method_ls List parameter estimation methods, weighted least square (wls) maximum likelihood estimation (mle). optim_fn_ls List optimization functions, element must one nlminb, optim, . use , supply other_optim_fn_ls. par_fixed_ls List fixed parameters. par_init_ls List initial values parameters optimized. lower_ls Optional; list lower bounds parameters. upper_ls Optional: list upper bounds parameters. other_optim_fn_ls Optional, list optimization functions. first two arguments must initial values parameters function minimized respectively (optim nlminb). dists_base_ls List lists distance matrices. NULL, dists(x) used. element must matrix array distance matrices. scale_time Scale time unit, default 1. lag divided scale_time parameter estimation. rs Logical; TRUE x treated regime-switching, FALSE parameters need estimated non-regime-switching setting. ... Additional arguments passed optim_fn_ls.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","text":"list containing outputs optimization functions optim_fn regime.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","text":"functions regime-switching variant fit_base.mcgf(). Arguments lists. length arguments end _ls must 1 number regimes x. length argument 1, set regimes. Refer fit_base.mcgf() details arguments. Note wls mle heuristic approaches x contains observations subset discrete spatial domain, though estimation results close using full spatial domain large sample sizes.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_base.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter estimation for symmetric correlation functions for an mcgf_rs object. — fit_base.mcgf_rs","text":"","code":"data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_mcgf <- add_acfs(sim2_mcgf, lag_max = 5) sim2_mcgf <- add_ccfs(sim2_mcgf, lag_max = 5)  # Fit a regime-switching pure spatial model fit_spatial <-     fit_base(         sim2_mcgf,         lag_ls = 5,         model_ls = \"spatial\",         par_init_ls = list(c(c = 0.00005, gamma = 0.5)),         par_fixed_ls = list(c(nugget = 0))     ) lapply(fit_spatial[1:2], function(x) x$fit) #> $`Regime 1` #> $`Regime 1`$par #>           c       gamma  #> 0.001496696 0.500000000  #>  #> $`Regime 1`$objective #> [1] 3.325991 #>  #> $`Regime 1`$convergence #> [1] 0 #>  #> $`Regime 1`$iterations #> [1] 60 #>  #> $`Regime 1`$evaluations #> function gradient  #>       81      144  #>  #> $`Regime 1`$message #> [1] \"both X-convergence and relative convergence (5)\" #>  #>  #> $`Regime 2` #> $`Regime 2`$par #>           c       gamma  #> 0.004074408 0.500000000  #>  #> $`Regime 2`$objective #> [1] 1.106692 #>  #> $`Regime 2`$convergence #> [1] 0 #>  #> $`Regime 2`$iterations #> [1] 49 #>  #> $`Regime 2`$evaluations #> function gradient  #>       64      121  #>  #> $`Regime 2`$message #> [1] \"both X-convergence and relative convergence (5)\" #>  #>   # Fit a regime-switching pure temporal model fit_temporal <-     fit_base(         sim2_mcgf,         lag_ls = 5,         model_ls = \"temporal\",         par_init_ls = list(             list(a = 0.8, alpha = 0.8),             list(a = 0.1, alpha = 0.1)         )     ) lapply(fit_temporal[1:2], function(x) x$fit) #> $`Regime 1` #> $`Regime 1`$par #>         a     alpha  #> 0.4375028 0.3020300  #>  #> $`Regime 1`$objective #> [1] 0.007620233 #>  #> $`Regime 1`$convergence #> [1] 0 #>  #> $`Regime 1`$iterations #> [1] 14 #>  #> $`Regime 1`$evaluations #> function gradient  #>       20       35  #>  #> $`Regime 1`$message #> [1] \"relative convergence (4)\" #>  #>  #> $`Regime 2` #> $`Regime 2`$par #>         a     alpha  #> 0.3309062 0.8745089  #>  #> $`Regime 2`$objective #> [1] 0.005785562 #>  #> $`Regime 2`$convergence #> [1] 0 #>  #> $`Regime 2`$iterations #> [1] 22 #>  #> $`Regime 2`$evaluations #> function gradient  #>       27       52  #>  #> $`Regime 2`$message #> [1] \"both X-convergence and relative convergence (5)\" #>  #>   # Fit a regime-switching separable model fit_sep <- fit_base(     sim2_mcgf,     lag_ls = 5,     model_ls = \"sep\",     par_init_ls = list(list(         c = 0.00005,         gamma = 0.5,         a = 0.5,         alpha = 0.5     )),     par_fixed_ls = list(c(nugget = 0)) ) lapply(fit_sep[1:2], function(x) x$fit) #> $`Regime 1` #> $`Regime 1`$par #>           c       gamma           a       alpha  #> 0.001539941 0.500000000 0.452841528 0.345950120  #>  #> $`Regime 1`$objective #> [1] 7.62732 #>  #> $`Regime 1`$convergence #> [1] 0 #>  #> $`Regime 1`$iterations #> [1] 62 #>  #> $`Regime 1`$evaluations #> function gradient  #>       90      290  #>  #> $`Regime 1`$message #> [1] \"relative convergence (4)\" #>  #>  #> $`Regime 2` #> $`Regime 2`$par #>           c       gamma           a       alpha  #> 0.004107168 0.500000000 0.328388489 0.853896077  #>  #> $`Regime 2`$objective #> [1] 3.302677 #>  #> $`Regime 2`$convergence #> [1] 0 #>  #> $`Regime 2`$iterations #> [1] 60 #>  #> $`Regime 2`$evaluations #> function gradient  #>       81      281  #>  #> $`Regime 2`$message #> [1] \"relative convergence (4)\" #>  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit correlation Lagrangian models — fit_lagr","title":"Fit correlation Lagrangian models — fit_lagr","text":"Fit correlation Lagrangian models","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit correlation Lagrangian models — fit_lagr","text":"","code":"fit_lagr(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit correlation Lagrangian models — fit_lagr","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit correlation Lagrangian models — fit_lagr","text":"vector estimated parameters.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit correlation Lagrangian models — fit_lagr","text":"Refer fit_lagr.mcgf() fit_lagr.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","title":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","text":"Parameter estimation Lagrangian correlation functions mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","text":"","code":"# S3 method for mcgf fit_lagr(   x,   model = c(\"lagr_tri\", \"lagr_askey\", \"lagr_exp\", \"none\"),   method = c(\"wls\", \"mle\"),   optim_fn = c(\"nlminb\", \"optim\", \"other\"),   par_fixed = NULL,   par_init,   lower = NULL,   upper = NULL,   other_optim_fn = NULL,   dists_base = FALSE,   dists_lagr = NULL,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","text":"x mcgf object containing attributes dists, acfs, ccfs, sds. x must passed add_base() base<- model Base model, one lagr_tri, lagr_askey, lagr_exp, none. none, NULLs returned. method Parameter estimation methods, weighted least square (wls) maximum likelihood estimation (mle). optim_fn Optimization functions, one nlminb, optim, . optim_fn = , supply other_optim_fn. par_fixed Fixed parameters. par_init Initial values parameters optimized. lower Optional; lower bounds parameters lambda, v1, v2, k. upper Optional: upper bounds parameters lambda, v1, v2, k. other_optim_fn Optional, optimization functions. first two arguments must initial values parameters function minimized respectively (optim nlminb). dists_base Logical; TRUE dists_base base model used distance. dists_lagr List distance matrices/arrays. Used dists_base FALSE. NULL, dists(x) used. ... Additional arguments passed optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","text":"list containing outputs optimization functions optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","text":"function fits Lagrangian models using weighted least squares maximum likelihood estimation. base model must fitted first using add_base() base<-. Optimization functions nlminb optim supported. functions also supported setting optim_fn = \"\" supplying other_optim_fn. lower upper lower upper bounds parameters par_init default bounds used specified. Note wls mle heuristic approaches x contains observations subset discrete spatial domain, though estimation results close using full spatial domain large sample sizes. Since parameters base model Lagrangian model estimated sequentially, accurate estimation may obtained full model fitted .","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter estimation for Lagrangian correlation functions for an mcgf object. — fit_lagr.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a separable model and store it to 'sim1_mcgf' fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep)  # Fit a Lagrangian model fit_lagr <- fit_lagr(     sim1_mcgf,     model = \"lagr_tri\",     par_init = c(v1 = 300, v2 = 300, lambda = 0.15),     par_fixed = c(k = 2) ) fit_lagr$fit #> $par #>      lambda          v1          v2  #>   0.1625903 224.5776224 188.5158088  #>  #> $objective #> [1] 1.533448 #>  #> $convergence #> [1] 0 #>  #> $iterations #> [1] 34 #>  #> $evaluations #> function gradient  #>       37      118  #>  #> $message #> [1] \"relative convergence (4)\" #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","title":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","text":"Parameter estimation Lagrangian correlation functions mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","text":"","code":"# S3 method for mcgf_rs fit_lagr(   x,   model_ls,   method_ls = \"wls\",   optim_fn_ls = \"nlminb\",   par_fixed_ls = list(NULL),   par_init_ls,   lower_ls = list(NULL),   upper_ls = list(NULL),   other_optim_fn_ls = list(NULL),   dists_base_ls,   dists_lagr_ls = list(NULL),   rs = TRUE,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","text":"x mcgf_rs object containing attributes dists, acfs, ccfs, sds. x must passed add_base() base<- model_ls List base models, element must one lagr_tri, lagr_askey, lagr_exp, none. none, NULLs returned. method_ls List parameter estimation methods, weighted least square (wls) maximum likelihood estimation (mle). optim_fn_ls List optimization functions, element must one nlminb, optim, . use , supply other_optim_fn_ls par_fixed_ls List fixed parameters. par_init_ls List initial values parameters optimized. lower_ls Optional; list lower bounds parameters. upper_ls Optional: list upper bounds parameters. other_optim_fn_ls Optional, list optimization functions. first two arguments must initial values parameters function minimized respectively (optim nlminb). dists_base_ls List lists distance matrices. NULL, dists(x) used. element must matrix array distance matrices. dists_lagr_ls List distance matrices/arrays. Used dists_base FALSE. NULL, dists(x) used. rs Logical; TRUE x treated regime-switching, FALSE parameters need estimated non-regime-switching setting. ... Additional arguments passed optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","text":"list containing outputs optimization functions optim_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","text":"functions regime-switching variant fit_lagr.mcgf(). Arguments lists. length arguments end _ls must 1 number regimes x. length argument 1, set regimes. Refer fit_lagr.mcgf() details arguments. Note wls mle heuristic approaches x contains observations subset discrete spatial domain, though estimation results close using full spatial domain large sample sizes. Since parameters base model Lagrangian model estimated sequentially, accurate estimation may obtained full model fitted .","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/fit_lagr.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter estimation for Lagrangian correlation functions for an mcgf_rs object. — fit_lagr.mcgf_rs","text":"","code":"data(sim3) sim3_mcgf <- mcgf_rs(sim3$data, dists = sim3$dists, label = sim3$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim3_mcgf <- add_acfs(sim3_mcgf, lag_max = 5) sim3_mcgf <- add_ccfs(sim3_mcgf, lag_max = 5)  # Fit a fully symmetric model with known variables fit_fs <- fit_base(     sim3_mcgf,     lag_ls = 5,     model_ls = \"fs\",     rs = FALSE,     par_init_ls = list(list(beta = 0)),     par_fixed_ls = list(list(         nugget = 0,         c = 0.05,         gamma = 0.5,         a = 0.5,         alpha = 0.2     )) )  # Set beta to 0 to fit a separable model with known variables fit_fs[[1]]$fit$par <- 0  # Store the fitted separable model to 'sim3_mcgf' sim3_mcgf <- add_base(sim3_mcgf, fit_base_ls = fit_fs)  # Fit a regime-switching Lagrangian model. fit_lagr_rs <- fit_lagr(     sim3_mcgf,     model_ls = list(\"lagr_tri\"),     par_init_ls = list(         list(v1 = -50, v2 = 50),         list(v1 = 100, v2 = 100)     ),     par_fixed_ls = list(list(lambda = 0.2, k = 2)) ) lapply(fit_lagr_rs[1:2], function(x) x$fit) #> $`Regime 1` #> $`Regime 1`$par #>        v1        v2  #> -106.5181  119.4434  #>  #> $`Regime 1`$objective #> [1] 5.137749 #>  #> $`Regime 1`$convergence #> [1] 0 #>  #> $`Regime 1`$iterations #> [1] 26 #>  #> $`Regime 1`$evaluations #> function gradient  #>       29       61  #>  #> $`Regime 1`$message #> [1] \"relative convergence (4)\" #>  #>  #> $`Regime 2` #> $`Regime 2`$par #>       v1       v2  #> 210.1156 242.3082  #>  #> $`Regime 2`$objective #> [1] 5.902847 #>  #> $`Regime 2`$convergence #> [1] 0 #>  #> $`Regime 2`$iterations #> [1] 29 #>  #> $`Regime 2`$evaluations #> function gradient  #>       31       77  #>  #> $`Regime 2`$message #> [1] \"relative convergence (4)\" #>  #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is an mcgf object. — is.mcgf","title":"Check if an object is an mcgf object. — is.mcgf","text":"Check object mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is an mcgf object. — is.mcgf","text":"","code":"is.mcgf(x)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is an mcgf object. — is.mcgf","text":"x Object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is an mcgf object. — is.mcgf","text":"Logical; TRUE x mcgf class","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is an mcgf object. — is.mcgf","text":"","code":"data(sim1) is.mcgf(sim1) #> [1] FALSE  sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. is.mcgf(sim1_mcgf) #> [1] TRUE"},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is an mcgf_rs object.. — is.mcgf_rs","title":"Check if an object is an mcgf_rs object.. — is.mcgf_rs","text":"Check object mcgf_rs object..","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is an mcgf_rs object.. — is.mcgf_rs","text":"","code":"is.mcgf_rs(x)  as.mcgf_rs(x, label, ncores = 1)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is an mcgf_rs object.. — is.mcgf_rs","text":"x Object. label vector regime labels. length must number rows data. ncores Number cpu cores used computing [ccfs()].","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is an mcgf_rs object.. — is.mcgf_rs","text":".mcgf_rs returns logical valud; TRUE x mcgf_rs class. .mcgf_rs coerces mcgf object mcgf_rs object adding regime labels. Fitted base Lagrangian models x kept.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is an mcgf_rs object.. — is.mcgf_rs","text":"","code":"data(sim2) is.mcgf_rs(sim2) #> [1] FALSE  sim2_mcgf <- mcgf(sim2$data, dists = sim2$dists) #> `time` is not provided, assuming rows are equally spaced temporally. is.mcgf_rs(sim2_mcgf) #> [1] FALSE  sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. is.mcgf_rs(sim2_mcgf) #> [1] TRUE data(sim2) sim2_mcgf <- mcgf(sim2$data, dists = sim2$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_mcgf <- as.mcgf_rs(sim2_mcgf, label = sim2$label)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/is_numeric_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if numeric scalar — is_numeric_scalar","title":"Check if numeric scalar — is_numeric_scalar","text":"Check numeric scalar","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is_numeric_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if numeric scalar — is_numeric_scalar","text":"","code":"is_numeric_scalar(x)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/is_numeric_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if numeric scalar — is_numeric_scalar","text":"x Input","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is_numeric_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if numeric scalar — is_numeric_scalar","text":"Logical.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/is_numeric_scalar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if numeric scalar — is_numeric_scalar","text":"Check x numeric scalar.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for computing kriging forecasts — krige","title":"Generic function for computing kriging forecasts — krige","text":"Generic function computing kriging forecasts","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for computing kriging forecasts — krige","text":"","code":"krige(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for computing kriging forecasts — krige","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for computing kriging forecasts — krige","text":"Kriging results x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for computing kriging forecasts — krige","text":"Refer krige.mcgf() krige.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","title":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","text":"Obtain kriging forecasts mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","text":"","code":"# S3 method for mcgf krige(   x,   newdata = NULL,   model = c(\"all\", \"base\", \"empirical\"),   interval = FALSE,   level = 0.95,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","text":"x mcgf object. newdata data.frame column names x. newdata missing forecasts original data points returned. model model use. One , base, empirical. interval Logical; TRUE, prediction intervals computed. level numeric scalar 0 1 giving confidence level intervals () calculated. Used interval = TRUE ... Additional arguments. Give lag horizon defined x empirical model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","text":"list kriging forecasts (prediction intervals).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","text":"produces simple kriging forecasts zero-mean mcgf. supports kriging empirical model, base model, model general stationary model base Lagrangian model x. interval = TRUE, confidence interval forecasts horizon given. Note compute confidence regions.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain kriging forecasts for an mcgf object. — krige.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a separable model and store it to 'sim1_mcgf' fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep)  # Fit a Lagrangian model fit_lagr <- fit_lagr(     sim1_mcgf,     model = \"lagr_tri\",     par_init = c(v1 = 300, v2 = 300, lambda = 0.15),     par_fixed = c(k = 2) )  # Store the fitted Lagrangian model to 'sim1_mcgf' sim1_mcgf <- add_lagr(sim1_mcgf, fit_lagr = fit_lagr)  # Calculate the simple kriging predictions and intervals sim1_krige <- krige(sim1_mcgf, interval = TRUE)  # Calculate RMSE for each location rmse <- sqrt(colMeans((sim1_mcgf - sim1_krige$fit)^2, na.rm = TRUE)) rmse #>         1         2         3         4         5         6         7         8  #> 0.7303482 0.7327718 0.7356240 0.7345241 0.7334888 0.7359809 0.7336117 0.7330753  #>         9        10  #> 0.7363262 0.7446223   # Calculate MAE for each location mae <- colMeans(abs(sim1_mcgf - sim1_krige$fit), na.rm = TRUE) mae #>         1         2         3         4         5         6         7         8  #> 0.5835321 0.5836252 0.5845320 0.5853083 0.5798051 0.5922677 0.5855238 0.5824134  #>         9        10  #> 0.5843573 0.5825537   # Calculate POPI for each location popi <- colMeans(     sim1_mcgf < sim1_krige$lower | sim1_mcgf > sim1_krige$upper,     na.rm = TRUE ) popi #>          1          2          3          4          5          6          7  #> 0.04623116 0.04120603 0.05025126 0.04623116 0.05226131 0.04020101 0.04924623  #>          8          9         10  #> 0.04321608 0.04020101 0.04422111"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","title":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","text":"Obtain kriging forecasts mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","text":"","code":"# S3 method for mcgf_rs krige(   x,   newdata = NULL,   newlabel = NULL,   soft = FALSE,   prob,   model = c(\"all\", \"base\", \"empirical\"),   interval = FALSE,   level = 0.95,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","text":"x mcgf_rs object. newdata data.frame column names x. newdata missing forecasts original data points returned. newlabel vector new regime labels. soft Logical; true, soft forecasts (bounds) produced. prob Matrix simplex rows. Number columns must unique labels x. model model use. One , base, empirical. interval Logical; TRUE, prediction intervals computed. level numeric scalar 0 1 giving confidence level intervals () calculated. Used interval = TRUE ... Additional arguments. Give lag horizon defined x empirical model.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","text":"list kriging forecasts (prediction intervals).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","text":"produces simple kriging forecasts zero-mean mcgf. supports kriging empirical model, base model, model general stationary model base Lagrangian model x. soft = TRUE, prob used compute soft forecasts (weighted forecasts). number columns must match number unique levels x. column order must order regimes levels(attr(x, \"label\", exact = TRUE)). regimes seen newlabel, relevant columns prob used. interval = TRUE, confidence interval forecasts horizon given. Note compute confidence regions.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain kriging forecasts for an mcgf_rs object. — krige.mcgf_rs","text":"","code":"data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_mcgf <- add_acfs(sim2_mcgf, lag_max = 5) sim2_mcgf <- add_ccfs(sim2_mcgf, lag_max = 5)  # Fit a regime-switching separable model fit_sep <- fit_base(     sim2_mcgf,     lag_ls = 5,     model_ls = \"sep\",     par_init_ls = list(list(         c = 0.00005,         gamma = 0.5,         a = 0.5,         alpha = 0.5     )),     par_fixed_ls = list(c(nugget = 0)) )  # Store the fitted separable models to 'sim2_mcgf' sim2_mcgf <- add_base(sim2_mcgf, fit_base_ls = fit_sep)  # Calculate the simple kriging predictions and intervals sim2_krige <- krige(sim2_mcgf, model = \"base\", interval = TRUE)  # Calculate RMSE for each location rmse <- sqrt(colMeans((sim2_mcgf - sim2_krige$fit)^2, na.rm = TRUE)) rmse #>         1         2         3         4         5         6         7         8  #> 0.6200119 0.6352447 0.6427659 0.6505784 0.6567752 0.6380914 0.6288325 0.6552253  #>         9        10  #> 0.6387179 0.6415569   # Calculate MAE for each location mae <- colMeans(abs(sim2_mcgf - sim2_krige$fit), na.rm = TRUE) mae #>         1         2         3         4         5         6         7         8  #> 0.4849978 0.4971572 0.5105414 0.5119415 0.5208628 0.5077890 0.4947488 0.5237569  #>         9        10  #> 0.4990462 0.5048435   # Calculate POPI for each location popi <- colMeans(     sim2_mcgf < sim2_krige$lower | sim2_mcgf > sim2_krige$upper,     na.rm = TRUE ) popi #>          1          2          3          4          5          6          7  #> 0.05427136 0.05025126 0.04824121 0.04422111 0.04824121 0.05527638 0.03819095  #>          8          9         10  #> 0.04221106 0.06231156 0.05829146"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for computing kriging forecasts for new locations — krige_new","title":"Generic function for computing kriging forecasts for new locations — krige_new","text":"Generic function computing kriging forecasts new locations","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for computing kriging forecasts for new locations — krige_new","text":"","code":"krige_new(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for computing kriging forecasts for new locations — krige_new","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for computing kriging forecasts for new locations — krige_new","text":"Kriging results x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for computing kriging forecasts for new locations — krige_new","text":"Refer krige_new.mcgf() krige_new.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","title":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","text":"Obtain kriging forecasts new locations mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","text":"","code":"# S3 method for mcgf krige_new(   x,   newdata = NULL,   locations_new = NULL,   dists_new = NULL,   newdata_new = NULL,   sds_new = 1,   model = c(\"all\", \"base\"),   interval = FALSE,   level = 0.95,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","text":"x mcgf object. newdata data.frame column names x. newdata missing forecasts original data points returned. locations_new matrix data.frame 2D points new locations, first column longitude, second column latitude, decimal degrees. Supply x contains locations. Required dists_new supplied. dists_new List signed distance matrices (vectors) names h, h1, 'h2' locations, new locations end. matrix must number columns. Required locations_new supplied. newdata_new Optional; data.frame number rows newdata. contains data new locations. sds_new standard deviations new locations. Default 1. model model use. One base. interval Logical; TRUE, prediction intervals computed. level numeric scalar 0 1 giving confidence level intervals () calculated. Used interval = TRUE ... Additional arguments. use.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","text":"list kriging forecasts (prediction intervals) locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","text":"produces simple kriging forecasts zero-mean mcgf new locations given coordinates relative distances. supports kriging base model model general stationary model base Lagrangian model x. Users can either supply coordinates via locations_new, list distance locations via dists_new, new locations end. dists_new used calculate new covariance matrices. locations_new used, make sure x contains attribute locations coordinates old locations. dists_new used, list signed distance matrices dimension, row corresponds relative distances new location old locations order appear x. data new locations available, use newdata_new include used calculate kriging forecasts new locations; otherwise data old locations used via newdata. interval = TRUE, confidence interval forecasts horizon given. Note compute confidence regions.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain kriging forecasts for new locations for an mcgf object. — krige_new.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, locations = sim1$locations) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_mcgf <- add_acfs(sim1_mcgf, lag_max = 5) sim1_mcgf <- add_ccfs(sim1_mcgf, lag_max = 5)  # Fit a separable model and store it to 'sim1_mcgf' fit_sep <- fit_base(     sim1_mcgf,     model = \"sep\",     lag = 5,     par_init = c(         c = 0.001,         gamma = 0.5,         a = 0.3,         alpha = 0.5     ),     par_fixed = c(nugget = 0) ) sim1_mcgf <- add_base(sim1_mcgf, fit_base = fit_sep)  # Fit a Lagrangian model fit_lagr <- fit_lagr(     sim1_mcgf,     model = \"lagr_tri\",     par_init = c(v1 = 300, v2 = 300, lambda = 0.15),     par_fixed = c(k = 2) )  # Store the fitted Lagrangian model to 'sim1_mcgf' sim1_mcgf <- add_lagr(sim1_mcgf, fit_lagr = fit_lagr)  # Calculate the simple kriging predictions and intervals for all locations locations_new <- rbind(c(-110, 55), c(-109, 54)) sim1_krige <- krige_new(sim1_mcgf,     locations_new = locations_new,     interval = TRUE ) #> Latitude for new locations is outside of the grid."},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","title":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","text":"Obtain kriging forecasts new locations mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","text":"","code":"# S3 method for mcgf_rs krige_new(   x,   newdata = NULL,   locations_new = NULL,   dists_new_ls = NULL,   newdata_new = NULL,   sds_new_ls = 1,   newlabel,   soft = FALSE,   prob,   dists_new_base,   model = c(\"all\", \"base\"),   interval = FALSE,   level = 0.95,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","text":"x mcgf_rs object. newdata data.frame column names x. newdata missing forecasts original data points returned. locations_new matrix data.frame 2D points new locations, first column longitude, second column latitude, decimal degrees. Supply x contains locations. Required dists_new_ls supplied. dists_new_ls List signed distance matrices (vectors) names h, h1, 'h2' locations(regime), new locations end. matrix must number columns. Required locations_new supplied. newdata_new Optional; data.frame number rows newdata. contains data new locations. sds_new_ls List standard deviations new locations regime. Format must output sds.mcgf_rs(). Default 1 regimes. newlabel vector new regime labels. soft Logical; true, soft forecasts (bounds) produced. prob Matrix simplex rows. Number columns must unique labels x. dists_new_base Optional, list distance matrices base model. Used base model non-regime switching. Default h first list dists_new_ls. model model use. One , base, empirical. interval Logical; TRUE, prediction intervals computed. level numeric scalar 0 1 giving confidence level intervals () calculated. Used interval = TRUE ... Additional arguments.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","text":"list kriging forecasts (prediction intervals) locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","text":"produces simple kriging forecasts zero-mean mcgf new locations given theri coordinates relative distances. supports kriging base model model general stationary model base Lagrangian model x. Users can either supply coordinates via locations_new, list distance locations via dists_new_ls, new locations end. dists_new_ls used calculate new covariance matrices. locations_new used, make sure x contains attribute locations coordinates old locations. dists_new_ls used, list list signed distance matrices dimension, row corresponds relative distances new location old locations order appear x. one list provided, used regimes. soft = TRUE, prob used compute soft forecasts (weighted forecasts). number columns must match number unique levels x. column order must order regimes levels(attr(x, \"label\", exact = TRUE)). regimes seen newlabel, relevant columns prob used. interval = TRUE, confidence interval forecasts horizon given. Note compute confidence regions.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/krige_new.mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain kriging forecasts for new locations for an mcgf_rs object. — krige_new.mcgf_rs","text":"","code":"data(sim2) sim2_mcgf <- mcgf_rs(sim2$data,     locations = sim2$locations,     label = sim2$label ) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_mcgf <- add_acfs(sim2_mcgf, lag_max = 5) sim2_mcgf <- add_ccfs(sim2_mcgf, lag_max = 5)  # Fit a regime-switching separable model fit_sep <- fit_base(     sim2_mcgf,     lag_ls = 5,     model_ls = \"sep\",     par_init_ls = list(list(         c = 0.00005,         gamma = 0.5,         a = 0.5,         alpha = 0.5     )),     par_fixed_ls = list(c(nugget = 0)) )  # Store the fitted separable models to 'sim2_mcgf' sim2_mcgf <- add_base(sim2_mcgf, fit_base_ls = fit_sep)  # Calculate the simple kriging predictions and intervals for all locations locations_new <- rbind(c(-110, 55), c(-109, 54)) sim2_krige <- krige_new(sim2_mcgf,     locations_new = locations_new,     model = \"base\", interval = TRUE ) #> Latitude for new locations is outside of the grid."},{"path":"https://tianxia-jia.github.io/mcgf/reference/mat_inv.html","id":null,"dir":"Reference","previous_headings":"","what":"Find inverse of a symmetric positive definite matrix — mat_inv","title":"Find inverse of a symmetric positive definite matrix — mat_inv","text":"Find inverse symmetric positive definite matrix","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mat_inv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find inverse of a symmetric positive definite matrix — mat_inv","text":"","code":"mat_inv(x)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mat_inv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find inverse of a symmetric positive definite matrix — mat_inv","text":"x symmetric positive definite matrix.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mat_inv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find inverse of a symmetric positive definite matrix — mat_inv","text":"Inverse x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mcgf object — mcgf","title":"Create mcgf object — mcgf","text":"Create mcgf object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mcgf object — mcgf","text":"","code":"mcgf(data, locations, dists, time, longlat = TRUE, origin = 1L)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mcgf object — mcgf","text":"data Time series data set space-wide format. locations matrix data.frame 2D points, first column x/longitude, second column y/latitude. Required dists supplied. longitudes latitudes provided, mapped 2D Euclidean. See find_dists() details. dists List signed distance matrices 2D Euclidean Plane. Required locations supplied. time Optional, vector equally spaced time stamps. longlat Logical, TURE locations contains longitudes latitudes. origin Optional; used longlat TRUE. integer index indicating reference location well used origin.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mcgf object — mcgf","text":"S3 object class mcgf. inherits extends data.frame class, methods remain valid data part object. Additional attributes may assigned extracted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create mcgf object — mcgf","text":"mcgf object extends S3 class data.frame. inputs, data must space-wide format rows correspond different time stamps columns refer spatial locations. Supply either locations dists. locations matrix data.frame 2D points first column x/longitude second column y/latitude. default treated matrix Earth's coordinates decimal degrees. Number rows locations must number columns data. dists must list signed distance matrices names h1, h2, h. h given, calculated Euclidean distance h1 h2. time vector equally spaced time stamps. supplied data assumed temporally equally spaced. mcgf object extends S3 class data.frame, methods remain valid data part object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mcgf object — mcgf","text":"","code":"data <- cbind(S1 = 1:5, S2 = 4:8, S3 = 5:9) lon <- c(110, 120, 130) lat <- c(50, 55, 60) locations <- cbind(lon, lat) obj <- mcgf(data, locations = locations) #> `time` is not provided, assuming rows are equally spaced temporally. print(obj, \"locations\") #>      lon lat #> [1,] 110  50 #> [2,] 120  55 #> [3,] 130  60"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mcgf_rs object — mcgf_rs","title":"Create mcgf_rs object — mcgf_rs","text":"Create mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mcgf_rs object — mcgf_rs","text":"","code":"mcgf_rs(data, locations, dists, label, time, longlat = TRUE, origin = 1L)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mcgf_rs object — mcgf_rs","text":"data Time series data set space-wide format. locations matrix data.frame 2D points, first column longitude, second column latitude, decimal degrees. Required dists supplied. dists List signed distance matrices. Required locations supplied. label vector regime labels. length must number rows data. time Optional, vector equally spaced time stamps. longlat Logical, TURE locations contains longitudes latitudes. origin Optional; used longlat TRUE. integer index indicating reference location well used origin.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mcgf_rs object — mcgf_rs","text":"S3 object class mcgf_rs. inherits extends mcgf thedata.frame class, methods remain valid data part object. Additional attributes may assigned extracted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create mcgf_rs object — mcgf_rs","text":"mcgf_rs object extends S3 classes mcgf data.frame. inputs, data must space-wide format rows correspond different time stamps columns refer spatial locations. Supply either locations dists. locations matrix data.frame 2D points first column x/longitude second column y/latitude. default treated matrix Earth's coordinates decimal degrees. Number rows locations must number columns data. dists must list signed distance matrices names h1, h2, h. h given, calculated Euclidean distance h1 h2. time vector equally spaced time stamps. supplied data assumed temporally equally spaced. label must vector containing regime labels, length must number rows x. mcgf_rs object extends S3 classes mcgf data.frame, methods remain valid data part object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mcgf_rs object — mcgf_rs","text":"","code":"data <- cbind(S1 = 1:5, S2 = 4:8, S3 = 5:9) lon <- c(110, 120, 130) lat <- c(50, 55, 60) locations <- cbind(lon, lat) label <- c(1, 1, 2, 2, 2) obj <- mcgf_rs(data, locations = locations, label = label) #> `time` is not provided, assuming rows are equally spaced temporally. print(obj, \"locations\") #>      lon lat #> [1,] 110  50 #> [2,] 120  55 #> [3,] 130  60 print(obj, \"label\") #> [1] 1 1 2 2 2 #> Levels: 1 2"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate regime-switching Markov chain Gaussian field — mcgf_rs_sim","title":"Simulate regime-switching Markov chain Gaussian field — mcgf_rs_sim","text":"Simulate regime-switching Markov chain Gaussian field","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate regime-switching Markov chain Gaussian field — mcgf_rs_sim","text":"","code":"mcgf_rs_sim(   N,   label,   base_ls,   lagrangian_ls,   par_base_ls,   par_lagr_ls,   lambda_ls,   dists_ls,   sd_ls,   lag_ls,   scale_time = 1,   init = 0,   mu_c_ls = list(0),   mu_p_ls = list(0),   return_all = FALSE )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate regime-switching Markov chain Gaussian field — mcgf_rs_sim","text":"N Sample size. label Vector regime labels length N. base_ls List base model, sep fs now. lagrangian_ls List Lagrangian model, \"none\" lagr_tri now. par_base_ls List parameters base model. par_lagr_ls List parameters Lagrangian model. lambda_ls List weight Lagrangian term, \\(\\lambda\\[0, 1]\\). dists_ls List distance matrices arrays. sd_ls List standard deviation location. lag_ls List time lags. scale_time Scale time unit, default 1. Elements lag_ls divided scale_time. init Initial samples, default 0. mu_c_ls, mu_p_ls List means current past. return_all Logical; TRUE joint covariance matrix, arrays distances time lag returned.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate regime-switching Markov chain Gaussian field — mcgf_rs_sim","text":"Simulated regime-switching Markov chain Gaussian field user-specified covariance structures. simulation done kriging. output data space-wide format. element dists_ls must contain h symmetric models, h1 h2 general stationary models. init can scalar vector appropriate size. List elements sd_ls, mu_c_ls, mu_p_ls must vectors appropriate sizes.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_rs_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate regime-switching Markov chain Gaussian field — mcgf_rs_sim","text":"","code":"par_s <- list(nugget = 0.5, c = 0.01, gamma = 0.5) par_t <- list(a = 1, alpha = 0.5) par_base <- list(par_s = par_s, par_t = par_t) par_lagr <- list(v1 = 5, v2 = 10) h1 <- matrix(c(0, 5, -5, 0), nrow = 2) h2 <- matrix(c(0, 8, -8, 0), nrow = 2) h <- sqrt(h1^2 + h2^2) dists <- list(h = h, h1 = h1, h2 = h2)  set.seed(123) label <- sample(1:2, 1000, replace = TRUE) X <- mcgf_rs_sim(     N = 1000,     label = label,     base_ls = list(\"sep\"),     lagrangian_ls = list(\"none\", \"lagr_tri\"),     lambda_ls = list(0, 0.5),     par_base_ls = list(par_base),     par_lagr_ls = list(NULL, par_lagr),     dists_ls = list(dists, dists) ) # plot.ts(X[, -1])"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Markov chain Gaussian field — mcgf_sim","title":"Simulate Markov chain Gaussian field — mcgf_sim","text":"Simulate Markov chain Gaussian field","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Markov chain Gaussian field — mcgf_sim","text":"","code":"mcgf_sim(   N,   base = c(\"sep\", \"fs\"),   lagrangian = c(\"none\", \"lagr_tri\", \"lagr_askey\"),   par_base,   par_lagr,   lambda,   dists,   sd = 1,   lag = 1,   scale_time = 1,   horizon = 1,   init = 0,   mu_c = 0,   mu_p = 0,   return_all = FALSE )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Markov chain Gaussian field — mcgf_sim","text":"N Sample size. base Base model, sep fs now. lagrangian Lagrangian model, \"none\" lagr_tri now. par_base Parameters base model (symmetric). par_lagr Parameters Lagrangian model. lambda Weight Lagrangian term, \\(\\lambda\\[0, 1]\\). dists Distance matrices arrays. sd Standard deviation location. lag Time lag. scale_time Scale time unit, default 1. lag divided scale_time. horizon Forecast horizon, default 1. init Initial samples, default 0. mu_c, mu_p Means current past. return_all Logical; TRUE joint covariance matrix, arrays distances time lag returned.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Markov chain Gaussian field — mcgf_sim","text":"Simulated Markov chain Gaussian field user-specified covariance structure. simulation done kriging. output data space-wide format. dists must contain h symmetric models, h1 h2 general stationary models. horizon controls forecasting horizon. sd, mu_c, mu_p, init must vectors appropriate sizes.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/mcgf_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Markov chain Gaussian field — mcgf_sim","text":"","code":"par_s <- list(nugget = 0.5, c = 0.01, gamma = 0.5) par_t <- list(a = 1, alpha = 0.5) par_base <- list(par_s = par_s, par_t = par_t) par_lagr <- list(v1 = 5, v2 = 10) h1 <- matrix(c(0, 5, -5, 0), nrow = 2) h2 <- matrix(c(0, 8, -8, 0), nrow = 2) h <- sqrt(h1^2 + h2^2) dists <- list(h = h, h1 = h1, h2 = h2)  set.seed(123) X <- mcgf_sim(     N = 1000, base = \"sep\", lagrangian = \"lagr_tri\", lambda = 0.5,     par_base = par_base, par_lagr = par_lagr, dists = dists ) plot.ts(X)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for displaying fitted models for mcgf objects — model","title":"Generic function for displaying fitted models for mcgf objects — model","text":"Generic function displaying fitted models mcgf objects","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for displaying fitted models for mcgf objects — model","text":"","code":"model(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for displaying fitted models for mcgf objects — model","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for displaying fitted models for mcgf objects — model","text":"Details fitted models.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for displaying fitted models for mcgf objects — model","text":"Refer model.mcgf() model.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Display fitted models for an mcgf or mcgf_rs object — model.mcgf","title":"Display fitted models for an mcgf or mcgf_rs object — model.mcgf","text":"Display fitted models mcgf mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display fitted models for an mcgf or mcgf_rs object — model.mcgf","text":"","code":"# S3 method for mcgf model(   x,   model = c(\"all\", \"base\", \"lagrangian\"),   old = FALSE,   print_model = TRUE,   ... )  # S3 method for mcgf_rs model(   x,   model = c(\"all\", \"base\", \"lagrangian\"),   old = FALSE,   print_model = TRUE,   ... )"},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display fitted models for an mcgf or mcgf_rs object — model.mcgf","text":"x mcgf object. model model display. old Logical; TRUE old model needs printed. print_model Logical; TRUE time lag forecast horizon need printed. ... Additional arguments. use.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display fitted models for an mcgf or mcgf_rs object — model.mcgf","text":"None (invisible NULL).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/model.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display fitted models for an mcgf or mcgf_rs object — model.mcgf","text":"mcgf mcgf_rs objects, model() displays fitted models parameters. old = TRUE, old model printed well. Note old model used parameter estimation kriging.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an mcgf object — new_mcgf","title":"Create an mcgf object — new_mcgf","text":"Create mcgf object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an mcgf object — new_mcgf","text":"","code":"new_mcgf(data, locations, dists, time, longlat = TRUE, origin = 1L)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an mcgf object — new_mcgf","text":"data Time series data set space-wide format. locations matrix data.frame 2D points, first column x/longitude, second column y/latitude. Required dists supplied. longitudes latitudes provided, mapped 2D Euclidean. See find_dists() details. dists List signed distance matrices 2D Euclidean Plane. Required locations supplied. time Optional, vector equally spaced time stamps. longlat Logical, TURE locations contains longitudes latitudes. origin Optional; used longlat TRUE. integer index indicating reference location well used origin.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an mcgf object — new_mcgf","text":"S3 object class mcgf. inherits extends data.frame class, methods remain valid data part object. Additional attributes may assigned extracted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an mcgf_rs object — new_mcgf_rs","title":"Create an mcgf_rs object — new_mcgf_rs","text":"Create mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an mcgf_rs object — new_mcgf_rs","text":"","code":"new_mcgf_rs(x, label)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an mcgf_rs object — new_mcgf_rs","text":"x mcgf object. label vector regime labels. length must number rows data.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/new_mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an mcgf_rs object — new_mcgf_rs","text":"S3 object class mcgf_rs. inherits extends mcgf thedata.frame class, methods remain valid data part object. Additional attributes may assigned extracted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — obj_mle","title":"Title — obj_mle","text":"Title","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — obj_mle","text":"","code":"obj_mle(par, cor_fn, x, lag, par_fixed)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — obj_mle","text":"par Parameters cor_fn. cor_fn Correlation function x mcgf mcgf_rs object lag Time lag. par_fixed Fixed parameters cor_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — obj_mle","text":"objective maximum likelihood: additive inverse log-likelihood.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_wls.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the objective for wls method — obj_wls","title":"Compute the objective for wls method — obj_wls","text":"Compute objective wls method","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_wls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the objective for wls method — obj_wls","text":"","code":"obj_wls(par, cor_fn, cor_emp, par_fixed)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_wls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the objective for wls method — obj_wls","text":"par Parameters cor_fn. cor_fn Correlation function. cor_emp Empirical correlations. par_fixed Fixed parameters cor_fn.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/obj_wls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the objective for wls method — obj_wls","text":"objective weighted least squares.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/print.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an mcgf object. — print.mcgf","title":"Print an mcgf object. — print.mcgf","text":"Print mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/print.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an mcgf object. — print.mcgf","text":"","code":"# S3 method for mcgf print(x, attr = \".Data\", ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/print.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an mcgf object. — print.mcgf","text":"x mcgf object. attr Attribute printed. ... Optional arguments print methods.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/print.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an mcgf object. — print.mcgf","text":"return value, called side effects.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/print.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an mcgf object. — print.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. print(sim1_mcgf, \"dists\") #> $h #>            1         2        3         4         5        6         7        8 #> 1    0.00000  98.99464 176.8391 131.79368 204.02308 174.0853 108.82652 358.4253 #> 2   98.99464   0.00000 127.7755  35.05241 105.02946 210.9198  51.66746 269.0730 #> 3  176.83906 127.77551   0.0000 111.02266 147.41939 154.6130  79.10180 331.5889 #> 4  131.79368  35.05241 111.0227   0.00000  74.25330 220.3507  51.29749 249.9205 #> 5  204.02308 105.02946 147.4194  74.25330   0.00000 284.1334 119.56849 185.7971 #> 6  174.08527 210.91976 154.6130 220.35068 284.13338   0.0000 169.05841 468.5712 #> 7  108.82652  51.66746  79.1018  51.29749 119.56849 169.0584   0.00000 300.5069 #> 8  358.42528 269.07297 331.5889 249.92050 185.79708 468.5712 300.50692   0.0000 #> 9   58.84811  50.06221 163.7443  85.08873 151.49063 209.7202  85.00274 299.5832 #> 10 188.93344  93.87864 172.9512  74.62843  42.06907 294.9215 125.87486 176.1201 #>            9        10 #> 1   58.84811 188.93344 #> 2   50.06221  93.87864 #> 3  163.74430 172.95118 #> 4   85.08873  74.62843 #> 5  151.49063  42.06907 #> 6  209.72017 294.92151 #> 7   85.00274 125.87486 #> 8  299.58323 176.12008 #> 9    0.00000 131.73308 #> 10 131.73308   0.00000 #>  #> $h1 #>             1         2          3          4          5          6          7 #> 1    0.000000 -23.57826 -151.27253 -45.042563 -49.238476 -162.43281  -72.91133 #> 2   23.578263   0.00000 -127.69426 -21.464300 -25.660213 -138.85455  -49.33306 #> 3  151.272525 127.69426    0.00000 106.229962 102.034049  -11.16028   78.36120 #> 4   45.042563  21.46430 -106.22996   0.000000  -4.195913 -117.39025  -27.86877 #> 5   49.238476  25.66021 -102.03405   4.195913   0.000000 -113.19433  -23.67285 #> 6  162.432810 138.85455   11.16028 117.390247 113.194334    0.00000   89.52148 #> 7   72.911328  49.33306  -78.36120  27.868765  23.672852  -89.52148    0.00000 #> 8  -50.296545 -73.87481 -201.56907 -95.339108 -99.535021 -212.72935 -123.20787 #> 9   -9.021416 -32.59968 -160.29394 -54.063979 -58.259892 -171.45423  -81.93274 #> 10   8.195956 -15.38231 -143.07657 -36.846607 -41.042520 -154.23685  -64.71537 #>            8          9         10 #> 1   50.29655   9.021416  -8.195956 #> 2   73.87481  32.599679  15.382308 #> 3  201.56907 160.293941 143.076570 #> 4   95.33911  54.063979  36.846607 #> 5   99.53502  58.259892  41.042520 #> 6  212.72935 171.454226 154.236854 #> 7  123.20787  81.932744  64.715372 #> 8    0.00000 -41.275129 -58.492501 #> 9   41.27513   0.000000 -17.217372 #> 10  58.49250  17.217372   0.000000 #>  #> $h2 #>             1          2          3          4           5         6          7 #> 1     0.00000   96.14574   91.58972  123.85774  197.992394  -62.6200   80.79077 #> 2   -96.14574    0.00000   -4.55602   27.71200  101.846653 -158.7657  -15.35497 #> 3   -91.58972    4.55602    0.00000   32.26802  106.402673 -154.2097  -10.79895 #> 4  -123.85774  -27.71200  -32.26802    0.00000   74.134650 -186.4777  -43.06697 #> 5  -197.99239 -101.84665 -106.40267  -74.13465    0.000000 -260.6124 -117.20162 #> 6    62.62000  158.76574  154.20973  186.47775  260.612398    0.0000  143.41078 #> 7   -80.79077   15.35497   10.79895   43.06697  117.201620 -143.4108    0.00000 #> 8  -354.87876 -258.73302 -263.28904 -231.02102 -156.886369 -417.4988 -274.08799 #> 9   -58.15250   37.99324   33.43722   65.70524  139.839891 -120.7725   22.63827 #> 10 -188.75559  -92.60985  -97.16587  -64.89784    9.236805 -251.3756 -107.96481 #>           8          9          10 #> 1  354.8788   58.15250  188.755588 #> 2  258.7330  -37.99324   92.609848 #> 3  263.2890  -33.43722   97.165868 #> 4  231.0210  -65.70524   64.897845 #> 5  156.8864 -139.83989   -9.236805 #> 6  417.4988  120.77251  251.375593 #> 7  274.0880  -22.63827  107.964815 #> 8    0.0000 -296.72626 -166.123175 #> 9  296.7263    0.00000  130.603086 #> 10 166.1232 -130.60309    0.000000 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/rdists.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random distance matrices — rdists","title":"Generate random distance matrices — rdists","text":"Generate random distance matrices","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/rdists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random distance matrices — rdists","text":"","code":"rdists(N, names, scale = 100)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/rdists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random distance matrices — rdists","text":"N Number locations. names Names locations. scale Scale distance matrices. Default 100.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/rdists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random distance matrices — rdists","text":"List signed distances.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/rdists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate random distance matrices — rdists","text":"function generates random distance matrices using rnorm. scale controls scale distance matrices.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/rdists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random distance matrices — rdists","text":"","code":"set.seed(123) rdists(3) #> $h #>           loc1      loc2     loc3 #> loc1   0.00000  33.54875 268.2444 #> loc2  33.54875   0.00000 239.0565 #> loc3 268.24442 239.05652   0.0000 #>  #> $h1 #>           loc1      loc2      loc3 #> loc1   0.00000 -33.02982 -211.9184 #> loc2  33.02982   0.00000 -178.8886 #> loc3 211.91840 178.88858    0.0000 #>  #> $h2 #>            loc1       loc2      loc3 #> loc1   0.000000  -5.877934 -164.4557 #> loc2   5.877934   0.000000 -158.5777 #> loc3 164.455660 158.577725    0.0000 #>  rdists(3, scale = 1) #> $h #>          loc1     loc2     loc3 #> loc1 0.000000 2.401467 1.402200 #> loc2 2.401467 0.000000 1.039848 #> loc3 1.402200 1.039848 0.000000 #>  #> $h1 #>           loc1      loc2       loc3 #> loc1  0.000000 1.7259774  1.1477691 #> loc2 -1.725977 0.0000000 -0.5782084 #> loc3 -1.147769 0.5782084  0.0000000 #>  #> $h2 #>           loc1      loc2       loc3 #> loc1 0.0000000 -1.669744 -0.8054758 #> loc2 1.6697438  0.000000  0.8642680 #> loc3 0.8054758 -0.864268  0.0000000 #>  rdists(3, names = LETTERS[1:3]) #> $h #>          A        B        C #> A   0.0000 132.1300 387.3512 #> B 132.1300   0.0000 255.3009 #> C 387.3512 255.3009   0.0000 #>  #> $h1 #>           A         B        C #> A   0.00000  29.00887 95.66126 #> B -29.00887   0.00000 66.65239 #> C -95.66126 -66.65239  0.00000 #>  #> $h2 #>           A         B        C #> A    0.0000  128.9063 375.3530 #> B -128.9063    0.0000 246.4468 #> C -375.3530 -246.4468   0.0000 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sd_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate standard deviation for each location under each regime. — sd_rs","title":"Calculate standard deviation for each location under each regime. — sd_rs","text":"Calculate standard deviation location regime.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sd_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate standard deviation for each location under each regime. — sd_rs","text":"","code":"sd_rs(x, label)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sd_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate standard deviation for each location under each regime. — sd_rs","text":"x data.frame matrix. label vector regime labels. length must number rows x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sd_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate standard deviation for each location under each regime. — sd_rs","text":"list standard deviations regime.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sd_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate standard deviation for each location under each regime. — sd_rs","text":"","code":"set.seed(123) x <- matrix(rnorm(200), nrow = 100) label <- sample(1:2, 100, replace = TRUE) sd_rs(x, label = factor(label)) #> $`Regime 1` #> [1] 1.0091067 0.9136253 #>  #> $`Regime 2` #> [1] 0.7816577 1.0241517 #>"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for standard deviations for each column — sds","title":"Generic function for standard deviations for each column — sds","text":"Generic function standard deviations column","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for standard deviations for each column — sds","text":"","code":"sds(x, ...)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for standard deviations for each column — sds","text":"x R object. ... Additional parameters attributes.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for standard deviations for each column — sds","text":"vector standard deviations mcgf objects, plus list regime-switching standard deviations mcgf_rs objects.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function for standard deviations for each column — sds","text":"Refer sds.mcgf() sds.mcgf_rs() details.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","title":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","text":"Extract, calculate, assign standard deviations mcgf mcgf_rs object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","text":"","code":"# S3 method for mcgf sds(x, ...)  # S3 method for mcgf_rs sds(x, replace = FALSE, ...)  sds(x) <- value"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","text":"x mcgf mcgf_rs object. ... Additional parameters attributes. use. replace Logical; TRUE, sds recalculated. value vector (list vectors) standard deviations stations (regime combined).","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","text":"sds() returns empirical (regime-switching) standard deviations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","text":"mcgf objects, sds() extracts computes empirical standard deviations. output vector sds. mcgf_rs objects, sds() extracts computes regime-switching empirical standard deviations. output list vectors sds. element list corresponds sds regime. sds<- assigns sds x. Use add_ccfs() add ccfs sds x.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sds.mcgf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract, calculate, or assign standard deviations for an mcgf or mcgf_rs object. — sds.mcgf","text":"","code":"data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sds(sim1_mcgf) #>         1         2         3         4         5         6         7         8  #> 0.9862524 0.9748534 0.9770494 0.9698479 0.9599741 0.9994155 0.9646922 0.9475794  #>         9        10  #> 0.9896725 0.9755941   data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. sds(sim2_mcgf) #> $sds #>         1         2         3         4         5         6         7         8  #> 0.9199169 0.9718708 0.9578177 1.0106254 0.9892896 0.9313065 0.9840550 1.0140936  #>         9        10  #> 0.9373470 0.9417193  #>  #> $sds_rs #> $sds_rs$`Regime 1` #>         1         2         3         4         5         6         7         8  #> 0.9372674 0.9505589 0.9772365 1.0009960 0.9598231 0.9064875 1.0216556 0.9744436  #>         9        10  #> 0.9150341 0.9175002  #>  #> $sds_rs$`Regime 2` #>         1         2         3         4         5         6         7         8  #> 0.8616473 0.9871250 0.9277424 1.0078707 0.9900081 0.9431707 0.9187679 1.0449593  #>         9        10  #> 0.9381449 0.9527872  #>  #>  data(sim1) sim1_mcgf <- mcgf(sim1$data, dists = sim1$dists) #> `time` is not provided, assuming rows are equally spaced temporally. sim1_sds <- sds(sim1_mcgf) sds(sim1_mcgf) <- sim1_sds  data(sim2) sim2_mcgf <- mcgf_rs(sim2$data, dists = sim2$dists, label = sim2$label) #> `time` is not provided, assuming rows are equally spaced temporally. sim2_sds <- sds(sim2_mcgf) sds(sim2_mcgf) <- sim2_sds"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Markov chain Gaussian field — sim1","title":"Simulated Markov chain Gaussian field — sim1","text":"Simulated MCGF 10 locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Markov chain Gaussian field — sim1","text":"","code":"sim1"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Markov chain Gaussian field — sim1","text":"sim1: list containing data.frame 1000 rows 10 columns list distances","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated Markov chain Gaussian field — sim1","text":"sim1 contains simulated MCGF 10 locations. simulated separable base model triangular Lagrangian model. true parameters base model : \\(\\text{nugget} = 0, c = 0.001, \\gamma = 0.5, = 0.5, \\alpha = 0.8\\), Lagrangian model : \\(v1 = 200, v2 = 200, k = 2, \\lambda = 0.2\\)","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Markov chain Gaussian field — sim1","text":"","code":"# Code used to generate `sim1` # \\donttest{ library(mcgf) set.seed(123) x <- stats::rnorm(10, -110) y <- stats::rnorm(10, 50) locations <- cbind(x, y) h <- find_dists(locations, longlat = TRUE)  N <- 1000 lag <- 5  par_base <- list(     par_s = list(nugget = 0, c = 0.001, gamma = 0.5),     par_t = list(a = 0.5, alpha = 0.8) ) par_lagr <- list(v1 = 200, v2 = 200, k = 2)  sim1 <- mcgf_sim(     N = N, base = \"sep\", lagrangian = \"lagr_tri\",     par_base = par_base, par_lagr = par_lagr, lambda = 0.2,     dists = h, lag = lag ) sim1 <- sim1[-c(1:(lag + 1)), ] rownames(sim1) <- 1:nrow(sim1)  sim1 <- list(data = sim1, locations = locations, dists = h) # }"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated regime-switching Markov chain Gaussian field — sim2","title":"Simulated regime-switching Markov chain Gaussian field — sim2","text":"Simulated RS-MCGF 10 locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated regime-switching Markov chain Gaussian field — sim2","text":"","code":"sim2"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated regime-switching Markov chain Gaussian field — sim2","text":"sim2: list containing data.frame 1000 rows 10 columns, list distances, vector regime labels.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated regime-switching Markov chain Gaussian field — sim2","text":"sim2 contains simulated RS-MCGF 10 locations. simulated regime-switching separable base model. true parameters base model : $$\\text{Regime 1}: \\text{nugget} = 0, c = 0.01, \\gamma = 0.5, = 0.5, \\alpha = 0.2,$$ $$\\text{Regime 2}: \\text{nugget} = 0, c = 0.04, \\gamma = 0.5, = 0.3, \\alpha = 0.9.$$","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated regime-switching Markov chain Gaussian field — sim2","text":"","code":"# Code used to generate `sim2` # \\donttest{ library(mcgf) set.seed(123) x <- stats::rnorm(10, -110) y <- stats::rnorm(10, 50) locations <- cbind(x, y) h <- find_dists(locations, longlat = TRUE)  # simulate regimes K <- 2 N <- 1000 lag <- 5  tran_mat <- matrix(rnorm(K^2, mean = 0.06 / (K - 1), sd = 0.01), nrow = K) diag(tran_mat) <- rnorm(K, mean = 0.94, sd = 0.1) tran_mat <- sweep(abs(tran_mat), 1, rowSums(tran_mat), `/`) tran_mat #>            [,1]       [,2] #> [1,] 0.94635675 0.05364325 #> [2,] 0.06973429 0.93026571 #            [,1]       [,2] # [1,] 0.94635675 0.05364325 # [2,] 0.06973429 0.93026571  regime <- rep(NA, N) regime[1] <- 1  for (n in 2:(N)) {     regime[n] <- sample(1:K, 1, prob = tran_mat[regime[n - 1], ]) } table(regime) #> regime #>   1   2  #> 567 433  # regime #   1   2 # 567 433  # simulate RS MCGF par_base1 <- list(     par_s = list(nugget = 0, c = 0.001, gamma = 0.5),     par_t = list(a = 0.5, alpha = 0.2) )  par_base2 <- list(     par_s = list(nugget = 0, c = 0.004, gamma = 0.5),     par_t = list(a = 0.3, alpha = 0.9) )  sim2 <- mcgf_rs_sim(     N = N, label = regime,     base_ls = list(\"sep\"), lagrangian_ls = list(\"none\"),     par_base_ls = list(par_base1, par_base2),     lambda_ls = list(0.1, 0.3),     lag_ls = list(lag, lag),     dists_ls = list(h, h) ) sim2 <- sim2[-c(1:(lag + 1)), ] rownames(sim2) <- 1:nrow(sim2)  sim2 <- list(     data = sim2[, -1], locations = locations, dists = h,     label = sim2[, 1] ) # }"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim3.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated regime-switching Markov chain Gaussian field — sim3","title":"Simulated regime-switching Markov chain Gaussian field — sim3","text":"Simulated RS-MCGF 20 locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated regime-switching Markov chain Gaussian field — sim3","text":"","code":"sim3"},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated regime-switching Markov chain Gaussian field — sim3","text":"sim3: list containing data.frame 5000 rows 20 columns list locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated regime-switching Markov chain Gaussian field — sim3","text":"sim3 contains simulated RS-MCGF 20 locations. simulated base model regime-switching Lagrangian model. true parameters base model : \\(\\text{nugget} = 0, c = 0.05, \\gamma = 0.5, = 0.5, \\alpha = 0.2\\), true parameters Lagrangian model $$\\text{Regime 1}: \\lambda = 0.2, v_1 = -100, v_2 = 100, k = 2,$$ $$\\text{Regime 1}: \\lambda = 0.2, v_1 = 200, v_2 = 200, k = 2.$$ parameter estimation, base model assumed known used estimate regime-switching prevailing winds.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/reference/sim3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated regime-switching Markov chain Gaussian field — sim3","text":"","code":"# Code used to generate `sim3` # \\donttest{ library(mcgf) set.seed(123) x <- stats::rnorm(10, -110) y <- stats::rnorm(10, 50) locations <- cbind(x, y) h <- find_dists(locations, longlat = TRUE)  # simulate regimes K <- 2 N <- 1000 lag <- 5  tran_mat <- matrix(rnorm(K^2, mean = 0.06 / (K - 1), sd = 0.01), nrow = K) diag(tran_mat) <- rnorm(K, mean = 0.94, sd = 0.1) tran_mat <- sweep(abs(tran_mat), 1, rowSums(tran_mat), `/`) tran_mat #>            [,1]       [,2] #> [1,] 0.94635675 0.05364325 #> [2,] 0.06973429 0.93026571 # [,1]       [,2] # [1,] 0.94635675 0.05364325 # [2,] 0.06973429 0.93026571  regime <- rep(NA, N) regime[1] <- 1  for (n in 2:(N)) {     regime[n] <- sample(1:K, 1, prob = tran_mat[regime[n - 1], ]) } table(regime) #> regime #>   1   2  #> 567 433  # regime #   1   2 # 567 433  # simulate RS MCGF par_base <- list(     par_s = list(nugget = 0, c = 0.05, gamma = 0.5),     par_t = list(a = 0.5, alpha = 0.2) )  par_lagr1 <- list(v1 = -100, v2 = 100, k = 2) par_lagr2 <- list(v1 = 200, v2 = 200, k = 2)  sim3 <- mcgf_rs_sim(     N = N, label = regime,     base_ls = list(\"sep\"), lagrangian_ls = list(\"lagr_tri\"),     par_base_ls = list(par_base),     par_lagr_ls = list(par_lagr1, par_lagr2),     lambda_ls = list(0.2, 0.2),     lag_ls = list(lag, lag),     dists_ls = list(h, h) ) sim3 <- sim3[-c(1:(lag + 1)), ] rownames(sim3) <- 1:nrow(sim3)  sim3 <- list(     data = sim3[, -1], locations = locations, dists = h,     label = sim3[, 1] ) # }"},{"path":"https://tianxia-jia.github.io/mcgf/reference/to_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to array — to_ar","title":"Convert to array — to_ar","text":"Convert array","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/to_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to array — to_ar","text":"","code":"to_ar(h, lag_max, u = TRUE)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/to_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to array — to_ar","text":"h Distance matrix. lag_max Maximum time lag. u Logical; TRUE u_ar needs outputted.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/to_ar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to array — to_ar","text":"list arrays h u.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate an mcgf object — validate_mcgf","title":"Validate an mcgf object — validate_mcgf","text":"Validate mcgf object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate an mcgf object — validate_mcgf","text":"","code":"validate_mcgf(x)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate an mcgf object — validate_mcgf","text":"x mcgf object.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate an mcgf object — validate_mcgf","text":"S3 object class mcgf.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate an mcgf object — validate_mcgf","text":"validates mcgf object checking dists contains valid distance matrics/arrays.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate an mcgf_rs object — validate_mcgf_rs","title":"Validate an mcgf_rs object — validate_mcgf_rs","text":"Validate mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate an mcgf_rs object — validate_mcgf_rs","text":"","code":"validate_mcgf_rs(x)"},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf_rs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate an mcgf_rs object — validate_mcgf_rs","text":"x mcgf_rs object","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf_rs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate an mcgf_rs object — validate_mcgf_rs","text":"S3 object class mcgf_rs.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/validate_mcgf_rs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate an mcgf_rs object — validate_mcgf_rs","text":"validates mcgf_rs object checking label matching length.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Ireland wind data, 1961-1978 — wind","title":"Ireland wind data, 1961-1978 — wind","text":"Daily average wind speeds 1961-1978 11 synoptic meteorological stations Republic Ireland (Haslett raftery 1989). Wind speeds m/s. De-trended data sets also provided.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/wind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ireland wind data, 1961-1978 — wind","text":"","code":"wind"},{"path":"https://tianxia-jia.github.io/mcgf/reference/wind.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ireland wind data, 1961-1978 — wind","text":"wind: list containing data.frame 6574 rows 12 columns, list locations.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/wind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ireland wind data, 1961-1978 — wind","text":"data obtained gstat package, modified first column time stamps. Locations 11 stations given wind_loc. wind_train wind_test contain de-trended square-root transformed train (1961-1970) test (1971-1978) data sets. See Gneiting et al. (2006) de-trending details. wind_trend contains estimated annual trend station-wise mean training dataset.","code":""},{"path":"https://tianxia-jia.github.io/mcgf/reference/wind.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ireland wind data, 1961-1978 — wind","text":"Haslett, J. Raftery, . E. (1989). Space-time Modelling Long-memory Dependence: Assessing Ireland's Wind Power Resource (Discussion). Applied Statistics 38, 1-50. Gneiting, T., Genton, M., & Guttorp, P. (2006). Geostatistical Space-Time Models, Stationarity, Separability, Full Symmetry. C&H/CRC Monographs Statistics & Applied Probability (pp. 151–175). Chapman Hall/CRC.","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"mcgf-110","dir":"Changelog","previous_headings":"","what":"mcgf 1.1.0","title":"mcgf 1.1.0","text":"CRAN release: 2024-04-04","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"miscellaneous-1-1-0","dir":"Changelog","previous_headings":"version 1.1.0","what":"Miscellaneous","title":"mcgf 1.1.0","text":"New vignettes regime-switching models Updated description modified reference Updated simulated samples throughout package allow new locations","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"new-functions-1-1-0","dir":"Changelog","previous_headings":"version 1.1.0","what":"New functions","title":"mcgf 1.1.0","text":"R/krige_new.R R/find_dists_new.R R/cor_lagr_exp.R","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"function-updates-1-1-0","dir":"Changelog","previous_headings":"version 1.1.0","what":"Function updates","title":"mcgf 1.1.0","text":"added exponential function Lagrangian model added two arguments mcgf()","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"version 1.1.0","what":"Bug fixes","title":"mcgf 1.1.0","text":"find_dists: fixed bug computing long/lat distnaces add_lagr: dists_base -> dists_lagr","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"version 1.1.0","what":"New features","title":"mcgf 1.1.0","text":"Kriging new locations supported Exponential Lagrangian correlation function added","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"new-functions-1-1-0-1","dir":"Changelog","previous_headings":"version 1.0.1","what":"New functions","title":"mcgf 1.1.0","text":"misc/update_NEWS.R","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"function-updates-1-1-0-1","dir":"Changelog","previous_headings":"version 1.0.1","what":"Function updates","title":"mcgf 1.1.0","text":"added arguments check_dist_sign check_dist","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"bug-fixes-1-1-0-1","dir":"Changelog","previous_headings":"version 1.0.1","what":"Bug fixes","title":"mcgf 1.1.0","text":"fit_lagr: fixed check_dist dists_lagr add_lagr: dists_base -> dists_lagr","code":""},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"version-1-1-0-2","dir":"Changelog","previous_headings":"","what":"version 1.0.0","title":"mcgf 1.1.0","text":"Initial CRAN submimssion","code":""},{"path":[]},{"path":"https://tianxia-jia.github.io/mcgf/news/index.html","id":"newsmd-setup-1-1-0","dir":"Changelog","previous_headings":"version 0.0.0.9000","what":"NEWS.md setup","title":"mcgf 1.1.0","text":"added NEWS.md creation newsmd","code":""}]
